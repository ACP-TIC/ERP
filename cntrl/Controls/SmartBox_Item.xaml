<UserControl x:Class="cntrl.Controls.SmartBox_Item" x:Name="_SmartBox_Item"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Converter="clr-namespace:cntrl.Converters"
             xmlns:pref="clr-namespace:cntrl.Controls"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:entity="clr-namespace:entity;assembly=entity"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo"
             lex:ResxLocalizationProvider.DefaultDictionary="local"
             lex:LocalizeDictionary.DesignCulture="en-US"
             MinWidth="128" Focusable="True" Loaded="_SmartBox_Item_Loaded"
             mc:Ignorable="d" d:DesignHeight="26" d:DesignWidth="256" Margin="4,0,4,4">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="Bool2Visibility" />
        <Converter:sbxItem_CheckType x:Key="sbxItem_CheckType" />
        <CollectionViewSource x:Key="itemViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item}, CreateList=True}" />
        <Storyboard x:Key="ShowIcons">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="toggleButton1">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="toggleButton">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="button">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HideIcons">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="toggleButton1">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="toggleButton">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="button">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseEnter">
            <BeginStoryboard x:Name="ShowIcons_BeginStoryboard" Storyboard="{StaticResource ShowIcons}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave">
            <BeginStoryboard x:Name="HideIcons_BeginStoryboard" Storyboard="{StaticResource HideIcons}" />
        </EventTrigger>
    </UserControl.Triggers>
    <Grid Width="256">
        <Popup x:Name="popCrud" PopupAnimation="Slide" Placement="Right" Visibility="Collapsed">
            <StackPanel x:Name="ContactPopUp" />
        </Popup>
        <!-- TextBox for Searching -->
        <TextBox x:Name="tbxSearch" Padding="12,0,16,0"
                 Text="{Binding Path=Text, Delay=2000, ElementName=_SmartBox_Item, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                 metro:ControlsHelper.MouseOverBorderBrush="Silver"
                 metro:TextBoxHelper.SelectAllOnFocus="True"
                 metro:TextBoxHelper.Watermark="{lex:Loc Search}"
                 KeyUp="StartSearch" />
        <!-- Progress Ring -->
        <ProgressBar x:Name="progBar" IsIndeterminate="True" Height="26" Opacity=".32"
                     Foreground="{DynamicResource AccentColor_Brush}" FontSize="32" BorderBrush="{DynamicResource AccentColor_Brush}" Background="#FF393939" />
        <!-- Search Icon -->
        <Label FontFamily="/cntrl;component/Resources/#cognitivo" Content="L" VerticalAlignment="Center"
               HorizontalAlignment="Left" Foreground="{StaticResource Modal_BackgroundColor}" />

        <Border x:Name="border" CornerRadius="4"
                HorizontalAlignment="Right" VerticalAlignment="Top" Margin="-1" RenderTransformOrigin="0.5,0.5">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Visibility="{Binding}">
                <Button x:Name="button" Margin="1,0" Width="28" Height="28" Content="" ToolTip="{lex:Loc Refresh}" Foreground="Black" Background="Coral" BorderBrush="Black" BorderThickness="0.3"
                        FontFamily="/cntrl;component/Resources/#cognitivo"
                        PreviewMouseUp="Refresh_PreviewMouseUp" Visibility="Collapsed">
                    <Button.Effect>
                        <DropShadowEffect Color="Black" BlurRadius="3" ShadowDepth="0" />
                    </Button.Effect>
                </Button>
                <ToggleButton x:Name="toggleButton" Margin="1,0" Width="28" Height="28" Content="" ToolTip="{lex:Loc Searchonlyavailable}" Foreground="Black" Background="PaleVioletRed" BorderBrush="Black"
                              Visibility="{Binding Exclude_OutOfStock, Mode=TwoWay, ElementName=_SmartBox_Item, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Bool2Visibility}}" FontFamily="/cntrl;component/Resources/#cognitivo" BorderThickness="0.3"
                              IsChecked="{Binding Exclude_OutOfStock, ElementName=_SmartBox_Item, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <ToggleButton.Effect>
                        <DropShadowEffect Color="Black" BlurRadius="3" ShadowDepth="0" />
                    </ToggleButton.Effect>
                </ToggleButton>
                <ToggleButton x:Name="toggleButton1" Margin="1,0" Width="28" Height="28" Content="" ToolTip="{lex:Loc Searchexactcode}" Foreground="Black" Background="Gold" BorderBrush="Black" BorderThickness="0.3"
                             Visibility="{Binding ExactSearch, Mode=TwoWay, ElementName=_SmartBox_Item, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Bool2Visibility}}" FontFamily="/cntrl;component/Resources/#cognitivo"
                              IsChecked="{Binding ExactSearch,ElementName=_SmartBox_Item, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <ToggleButton.Effect>
                        <DropShadowEffect Color="Black" BlurRadius="3" ShadowDepth="0" />
                    </ToggleButton.Effect>
                </ToggleButton>
                <StackPanel x:Name="stackPanel" Orientation="Horizontal">
                    <ToggleButton Margin="1,0" Width="28" Height="28" Content="A"  Visibility="Collapsed" ToolTip="{lex:Loc Configuration}" Foreground="DimGray" Background="Silver" BorderBrush="DimGray" BorderThickness="0.3"
                                  FontFamily="/cntrl;component/Resources/#cognitivo">
                        <ToggleButton.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="3" ShadowDepth="0" />
                        </ToggleButton.Effect>
                    </ToggleButton>
                    <Popup x:Name="popupCustomize" IsOpen="False" Closed="popupCustomize_Closed" StaysOpen="False"
                               PlacementTarget="{Binding ElementName=stackpnlCustomize}" Placement="Mouse">
                        <Border BorderBrush="{StaticResource AccentColor_Introvert}" BorderThickness="3">
                            <StackPanel Orientation="Vertical" Background="White">
                                <CheckBox x:Name="rbtnCode" Style="{StaticResource input_checkbox}" Content="{lex:Loc Code}"
                                      IsChecked="{Binding Source={x:Static pref:smartBoxItemSetting.Default}, Path=SearchFilter, Mode=TwoWay, Converter={StaticResource sbxItem_CheckType}, ConverterParameter=1}"
                                      Checked="RadioButton_Checked" />
                                <CheckBox x:Name="rbtnName" Style="{StaticResource input_checkbox}" Content="{lex:Loc Name}"
                                      IsChecked="{Binding Source={x:Static pref:smartBoxItemSetting.Default}, Path=SearchFilter, Mode=TwoWay, Converter={StaticResource sbxItem_CheckType}, ConverterParameter=2}"
                                      Checked="RadioButton_Checked" />
                                <CheckBox x:Name="rbtnTag" Style="{StaticResource input_checkbox}" Content="{lex:Loc Tags}"
                                      IsChecked="{Binding Source={x:Static pref:smartBoxItemSetting.Default}, Path=SearchFilter, Mode=TwoWay, Converter={StaticResource sbxItem_CheckType}, ConverterParameter=3}"
                                      Checked="RadioButton_Checked" />
                            </StackPanel>
                        </Border>
                    </Popup>
                </StackPanel>
                <Button x:Name="button1" Margin="1,0" Width="28" Height="28" Content="+" ToolTip="{lex:Loc New}" Foreground="Black" Background="PaleGreen" BorderBrush="Black" BorderThickness="0.3"
                        FontFamily="/cntrl;component/Resources/#cognitivo"
                        PreviewMouseUp="Add_PreviewMouseUp"
                        Visibility="{Binding can_New, Mode=TwoWay, ElementName=_SmartBox_Item, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Bool2Visibility}}">
                    <Button.Effect>
                        <DropShadowEffect Color="Black" BlurRadius="3" ShadowDepth="0" />
                    </Button.Effect>
                </Button>
            </StackPanel>
        </Border>

        <StackPanel Visibility="Collapsed" Orientation="Horizontal" HorizontalAlignment="Right" Margin="-26,0">
            <TextBox MinWidth="26" Text="34.2" />
        </StackPanel>

        <Popup x:Name="popQuantity" HorizontalAlignment="Center"
               PopupAnimation="Slide" IsOpen="False">
            <TextBox x:Name="tbxQuantity" Margin="1" KeyUp="Quantity_TextChanged"
                     metro:TextBoxHelper.UseFloatingWatermark="True" metro:TextBoxHelper.Watermark="{lex:Loc Quantity}"
                     metro:TextBoxHelper.SelectAllOnFocus="True"
                     FontSize="24" HorizontalContentAlignment="Right"
                     Text="{Binding ElementName=_SmartBox_Item, Path=Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N}"
                     Width="{Binding ElementName=_SmartBox_Item, Path=ActualWidth}" />
        </Popup>

        <Popup x:Name="ItemPopUp" IsOpen="False" StaysOpen="False">
            <Border Background="{StaticResource AccentColor_Brush}">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="1" Direction="270" Opacity="0.8" />
                </Border.Effect>
                <DataGrid MaxWidth="512" MaxHeight="600" AutoGenerateColumns="False" HeadersVisibility="None" ItemsSource="{Binding Source={StaticResource itemViewSource}}"
                          IsReadOnly="True" MouseDoubleClick="ItemGrid_MouseDoubleClick" Margin="4">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Code}" Binding="{Binding Code}" MinWidth="64" MaxWidth="128" />
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Name}" Binding="{Binding Name}" FontWeight="Bold" MinWidth="128" MaxWidth="256" />
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Brand}" Binding="{Binding Brand}" FontWeight="Bold" MinWidth="64" MaxWidth="128" />
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Stock}" Binding="{Binding Quantity, StringFormat=N2}" Width="32" />
                    </DataGrid.Columns>
                </DataGrid>
            </Border>
        </Popup>
    </Grid>
</UserControl>
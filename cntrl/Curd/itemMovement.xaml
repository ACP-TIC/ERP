<UserControl x:Class="cntrl.Curd.itemMovement"
           xmlns:cntrl="clr-namespace:cntrl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:lex="http://wpflocalizeextension.codeplex.com" 
             lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
             lex:ResxLocalizationProvider.DefaultDictionary="local"
             lex:LocalizeDictionary.DesignCulture="en-US" 
             VerticalAlignment="Center"
             xmlns:converter="clr-namespace:Cognitivo.Converters"
             xmlns:entity="clr-namespace:entity;assembly=entity" 
             mc:Ignorable="d" Width="360" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <converter:ActiveValueConverter x:Key="ActiveValueConverter"/>
        <CollectionViewSource x:Key="item_transferViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_transfer}, CreateList=True}"/>
        <CollectionViewSource x:Key="item_transferitem_transfer_detailViewSource" Source="{Binding item_transfer_detail, Source={StaticResource item_transferViewSource}}"/>
        <CollectionViewSource x:Key="location_destViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_location}, CreateList=True}"/>
        <CollectionViewSource x:Key="location_originViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_location}, CreateList=True}"/>
        <CollectionViewSource x:Key="app_statusViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:Status}, CreateList=True}"/>
        <CollectionViewSource x:Key="security_userViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:security_user}, CreateList=True}"/>
        <CollectionViewSource x:Key="itemViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item}, CreateList=True}"/>
    </UserControl.Resources>

    <UserControl.Effect>
        <DropShadowEffect ShadowDepth="0" BlurRadius="8" Opacity="0.75"/>
    </UserControl.Effect>

    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="White" >
        <StackPanel x:Name="stackMain">
            <Grid >
                <Border Background="WhiteSmoke" />
                <Border Width="45" HorizontalAlignment="Left" Background="#344C6B">
                    <Image Source="/cntrl;component/Images/Outline_White/move_by_trolley_filled-100.png" 
                           Height="32" Opacity="0.64"/>
                </Border>
                <Label Content="{lex:Loc Item Movement}" FontSize="25" Margin="50,0,0,0"/>
                <Polygon HorizontalAlignment="Right" Points="-24,0,0,0,0,24" 
                         Fill="{Binding is_active, Converter={StaticResource ActiveValueConverter}}"/>
                <Label Content="c" FontSize="18" VerticalAlignment="Center" Margin="5"
                       HorizontalAlignment="Right" MouseUp="btnCancel_Click" 
                       FontFamily="/cntrl;component/Resources/#cognitivo" Cursor="Hand"/>
            </Grid>
            <StackPanel x:Name="stpDisplay" HorizontalAlignment="Center" Margin="8">
                <Label Content="{lex:Loc Date}" Style="{DynamicResource input_label}"/>
                <DatePicker Style="{StaticResource input_datepicker }"
                            SelectedDate="{Binding trans_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="{lex:Loc Destination}" Style="{DynamicResource input_label}"/>
                <ComboBox x:Name="id_location_destinationComboBox" Grid.Column="1" Grid.Row="1" DisplayMemberPath="name" 
                          SelectedValuePath="id_location" ItemsSource="{Binding Source={StaticResource location_destViewSource}}" 
                          SelectedValue="{Binding id_location_destination, 
                                                  Mode=TwoWay, 
                                                  ValidatesOnExceptions=True, 
                                                  NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" 
                          Style="{StaticResource input_combobox}"/>
                <Label Content="{lex:Loc Origin}" Style="{DynamicResource input_label}"/>
                <ComboBox x:Name="id_location_originComboBox" Grid.Column="1" DisplayMemberPath="name" 
                          SelectedValuePath="id_location" Grid.Row="2" 
                          ItemsSource="{Binding Source={StaticResource location_originViewSource}}" 
                          SelectedValue="{Binding id_location_origin, 
                                                  Mode=TwoWay, ValidatesOnExceptions=True, 
                                                  NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" 
                          Style="{StaticResource input_combobox}"/>
                <Label Content="{lex:Loc Status}" Style="{DynamicResource input_label}"/>
                <ComboBox x:Name="statusComboBox" Grid.Column="1" DisplayMemberPath="name" 
                          SelectedValue="{Binding status, Mode=TwoWay, NotifyOnValidationError=True, 
                          ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="status" 
                          ItemsSource="{Binding Source={StaticResource app_statusViewSource}}"  Grid.Row="3" 
                          Style="{StaticResource input_combobox}" />


            </StackPanel>
            <DataGrid Height="Auto" x:Name="item_transfer_detailDataGrid" 
                      AutoGenerateColumns="False" Grid.ColumnSpan="2" 
                      EnableRowVirtualization="True" 
                      ItemsSource="{Binding Source={StaticResource item_transferitem_transfer_detailViewSource}}" 
                      Grid.Row="1" RowDetailsVisibilityMode="VisibleWhenSelected">
                <DataGrid.Columns>
                    <!--<DataGridTextColumn Binding="{Binding code}" Header="code" Width="SizeToHeader"/>-->
                    <!--<DataGridTextColumn Binding="{Binding product}" Header="product" Width="200"/>-->
                    <DataGridComboBoxColumn 
                        ItemsSource="{Binding Source={StaticResource itemViewSource}}" 
                        SelectedValueBinding="{Binding id_item , UpdateSourceTrigger=PropertyChanged}" 
                        DisplayMemberPath="name" SelectedValuePath="id_item" 
                        Header="Product" Width="200"/>
                    <DataGridTextColumn Binding="{Binding quantity, UpdateSourceTrigger=PropertyChanged}" Header="quantity" Width="SizeToHeader"/>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Background="WhiteSmoke">
                <Button x:Name="btnSave" Content="{lex:Loc Save}" Foreground="RoyalBlue" HorizontalAlignment="Right"
                    FontWeight="Medium" BorderThickness="0" Cursor="Hand" Focusable="True" Click="btnSave_Click"/>
               
            </Grid>
        </StackPanel>
    </ScrollViewer>
</UserControl>
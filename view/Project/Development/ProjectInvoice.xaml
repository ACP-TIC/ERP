<Page x:Class="Cognitivo.Project.ProjectInvoice"
     x:Name="_TaskView" Title="{lex:Loc ActivityPlan}"
       xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:entity="clr-namespace:entity;assembly=entity"
      xmlns:local="clr-namespace:cntrl;assembly=cntrl"
      xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
            xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"  
      xmlns:loc="clr-namespace:cntrl.Converters;assembly=cntrl"
      xmlns:converter="clr-namespace:Cognitivo.Converters"
     
      xmlns:data="clr-namespace:entity;assembly=entity"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:Panels="clr-namespace:cntrl.Panels;assembly=cntrl" 
        lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
        lex:ResxLocalizationProvider.DefaultDictionary="local"
      mc:Ignorable="d"
      MinHeight="600" MinWidth="800" Loaded="Page_Loaded">
    <Page.Resources>
        <loc:LevelToMarginConverter x:Key="ConvertToThickness" LeftMargin="12" OtherMargin="4" />
        <converter:TrueToFalseConverter x:Key="TrueToFalse"/>
        <BooleanToVisibilityConverter x:Key="Bool2Visibility"/>
        <converter:Status_Project_2ColorConverter x:Key="ProjectStatus2Color"/>
        <converter:ProjectPending2BooleanConverter x:Key="ProjectPending2Bool"/>
        <converter:salesorderdetailtostatus x:Key="salesorderdetailtostatus"/>
        <converter:salesorderdetailtoEnable x:Key="salesorderdetailtoEnable"/>
        <CollectionViewSource x:Key="projectViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:project}, CreateList=True}"/>
        <CollectionViewSource x:Key="project_taskViewSource" Source="{Binding project_task, Source={StaticResource projectViewSource}}" />
       
    </Page.Resources>
   
    <Grid DataContext="{StaticResource projectViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
                       <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden" 
              Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5" IsVisibleChanged="crud_modal_IsVisibleChanged"/>
        <ListBox Background="{StaticResource AccentColor_Brush}"
			     ScrollViewer.VerticalScrollBarVisibility="Auto" 
			     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
			     ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
			     ItemsSource="{Binding}" Grid.Row="1" SelectionChanged="ListBox_SelectionChanged" Grid.RowSpan="3">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordCode="{Binding est_start_date, StringFormat=d}" 
						recordSecondaryName="{Binding priority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						recordName="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                    />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <!--<StackPanel Grid.Column="1" Grid.Row="1" Background="White"  >
          
            <Grid>
                <Label Content="{lex:Loc Condition}"  Style="{StaticResource input_label}"/>
               
            </Grid>
            <ComboBox Style="{StaticResource input_combobox}" x:Name="cbxCondition" 
                                  Grid.Column="1" DisplayMemberPath="name" SelectedValuePath="id_condition"
                                SelectionChanged="cbxCondition_SelectionChanged">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel/>
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>
            <Grid>
                <Label Content="{lex:Loc Contract}" Style="{StaticResource input_label}"/>
              
            </Grid>
            <ComboBox Style="{StaticResource input_combobox}" x:Name="cbxContract" 
                          DisplayMemberPath="name" SelectedValuePath="id_contract">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel/>
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>
            <Label Content="{lex:Loc Currency}" Style="{StaticResource input_label}"/>
            <Controls:CurrencyBox x:Name="cbxCurrency" SelectedValue="{Binding id_currencyfx, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Margin="4,0,340,0"/>
           
        </StackPanel>-->
        
        <Grid Grid.Row="1" Grid.Column="1" Background="White" DataContext="{StaticResource project_taskViewSource}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.Resources>

                    <HierarchicalDataTemplate DataType="{x:Type data:project_task}" 
                                              ItemsSource="{Binding child, IsAsync=True, Mode=TwoWay}">
                        <Panels:pnl_TreeView StatusColor="{Binding sales_detail, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged,
                                                                   Converter={StaticResource salesorderdetailtostatus}}" 
                                             IsEnabled="{Binding sales_detail, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged,
                                                                   Converter={StaticResource salesorderdetailtoEnable}}" 
                                             IsChecked="{Binding IsSelected, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                             Code="{Binding code, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"
                                             TaskName="{Binding item_description}" 
                                             Quantity="{Binding unit_cost_est, StringFormat=N2, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"/>
                    </HierarchicalDataTemplate>
                </Grid.Resources>
             
                <TextBlock Style="{StaticResource TextAreaH2}" Margin="40,58,36,0" 
                           Text="{Binding project.name, FallbackValue=ProjectName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                           HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" />

                <ToggleButton x:Name="btnExpandAll" Width="32" Height="32" Margin="6,61"  FontSize="16"
                              VerticalAlignment="Top" HorizontalAlignment="Left"
                              Style="{DynamicResource MetroCircleToggleButtonStyle}" Content="&#xE81D;" FontFamily="/Cognitivo;component/Resources/#cognitivo" 
                              Unchecked="btnExpandAll_Checked" Checked="btnExpandAll_Checked"/>

                <TreeView x:Name="treeProject" Margin="0,95,0,0" ItemsSource="{Binding}" 
                          VirtualizingPanel.VirtualizationMode="Standard" VirtualizingPanel.IsVirtualizing="True" 
                          ScrollViewer.CanContentScroll="True"   >
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding  ElementName=_TaskView, Path=ViewAll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            </Setter>

                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemsPanel>
                        <ItemsPanelTemplate >
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </TreeView.ItemsPanel>
                </TreeView>
            </Grid>

            <StackPanel Background="WhiteSmoke" Grid.Column="2" DataContext="{Binding SelectedItem, ElementName=treeProject}">
                <Label Style="{StaticResource generic_Label}" HorizontalAlignment="Center" 
                       Content="{Binding parent.name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, FallbackValue=---}"/>
                <TextBlock Text="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="0,-10,0,8"
                           Style="{StaticResource TextAreaH2}" HorizontalAlignment="Center"/>
                <!--<cntrl:toolBar_Mini appName="ActivityPlan"
                    btnNew_Click="toolBar_Mini_btnNew_Click"
                    btnEdit_Click="toolBar_Mini_btnEdit_Click"
                    btnSave_Click="toolBar_Mini_btnSave_Click"
                    btnDelete_Click="toolBar_Mini_btnDelete_Click"
                    btnApprove_Click="toolBar_Mini_btnApprove_Click"
                    btnAnull_Click="toolBar_Mini_btnAnull_Click"
                    />-->

               

             

                <StackPanel HorizontalAlignment="Center" Margin="0,16">
                    <StackPanel x:Name="stpcode">

                        <Button Content="{lex:Loc SalesOrder}" Style="{StaticResource btn_green}" Background="White" Margin="0,4" Click="Button_Click"/>

                        <Label Content="{lex:Loc Description}" Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtDesc" Text="{Binding item_description,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_textbox}"/>
                        <Label Content="{lex:Loc UnitPrice}" Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtUnitCost" Text="{Binding unit_cost_est,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_textbox}"/>
                    </StackPanel>

                  
                </StackPanel>

            </StackPanel>
        </Grid>
        <cntrl:toolBar x:Name="toolBar" Grid.ColumnSpan="2" VerticalAlignment="Top" HorizontalAlignment="Stretch"
                                          
                       appName="Project"
                      />

      

    </Grid>
</Page>
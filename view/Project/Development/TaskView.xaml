<Page x:Class="Cognitivo.Project.Development.TaskView" x:Name="_TaskView" Title="{lex:Loc ActivityPlan}"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:entity="clr-namespace:entity;assembly=entity"
      xmlns:local="clr-namespace:cntrl;assembly=cntrl"
      xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
            xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"  
      xmlns:loc="clr-namespace:cntrl.Converters;assembly=cntrl"
      xmlns:converter="clr-namespace:Cognitivo.Converters"
     
      xmlns:data="clr-namespace:entity;assembly=entity"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:Panels="clr-namespace:cntrl.Panels;assembly=cntrl" 
        lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
        lex:ResxLocalizationProvider.DefaultDictionary="local"
      mc:Ignorable="d"
      MinHeight="600" MinWidth="800" Loaded="Page_Loaded">
    <Page.Resources>
        <loc:LevelToMarginConverter x:Key="ConvertToThickness" LeftMargin="12" OtherMargin="4" />
        <converter:TrueToFalseConverter x:Key="TrueToFalse"/>
        <BooleanToVisibilityConverter x:Key="Bool2Visibility"/>
        <converter:Status_Project_2ColorConverter x:Key="ProjectStatus2Color"/>
        <converter:ProjectPending2BooleanConverter x:Key="ProjectPending2Bool"/>
        <CollectionViewSource x:Key="app_dimensionViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_dimension}, CreateList=True}"/>
        <CollectionViewSource x:Key="app_measurementViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_measurement}, CreateList=True}"/>

        <CollectionViewSource x:Key="projectViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:project}, CreateList=True}"/>
        <CollectionViewSource x:Key="itemSearchViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item}, CreateList=True}"/>
        <CollectionViewSource x:Key="project_taskViewSource" Source="{Binding project_task, Source={StaticResource projectViewSource}}" />
        <!--<CollectionViewSource x:Key="project_task_dimensionViewSource" Source="{Binding project_task_dimension, Source={StaticResource project_taskViewSource}}"/>-->
        <CollectionViewSource x:Key="project_task_dimensionViewSource"   d:DesignSource="{d:DesignInstance {x:Type entity:project_task_dimension}, CreateList=True}"/>
        <CollectionViewSource x:Key="project_templateViewSource" d:DesignSource="{d:DesignInstance {x:Type data:project_template}, CreateList=True}"/>
        <CollectionViewSource x:Key="project_templateproject_template_detailViewSource" Source="{Binding project_template_detail, Source={StaticResource project_templateViewSource}}"/>
    </Page.Resources>
    <Grid DataContext="{StaticResource projectViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid x:Name="crud_modal" Background="#7FC0C0C0" Visibility="Hidden" Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5" IsVisibleChanged="crud_modal_IsVisibleChanged"/>
        <ListBox Background="{StaticResource AccentColor_Brush}"
			     ScrollViewer.VerticalScrollBarVisibility="Auto" 
			     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
			     ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
			     ItemsSource="{Binding}" Grid.Row="1" SelectionChanged="ListBox_SelectionChanged">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordCode="{Binding est_start_date, StringFormat=d}" 
						recordSecondaryName="{Binding priority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						recordName="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                        State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid Grid.Row="1" Grid.Column="1" Background="White" DataContext="{StaticResource project_taskViewSource}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.Resources>

                    <HierarchicalDataTemplate DataType="{x:Type data:project_task}" 
                                              ItemsSource="{Binding child, IsAsync=True, Mode=TwoWay}">
                        <Panels:pnl_TreeView StatusColor="{Binding status, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged,
                                                                   Converter={StaticResource ProjectStatus2Color}}"  
                                             IsChecked="{Binding IsSelected, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                             Code="{Binding code, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"
                                             TaskName="{Binding item_description}" Quantity="{Binding quantity_est, StringFormat=N2, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"/>
                    </HierarchicalDataTemplate>
                </Grid.Resources>
                <Label Margin="50,40,36,0" Width="150"
                           Content="{Binding project.project_template.name, FallbackValue=TemplateName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                           HorizontalAlignment="Center" VerticalAlignment="Top" />
                <TextBlock Style="{StaticResource TextAreaH2}" Margin="40,58,36,0" 
                           Text="{Binding project.name, FallbackValue=ProjectName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                           HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" />

                <ToggleButton x:Name="btnExpandAll" Width="32" Height="32" Margin="6,61"  FontSize="16"
                              VerticalAlignment="Top" HorizontalAlignment="Left"
                              Style="{DynamicResource MetroCircleToggleButtonStyle}" Content="&#xE81D;" FontFamily="/Cognitivo;component/Resources/#cognitivo" 
                              Unchecked="btnExpandAll_Checked" Checked="btnExpandAll_Checked"/>
              
                <TreeView x:Name="treeProject" Margin="0,108,0,-13" ItemsSource="{Binding}" 
                          VirtualizingPanel.VirtualizationMode="Standard" VirtualizingPanel.IsVirtualizing="True" 
                          ScrollViewer.CanContentScroll="True" SelectedItemChanged="treeProject_SelectedItemChanged"  >
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding  ElementName=_TaskView, Path=ViewAll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            </Setter>
                          
                        </Style>
                    </TreeView.ItemContainerStyle>
                 
                    <TreeView.ItemsPanel>
                        <ItemsPanelTemplate >
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </TreeView.ItemsPanel>
                </TreeView>
            </Grid>

            <StackPanel Background="WhiteSmoke" Grid.Column="2" DataContext="{Binding SelectedItem, ElementName=treeProject}">
                <Label Style="{StaticResource generic_Label}" HorizontalAlignment="Center" 
                       Content="{Binding parent.name, FallbackValue=---}"/>
                <TextBlock Text="{Binding name}" Margin="0,-10,0,8"
                           Style="{StaticResource TextAreaH2}" HorizontalAlignment="Center"/>
                <!--<cntrl:toolBar_Mini appName="ActivityPlan"
                    btnNew_Click="toolBar_Mini_btnNew_Click"
                    btnEdit_Click="toolBar_Mini_btnEdit_Click"
                    btnSave_Click="toolBar_Mini_btnSave_Click"
                    btnDelete_Click="toolBar_Mini_btnDelete_Click"
                    btnApprove_Click="toolBar_Mini_btnApprove_Click"
                    btnAnull_Click="toolBar_Mini_btnAnull_Click"
                    />-->
                
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="1" Margin="4" Background="White">
                    <Label Content="{lex:Loc User}" VerticalAlignment="Center"/>
                    <cntrl:toolIcon Click="Label_MouseDown" imgSource="j" icoName="{lex:Loc Approve}" VerticalAlignment="Center"/>
                    <cntrl:toolIcon Click="Label_MouseDown_1" imgSource="k" icoName="{lex:Loc Annul}" VerticalAlignment="Center"/>
                </StackPanel>

                <Grid>
                    <Rectangle Margin="6" Height="1" Fill="Gainsboro"/>
                    <Border CornerRadius="10" Background="White" HorizontalAlignment="Center">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"/>
                        </Border.Effect>
                        <StackPanel Orientation="Horizontal">
                            <Label MouseDown="btnAddParentTask_Click" ToolTip="{lex:Loc NewParentTask}"
                                   Style="{StaticResource btn_Label}" Content="+" Margin="10,4" FontSize="15"/>
                            <Label MouseDown="btnNewTask_Click" ToolTip="{lex:Loc New}"
                                   Style="{StaticResource btn_Label}" Content="+" Margin="10,4"/>
                            <Label MouseDown="btnEditTask_Click" ToolTip="{lex:Loc Edit}" IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProjectPending2Bool}}"
                                   Style="{StaticResource btn_Label}" Content="e" Margin="10,4"/>
                            <Label MouseDown="btnSaveTask_Click" ToolTip="{lex:Loc Save}" IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProjectPending2Bool}}"
                                   Style="{StaticResource btn_Label}" Content="s" Margin="10,4"/>
                            <Rectangle Width="1" Fill="Gainsboro" Margin="4"/>
                            <Label MouseDown="btnDeleteTask_Click" ToolTip="{lex:Loc Delete}"
                                   Style="{StaticResource btn_Label}" Content="d" Margin="10,4"/>
                        </StackPanel>
                    </Border>
                </Grid>

                <StackPanel HorizontalAlignment="Center" Margin="0,16">
                    <StackPanel x:Name="stpcode" IsEnabled="False">
                        <Label Content="{lex:Loc ItemType}" Style="{StaticResource input_label}"/>
                        <ComboBox x:Name="cbxItemType" Style="{StaticResource input_combobox}" 
IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProjectPending2Bool}}" SelectedValue="{Binding items.id_item_type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
							SelectionChanged="cbxItemType_SelectionChanged"/>
                        <Label Content="{lex:Loc Code}" Style="{StaticResource input_label}"/>
                        <TextBox Text="{Binding code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProjectPending2Bool}}" Style="{StaticResource input_textbox}"/>
                        <Label Content="{lex:Loc Item}" Style="{StaticResource input_label}"/>
                        <Controls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="item_Select" Text="{Binding items.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="{lex:Loc description}" Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtDesc" Text="{Binding item_description,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_textbox}"/>
                    </StackPanel>

                    <StackPanel x:Name="stpdate" Visibility="Collapsed" IsEnabled="False">
                        <Label Content="{lex:Loc StartDate}" Style="{StaticResource input_label}" />
                        <DatePicker Style="{StaticResource input_datepicker}"
IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProjectPending2Bool}}"                                    SelectedDate="{Binding start_date_est, StringFormat=d, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        <Label Content="{lex:Loc EndDate}" Style="{StaticResource input_label}"/>
                        <DatePicker Style="{StaticResource input_datepicker}"
IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProjectPending2Bool}}"                                    SelectedDate="{Binding end_date_est, StringFormat=d, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    </StackPanel>

                    <StackPanel x:Name="stpitem" Visibility="Collapsed" IsEnabled="False">
                        <Label Content="{lex:Loc Quantity}" Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtqty" 
                                     IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProjectPending2Bool}}"
                                     Text="{Binding quantity_est,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_textbox}"/>
                        <Label Content="{lex:Loc ByDimension}" Style="{StaticResource input_label}"/>
                        <!--<DataGrid x:Name="project_task_dimensionDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" 
							        ItemsSource="{Binding Source={StaticResource project_task_dimensionViewSource}}" 
                                    Width="256" IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProjectPending2Bool}}" Margin="5,0"
							        RowDetailsVisibilityMode="VisibleWhenSelected">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn x:Name="dimentionComboCol" Header="Dimension" Width="*"
									                        ItemsSource="{Binding Source={StaticResource app_dimensionViewSource}}" DisplayMemberPath="name" SelectedValuePath="id_app_dimension"
									                        SelectedValueBinding="{Binding id_app_dimension,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn x:Name="valueColumn2" Binding="{Binding value,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Header="value" Width="100"/>
                                <DataGridComboBoxColumn x:Name="AppMeasurementComboBox" 
									                        DisplayMemberPath="name" SelectedValuePath="id_measurement"  
									                        ItemsSource="{Binding Source={StaticResource app_measurementViewSource}}"
									                        SelectedValueBinding="{Binding id_measurement,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Measurement" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>-->
                        <DataGrid x:Name="project_task_dimensionDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True"  
                                  ItemsSource="{Binding Source={StaticResource project_task_dimensionViewSource}}" RowDetailsVisibilityMode="VisibleWhenSelected" RowEditEnding="project_task_dimensionDataGrid_RowEditEnding" >
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn x:Name="dimentionComboCol" Header="Dimension" Width="*"
									                        ItemsSource="{Binding Source={StaticResource app_dimensionViewSource}}" DisplayMemberPath="name" SelectedValuePath="id_dimension"
									                        SelectedValueBinding="{Binding id_dimension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn x:Name="valueColumn2" Binding="{Binding value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Header="value" Width="100"/>
                                <DataGridComboBoxColumn x:Name="AppMeasurementComboBox" 
									                        DisplayMemberPath="name" SelectedValuePath="id_measurement"  
									                        ItemsSource="{Binding Source={StaticResource app_measurementViewSource}}"
									                        SelectedValueBinding="{Binding id_measurement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Measurement" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>

                    </StackPanel>
                </StackPanel>

            </StackPanel>
        </Grid>
        <cntrl:toolBar x:Name="toolBar" Grid.ColumnSpan="2" VerticalAlignment="Top" HorizontalAlignment="Stretch"
                       btnDelete_Click="toolBar_btnDelete_Click" 
                       btnNew_Click="toolBar_btnNew_Click" 
                       btnEdit_Click="toolBar_btnEdit_Click"
                       btnSearch_Click="toolBar_btnSearch_Click" appName="Project"
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Center">
            <Label Content="{lex:Loc Customer}" VerticalAlignment="Center"/>
            <cntrl:toolIcon Click="Button_Click" imgSource="j" icoName="{lex:Loc Approve}" VerticalAlignment="Center"/>
            <cntrl:toolIcon Click="Button_Click_1" imgSource="k" icoName="Rechazar" VerticalAlignment="Center"/>
        </StackPanel>
        
    </Grid>
</Page>

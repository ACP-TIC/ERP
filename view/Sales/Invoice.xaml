<Page x:Class="Cognitivo.Sales.Invoice" Title="{lex:Loc SalesInvoice}" x:Name="SalesInvoice"
      xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:pref="clr-namespace:Cognitivo.Sales"
      xmlns:mainpref="clr-namespace:Cognitivo.Properties"
      xmlns:entity="clr-namespace:entity;assembly=entity"
      xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
      xmlns:converter="clr-namespace:Cognitivo.Converters"
      xmlns:customcmd="clr-namespace:Cognitivo.Class"
      xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"  
          xmlns:lex="http://wpflocalizeextension.codeplex.com"        
          lex:LocalizeDictionary.DesignCulture="en-US"
          lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
          lex:ResxLocalizationProvider.DefaultDictionary="local"
      mc:Ignorable="d"
      MinHeight="550" MinWidth="800" Loaded="SalesInvoice_Loaded">
    <Page.CommandBindings>
        <CommandBinding x:Name="DeleteCommand" Command="customcmd:CustomCommands.Delete" 
                        CanExecute="DeleteCommandBinding_CanExecute" 
                        Executed="DeleteCommandBinding_Executed"/>
    </Page.CommandBindings>
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <converter:CustomStringFormatConverter x:Key="CustomStringFormat"/>
        <converter:Status2Enable x:Key="Status2Enable"/>
        <converter:BooleanToIsStatusConverter x:Key="BoolToIssued"/>
        <converter:IsActive2ColorConverter x:Key="ActiveValueConverter"/>
        <converter:TextChangeToIsEnableConverter x:Key="TextChangeToEnable"/>
        <converter:TrueToFalseConverter x:Key="TrueToFalse"/>
        <CollectionViewSource x:Key="sales_invoiceViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:sales_invoice}, CreateList=True}" />
        <CollectionViewSource x:Key="sales_invoicesales_invoice_detailViewSource" Source="{Binding sales_invoice_detail, Source={StaticResource sales_invoiceViewSource}}"/>
        <CollectionViewSource x:Key="app_vat_groupViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_vat_group}, CreateList=True}"/>
        <CollectionViewSource x:Key="sales_invoicesales_invoice_detailsales_packinglist_relationViewSource" Source="{Binding sales_packinglist_relation, Source={StaticResource sales_invoicesales_invoice_detailViewSource}}"/>
    </Page.Resources>
    <Grid DataContext="{StaticResource sales_invoiceViewSource}" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TabControl Grid.Row="1" Margin="-3">
            <TabItem Padding="0" IsSelected="{Binding ElementName=toolBar, Path=IsSelected_GridView, FallbackValue=False, UpdateSourceTrigger=PropertyChanged}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Background="WhiteSmoke" Grid.Column="0">
                        <StackPanel HorizontalAlignment="Center">
                            <Label Content="{lex:Loc Header}" Style="{StaticResource generic_Label}" HorizontalAlignment="Center" Foreground="{StaticResource Label_ImportantColor}"/>

                            <Label Content="{lex:Loc Contact}" Style="{StaticResource input_label}" />
                            <Controls:SmartBox_Contact x:Name="grid_sbxContact" Get_Customers="True" Get_Suppliers="True"/>

                            <Label Content="{lex:Loc Geography}" Style="{StaticResource input_label}" />
                            <Controls:SmartBox_Geography x:Name="grid_sbxGeography" />

                            <StackPanel Orientation="Horizontal">
                                <StackPanel Margin="4,0">
                                    <Label Style="{StaticResource input_label}">
                                        <TextBlock>
                                            <Run Text="{lex:Loc Range}"/>
                                            <Run Text="{lex:Loc StartDate}"/>
                                        </TextBlock>
                                    </Label>
                                    <DatePicker x:Name="grid_dateStart" Width="124" 
                                                SelectedDate="{Binding ElementName=SalesInvoice, Path=start_Range, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </StackPanel>
                                <StackPanel Margin="2,0">
                                    <Label Style="{StaticResource input_label}">
                                        <TextBlock>
                                            <Run Text="{lex:Loc Range}"/>
                                            <Run Text="{lex:Loc EndDate}"/>
                                        </TextBlock>
                                    </Label>
                                    <DatePicker x:Name="grid_dateEnd" Width="124"
                                                SelectedDate="{Binding ElementName=SalesInvoice, Path=end_Range, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </StackPanel>
                            </StackPanel>

                            <Label Content="{lex:Loc Condition}" Style="{StaticResource input_label}" />
                            <TextBox Text="{Binding tbxCondition, ElementName=SalesInvoice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_textbox}"/>

                            <Label Content="{lex:Loc Contract}" Style="{StaticResource input_label}" />
                            <TextBox Text="{Binding tbxContract, ElementName=SalesInvoice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_textbox}"/>

                            <Rectangle Style="{StaticResource line_Bar}"/>

                            <Label Content="{lex:Loc Details}" Style="{StaticResource generic_Label}" HorizontalAlignment="Center" Foreground="{StaticResource Label_ImportantColor}"/>

                            <Label Content="{lex:Loc Item}" Style="{StaticResource input_label}" />
                            <Controls:SmartBox_Item x:Name="grid_sbxItem" />

                            <Label Content="{lex:Loc Brand}" Style="{StaticResource input_label}" />
                            <TextBox Text="{Binding tbxBrand, ElementName=SalesInvoice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_textbox}"/>

                            <Label Content="{lex:Loc Tags}" Style="{StaticResource input_label}" />
                            <TextBox Text="{Binding tbxTag, ElementName=SalesInvoice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_textbox}"/>


                            <Button Content="L" FontFamily="/Cognitivo;component/Resources/#cognitivo"
                                    Style="{DynamicResource MetroCircleButtonStyle}" Click="btnGridSearch"
                                    VerticalAlignment="Center" Height="32" Width="32" BorderBrush="RoyalBlue"/>
                        </StackPanel>
                    </StackPanel>
                    <DataGrid AutoGenerateColumns="False" Grid.Column="1" CanUserAddRows="False"
                              VirtualizingPanel.VirtualizationMode="Recycling" EnableRowVirtualization="True" EnableColumnVirtualization="True"
                              ItemsSource="{Binding Source={StaticResource sales_invoiceViewSource}}">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                    ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                    EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"/>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Date}" 
                                                Binding="{Binding trans_date, UpdateSourceTrigger=PropertyChanged, StringFormat=d}"/>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Customer}" FontWeight="Medium"
                                                Binding="{Binding contact.name, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Date}" 
                                                Binding="{Binding number, UpdateSourceTrigger=PropertyChanged, StringFormat=d}"/>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Condition}"
                                                Binding="{Binding app_condition.name, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Contract}"
                                                Binding="{Binding app_contract.name, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Total}" FontWeight="Medium"
                                                Binding="{Binding GrandTotal, UpdateSourceTrigger=PropertyChanged, StringFormat=N}" ElementStyle="{StaticResource RightAlignStyle}"/>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Currency}" 
                                                Binding="{Binding app_currencyfx.app_currency.name, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <DataGrid AutoGenerateColumns="False" EnableRowVirtualization="True"
                                          Margin="16" ItemsSource="{Binding Source={StaticResource sales_invoicesales_invoice_detailViewSource}}" SelectionMode="Single"
                                          IsReadOnly="True" FontSize="10" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding item.code, UpdateSourceTrigger=PropertyChanged}" 
                                                            Header="{lex:Loc Cognitivo:local:Code}" IsReadOnly="True" Width="128"/>
                                        <DataGridTextColumn Binding="{Binding item_description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                            Header="{lex:Loc Cognitivo:local:Item}" IsReadOnly="False" Width="256"/>
                                        <DataGridTextColumn Binding="{Binding quantity, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}, ValidatesOnDataErrors=True}" 
                                                            Header="{lex:Loc Cognitivo:local:Quantity}" Width="128" ElementStyle="{StaticResource RightAlignStyle}"/>
                                        <!-- UnitPrice_Vat -->
                                        <DataGridTextColumn Binding="{Binding UnitPrice_Vat, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                            Header="{lex:Loc Cognitivo:local:PricewithVAT}" ElementStyle="{StaticResource RightAlignStyle}" Width="Auto" 
                                            Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                        <DataGridTextColumn Binding="{Binding DiscountVat,Mode=TwoWay, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                            Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" Foreground="Crimson"
                                            Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                        <!-- SubTotal_VAT -->
                                        <DataGridTextColumn Binding="{Binding SubTotal_Vat, StringFormat={}{0:N}, ValidatesOnDataErrors=True}"  Header="{lex:Loc Cognitivo:local:SubTotalwithVAT}" 
                                            Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            Width="Auto" IsReadOnly="True" ElementStyle="{StaticResource RightAlignStyle}"/>
                                        <DataGridTextColumn Binding="{Binding Discount_SubTotal_Vat, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                            Foreground="Crimson" Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" IsReadOnly="True"
                                            Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Padding="0" IsSelected="{Binding ElementName=toolBar, Path=IsSelected_FormView, FallbackValue=True, UpdateSourceTrigger=PropertyChanged}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <!-- CRUD Modal -->
                    <Grid Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden" 
                          Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5"/>
                    <!-- Navigation ListBox -->
                    <ListBox Background="{DynamicResource AccentColor_Brush}" x:Name="sales_invoiceDataGrid"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ItemContainerStyle="{StaticResource nav_ListSelection}"
                             ItemsSource="{Binding}" Grid.Row="1" SelectionChanged="sales_invoiceDataGrid_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <cntrl:navList VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling"
                                               recordCode="{Binding trans_date, StringFormat=d, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                               recordSecondaryName="{Binding number, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                               recordName="{Binding contact.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                               State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                               Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <cntrl:navPagination VerticalAlignment="Bottom"/>

                    <!-- Sales Invoice Form -->
                    <Grid Grid.Column="1" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="380"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel HorizontalAlignment="Center" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}">
                                    <Label Content="{lex:Loc Date}" Style="{StaticResource input_label}"/>
                                    <DatePicker x:Name="dtpTrans_Date" Style="{StaticResource input_datepicker}"
                                metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                metro:ControlsHelper.MouseOverBorderBrush="Silver"
					            SelectedDate="{Binding trans_date, StringFormat=d, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                    <Grid>
                                        <Label Content="{lex:Loc Customer}"  Style="{StaticResource input_label}"/>
                                    </Grid>
                                    <Controls:SmartBox_Contact x:Name="sbxContact" Get_Customers="True" Get_Employees="False" Select="set_ContactPref"
                                                   can_Edit="True" can_New="True"
                                                   Text="{Binding contact.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <Label Content="{lex:Loc Document}" Style="{StaticResource input_label}"/>
                                    <ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range" 
                                  metro:ControlsHelper.FocusBorderBrush="RoyalBlue" SelectedIndex="0"
                                  metro:ControlsHelper.MouseOverBorderBrush="Silver"
                                  Style="{StaticResource input_combobox}"
                                  SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                                    <Label Content="{lex:Loc InvoiceNumber}" Style="{StaticResource input_label}"/>
                                    <TextBox
                                metro:TextBoxHelper.Watermark="{Binding NumberWatermark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{StaticResource input_textbox}"
                                metro:TextBoxHelper.SelectAllOnFocus="True"
                                metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                metro:ControlsHelper.MouseOverBorderBrush="Silver"
                             Text="{Binding number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                                    <Label Content="{lex:Loc Condition}"  Style="{StaticResource input_label}"/>
                                    <ComboBox x:Name="cbxCondition" Style="{StaticResource input_combobox}" DisplayMemberPath="name"
                              metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                              metro:ControlsHelper.MouseOverBorderBrush="Silver"
                              SelectedValue="{Binding id_condition, Mode=TwoWay, NotifyOnValidationError=True, 
                              Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
					          SelectedValuePath="id_condition" Grid.Row="1" SelectionChanged="cbxCondition_SelectionChanged">
                                        <!--ItemsSource="{Binding Source={StaticResource conditionViewSource}}"-->
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel/>
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                                    <Label Content="{lex:Loc Contract}" Style="{StaticResource input_label}"/>
                                    <ComboBox Style="{StaticResource input_combobox}" DisplayMemberPath="name"
                              metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                              metro:ControlsHelper.MouseOverBorderBrush="Silver"
					          SelectedValuePath="id_contract" x:Name="cbxContract"
					          SelectedValue="{Binding id_contract, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel/>
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                                    <Label Content="{lex:Loc Currency}" Style="{StaticResource input_label}"/>
                                    <Controls:CurrencyBox x:Name="cbxCurrency" appName="SalesInvoice"
                                          SelectedValue="{Binding id_currencyfx, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                          LostFocus="cbxCurrency_LostFocus"/>
                                    <!--<Label Content="{lex:Loc Discount(In %)}" Style="{StaticResource input_label}"/>
                        <TextBox Text="{Binding DiscountPercentage, StringFormat={}{0:N},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>-->
                                </StackPanel>
                                <!--sidepanel-->
                                <StackPanel Grid.Column="1">
                                    <Label Content="{lex:Loc Information}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
                                    <StackPanel Orientation="Horizontal" Margin="4,0" Visibility="{Binding ElementName=chkDiscountStock, Path=IsChecked, Converter={StaticResource BoolToVisibility}}">
                                        <TextBlock Text="" FontFamily="Cognitivo" VerticalAlignment="Center" Margin="4" Foreground="Crimson"/>
                                        <TextBlock Text="{lex:Loc Stock}" Style="{StaticResource text_Label}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="4,0" Visibility="{Binding id_journal, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibility}}">
                                        <TextBlock Text="j" FontFamily="Cognitivo" VerticalAlignment="Center" Margin="6" Foreground="Green"/>
                                        <TextBlock Text="{lex:Loc Accounted}" Style="{StaticResource text_Label}"/>
                                    </StackPanel>

                                    <Label Content="{lex:Loc QuickActions}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
                                    <StackPanel x:Name="stackpnlCustomize" Margin="3,2,0,5">
                                        <StackPanel Orientation="Horizontal"  Margin="3,2,0,0">
                                            <Label Content="A" Style="{StaticResource btn_Label}"/>
                                            <TextBlock MouseUp="tbCustomize_MouseUp" VerticalAlignment="Center">
                                    <Hyperlink x:Name="hrefCustomize">
                                        <Run Text="{lex:Loc Customize}"/>
                                    </Hyperlink>
                                            </TextBlock>
                                            <Popup x:Name="popupCustomize" IsOpen="False" Closed="popupCustomize_Closed"
                                                   PlacementTarget="{Binding ElementName=stackpnlCustomize}" Placement="Mouse">
                                                <Border BorderThickness="1" BorderBrush="Gray">
                                                    <StackPanel Background="WhiteSmoke" Width="180">
                                                        <Label Content="{lex:Loc Header}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
                                                        <WrapPanel>
                                                            <TextBox Width="30" HorizontalAlignment="Left" 
                                                                     Text="{Binding Source={x:Static pref:Settings.Default}, Path=TransDate_Offset, Mode=TwoWay}"
                                                                     Margin="6,2,2,2"/>
                                                            <Label Content="{lex:Loc DifferenceinDate}" Style="{StaticResource generic_Label}"/>
                                                        </WrapPanel>
                                                        <Label Content="{lex:Loc Details}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkPriceWithVAT" 
                                                                  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc VATIncluded}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkPriceWithoutVAT"
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc VATExcluded}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkDiscount"
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Discount_OnUnitValue, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc UnitValue}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <WrapPanel>
                                                            <ComboBox Width="64" HorizontalAlignment="Left" ItemsSource="{Binding Source={x:Static pref:Settings.Default}, Path=Discount_OnUnitValue, Mode=TwoWay}"
                                                         Margin="6,2,2,2"/>
                                                            <Label Content="{lex:Loc Discount}" Style="{StaticResource generic_Label}"/>
                                                        </WrapPanel>
                                                        <Label Content="{lex:Loc QuickLook}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkAvailCredit"
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=AvailableCredit, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc AvailableCredit}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkField"
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Telephone, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc Telephone}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkSalesOrder"
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=SalesLink, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc SalesOrder}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkSalesRep"
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=SalesRepresentative, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc SalesRepresentative}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkProject"
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Project, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc Project}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkBranch"
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Branch, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc Branch}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkDeveloper"
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=DeveloperMode, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc DeveloperMode}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkDuplicateItem" 
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=AllowDuplicateItem, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc AllowDuplicateItem}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkfilterbyBranch" 
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=FilterByBranch, Mode=TwoWay}">
                                                            <Label Content="{lex:Loc FilterByBranch}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>
                                                        <CheckBox Margin="6,0,0,0" x:Name="chkDiscountStock" 
                                                      IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=DiscountStock, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                            <Label Content="{lex:Loc DiscountStock}" Style="{StaticResource generic_Label}"/>
                                                        </CheckBox>

                                                    </StackPanel>
                                                </Border>
                                            </Popup>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="3,0,0,0" IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,Converter={StaticResource Status2Enable}}">
                                            <Label Content="$" Style="{StaticResource btn_Label}"/>
                                            <TextBlock Margin="5,0" VerticalAlignment="Center">
                                    <Hyperlink PreviewMouseUp="btnRecivePayment_PreviewMouseUp">
                                        <Run Text="{lex:Loc RecievePayment}"/>
                                    </Hyperlink>
                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" >
                                            <Label Content="" Style="{StaticResource btn_Label}"/>
                                            <TextBlock Margin="5,0" VerticalAlignment="Center">
                                    <Hyperlink PreviewMouseUp="toolBar_btnPrint_Click">
                                        <Run Text="{lex:Loc Document}"/>
                                    </Hyperlink>
                                            </TextBlock>
                                        </StackPanel>
                                        <!--
                            <StackPanel Orientation="Horizontal" IsEnabled="False" Height="27">
                                <Label Content="" Style="{StaticResource btn_Label}"/>
                                <TextBlock Margin="5,0" VerticalAlignment="Center"><Hyperlink>
                                <Run Text="{lex:Loc BurnInvoice}"/></Hyperlink></TextBlock>
                            </StackPanel>
                            -->
                                        <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged}"
                                       Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesLink, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                            <Label Content="" Style="{StaticResource btn_Label}"/>
                                            <TextBlock Margin="5,0" VerticalAlignment="Center" Style="{StaticResource text_Label}">
                                    <Hyperlink PreviewMouseUp="btnSalesOrder_Click">
                                        <Run Text="{lex:Loc SalesOrder}" />
                                    </Hyperlink>
                                            </TextBlock>
                                        </StackPanel>
                                        <ItemsControl ItemsSource="{Binding Source={StaticResource sales_invoicesales_invoice_detailViewSource}}">
                                            <!-- host the items generated by this ItemsControl in a grid -->
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <!-- render each bound item using a TextBlock-->
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel>
                                                        <TextBlock VerticalAlignment="Top" Margin="5,0"  Style="{StaticResource text_Label}">
                                                            <Hyperlink PreviewMouseUp="salesorder_PreviewMouseUp" Tag="{Binding sales_order_detail.sales_order}">
                                                                <Run  Text="{Binding sales_order_detail.sales_order.number}" />
                                                            </Hyperlink>
                                                        </TextBlock>

                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                    <Label Content="{lex:Loc QuickLook}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
                                    <StackPanel Grid.Column="0" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged}" >
                                        <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
                                    Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=AvailableCredit, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                            <Label Content="X" Style="{StaticResource ico_Label}"/>
                                            <TextBlock Text="{lex:Loc AvailableCredit}" Style="{StaticResource text_Label}"/>
                                            <TextBlock Text="{Binding /contact.credit_availability, IsAsync=True, Mode=TwoWay, 
                                       UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Style="{StaticResource text_Data}"/>
                                        </StackPanel>
                                        <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
                                    Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Telephone, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                            <Label Content="P" Style="{StaticResource ico_Label}"/>
                                            <TextBlock Style="{StaticResource text_Label}" Text="{lex:Loc Telephone}"/>
                                            <TextBlock Text="{Binding contact.telephone, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource text_Data}" Width="55"/>

                                        </StackPanel>
                                        <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center">
                                            <Label Content="U" Style="{StaticResource ico_Label}"/>
                                            <TextBlock Text="{lex:Loc Contact}" Style="{StaticResource text_Label}"/>
                                            <ComboBox x:Name="cbxContactRelation" Style="{StaticResource ComboToLabelStyle}"
                                          metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                          metro:ControlsHelper.MouseOverBorderBrush="Silver"
						                  DisplayMemberPath="name" Width="Auto"
						                  SelectedValuePath="id_sales_rep" 
						                  SelectedValue="{Binding id_sales_rep, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  >
                                                <ComboBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel/>
                                                    </ItemsPanelTemplate>
                                                </ComboBox.ItemsPanel>
                                            </ComboBox>
                                        </StackPanel>
                                        <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesRepresentative, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                            <Label Content="S" Style="{StaticResource ico_Label}"/>
                                            <TextBlock Text="{lex:Loc Salesman}" Style="{StaticResource text_Label}"/>
                                            <ComboBox x:Name="cbxSalesRep" Style="{StaticResource ComboToLabelStyle}"
                                        metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                        metro:ControlsHelper.MouseOverBorderBrush="Silver"
						                DisplayMemberPath="name" Width="Auto"
						                SelectedValuePath="id_sales_rep" 
						                SelectedValue="{Binding id_sales_rep, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  >
                                                <ComboBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel/>
                                                    </ItemsPanelTemplate>
                                                </ComboBox.ItemsPanel>
                                            </ComboBox>
                                        </StackPanel>

                                        <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" >
                                            <Label Content="" Style="{StaticResource ico_Label}"/>
                                            <TextBlock Text="{lex:Loc Type}" Style="{StaticResource text_Label}"/>
                                            <ComboBox Name="cbxTransType" Grid.Column="1" Style="{StaticResource ComboToLabelStyle}"
                                                      SelectedValue="{Binding trans_type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                                                              ValidatesOnExceptions=True, NotifyOnValidationError=True, 
                                                                              ValidatesOnDataErrors=True}"/>
                                        </StackPanel>

                                        <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
                                       Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesLink, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                            <Label Content="" Style="{StaticResource ico_Label}"/>
                                            <TextBlock Margin="5,0" Text="{lex:Loc Exports}" VerticalAlignment="Center" Style="{StaticResource text_Label}"/>
                                            <CheckBox IsChecked="{Binding is_impex, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>



                                        <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center">

                                            <Label Content="" Style="{StaticResource ico_Label}" HorizontalContentAlignment="Center"/>
                                            <TextBlock Margin="5,0" VerticalAlignment="Center" Style="{StaticResource text_Label}">
                                <Hyperlink PreviewMouseUp="btnPackingList_Click">
                                    <Run Text="{lex:Loc PackingList}"/>
                                </Hyperlink>
                                            </TextBlock>
                                        </StackPanel>
                                        <ItemsControl  ItemsSource="{Binding Source={StaticResource sales_invoicesales_invoice_detailsales_packinglist_relationViewSource}}" Margin="0">
                                            <!-- host the items generated by this ItemsControl in a grid -->
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <!-- render each bound item using a TextBlock-->
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock VerticalAlignment="Top" Margin="5,0"  Style="{StaticResource text_Label}">
                                    <Hyperlink PreviewMouseUp="salespackinglist_PreviewMouseUp" Tag="{Binding sales_packing_detail.sales_packing}">
                                        <Run  Text="{Binding sales_packing_detail.sales_packing.number}" />
                                    </Hyperlink>
                                                    </TextBlock>

                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                        <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal"
                                                    Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Branch, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                            <Label Content="" Style="{StaticResource ico_Label}"/>
                                            <TextBlock Text="{lex:Loc Code}" Style="{StaticResource text_Label}"/>
                                            <TextBox Text="{Binding code, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                     Style="{StaticResource TextToLabelStyle}"/>
                                        </StackPanel>
                                        <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal"
                                                    Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Branch, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                            <Label Content="" Style="{StaticResource ico_Label}"/>
                                            <TextBlock Text="{lex:Loc Branch}" Style="{StaticResource text_Label}"/>
                                            <ComboBox Width="Auto" Margin="0" x:Name="cbxBranch" Style="{StaticResource ComboToLabelStyle}"
                                                      metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                                      metro:ControlsHelper.MouseOverBorderBrush="Silver"
                                                      DisplayMemberPath="name" SelectedValuePath="id_branch" 
						                              SelectedValue="{Binding id_branch, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                                <ComboBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel/>
                                                    </ItemsPanelTemplate>
                                                </ComboBox.ItemsPanel>
                                            </ComboBox>
                                        </StackPanel>
                                        <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal" Visibility="Collapsed">
                                            <Label Content="" Style="{StaticResource ico_Label}"/>
                                            <TextBlock Text="{lex:Loc Terminal}" Style="{StaticResource text_Label}"/>
                                            <ComboBox x:Name="cbxTerminal" Width="Auto" Margin="0"  Style="{StaticResource ComboToLabelStyle}"
                                          metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                          metro:ControlsHelper.MouseOverBorderBrush="Silver"
                                          DisplayMemberPath="name" SelectedValuePath="id_terminal" 
						                  SelectedValue="{Binding id_terminal, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                                <ComboBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel/>
                                                    </ItemsPanelTemplate>
                                                </ComboBox.ItemsPanel>
                                            </ComboBox>
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2"
                                       Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Project, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <Label Content="Y" Style="{StaticResource ico_Label}"/>
                                        <TextBlock Text="{lex:Loc Project}" Style="{StaticResource text_Label}"/>
                                        <ComboBox x:Name="cbxProject" Style="{StaticResource ComboToLabelStyle}"
                                                  metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                                  metro:ControlsHelper.MouseOverBorderBrush="Silver"
						                          DisplayMemberPath="name" Width="Auto"
						                          SelectedValuePath="id_project" 
						                          SelectedValue="{Binding id_project, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                            <!--ItemsSource="{Binding Source={StaticResource projectViewSource}}"-->
                                            <ComboBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel/>
                                                </ItemsPanelTemplate>
                                            </ComboBox.ItemsPanel>
                                        </ComboBox>
                                    </StackPanel>
                                    <StackPanel VerticalAlignment="Center" Margin="2">
                                        <Label Content="{lex:Loc Comment}" Style="{StaticResource input_label}"/>
                                        <TextBox x:Name="commentTextBox" Text="{Binding comment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MinHeight="64" 
                                 Style="{StaticResource input_textbox}" HorizontalAlignment="Stretch" Width="Auto" TextWrapping="Wrap"/>
                                    </StackPanel>
                                </StackPanel>
                                <!--sidepanel-->
                            </Grid>
                        </ScrollViewer>
                        
                        <Grid Grid.ColumnSpan="2" Grid.Row="2" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <Rectangle Height="0.7" Fill="Black" VerticalAlignment="Top" Margin="8,0"/>
                            <StackPanel VerticalAlignment="Top" Margin="8,0" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                                <Label Content="{lex:Loc Item}" Style="{StaticResource input_label}" Margin="0,0,444,0"/>
                                <Controls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="item_Select" can_New="True"
                                                        IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}"/>
                            </StackPanel>

                            <Controls:Totals GrandTotal="{Binding GrandTotal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={StaticResource sales_invoiceViewSource}, StringFormat={}{0:N}}"
                                             Currency="{Binding app_currencyfx.app_currency.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                             DiscountPercentage="{Binding DiscountPercentage, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                             DiscountValue="{Binding DiscountWithoutPercentage, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             btnClean_Click="btnTotalClean_Click"
                                             VerticalAlignment="Top" HorizontalAlignment="Right"/>
                            
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,10,0,0">
                                <Popup x:Name="popupVAT" Placement="Top">
                                    <Grid Background="{StaticResource AccentColor_Introvert}">
                                        <DataGrid x:Name="dgvVAT" AutoGenerateColumns="False" EnableRowVirtualization="True" Margin="4"
                                          RowDetailsVisibilityMode="VisibleWhenSelected" IsReadOnly="True">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding name}" Width="Auto"
                                                        Header="{lex:Loc Cognitivo:local:Name}"/>
                                                <DataGridTextColumn Binding="{Binding value, StringFormat={}{0:N}}" 
                                                        Header="{lex:Loc Cognitivo:local:Value}" Width="Auto"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                </Popup>
                            </StackPanel>

                            <DataGrid x:Name="dgvSalesDetail" Style="{StaticResource detail_Datagrid}" Margin="5,58,0,0" HorizontalAlignment="Left"
                                  IsReadOnly="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource TrueToFalse},
                                                       UpdateSourceTrigger=PropertyChanged, FallbackValue=false}" 
				                  ItemsSource="{Binding Source={StaticResource sales_invoicesales_invoice_detailViewSource}}" 
                                  InitializingNewItem="sales_invoice_detailDataGrid_InitializingNewItem" 
                                  RowEditEnding="sales_invoice_detailDataGrid_RowEditEnding" 
                                  CellEditEnding="sales_invoice_detailDataGrid_CellEditEnding">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding id_sales_invoice_detail, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"
                                                        Header="{lex:Loc Cognitivo:local:Code}" IsReadOnly="True"/>
                                    <DataGridComboBoxColumn Header="{lex:Loc Cognitivo:local:Location}"/>
                                    <DataGridTextColumn Binding="{Binding item.code, UpdateSourceTrigger=PropertyChanged}" 
                                                        Header="{lex:Loc Cognitivo:local:Code}" IsReadOnly="True" Width="100"/>
                                    <DataGridTextColumn Binding="{Binding item_description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                        Header="{lex:Loc Cognitivo:local:Item}" IsReadOnly="False" MinWidth="128"/>
                                    <DataGridComboBoxColumn Header="{lex:Loc Cognitivo:local:VAT}" Width="50"
					                                        ItemsSource="{Binding Source={StaticResource app_vat_groupViewSource}}"  
                                                            DisplayMemberPath="name" SelectedValuePath="id_vat_group" 
					                                        SelectedValueBinding="{Binding id_vat_group, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, 
                                                            UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                    <DataGridTextColumn Binding="{Binding quantity, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}, ValidatesOnDataErrors=True}" 
                                                        Header="{lex:Loc Cognitivo:local:Quantity}" Width="100" ElementStyle="{StaticResource RightAlignStyle}"/>
                                    <!-- UnitPrice -->
                                    <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Price}" Width="100" 
                                                        ElementStyle="{StaticResource RightAlignStyle}"
                                                        Binding="{Binding unit_price, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}, ValidatesOnDataErrors=True}"  IsReadOnly="{Binding ElementName=toolBar, Path=CanUserUpdatePrice}"
                                                        Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                    <DataGridTextColumn Binding="{Binding discount, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                                        Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" Foreground="Crimson"
                                                        Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                    <!-- UnitPrice_Vat -->
                                    <DataGridTextColumn Binding="{Binding UnitPrice_Vat, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                                        Header="{lex:Loc Cognitivo:local:PricewithVAT}" ElementStyle="{StaticResource RightAlignStyle}" Width="Auto" 
                                                        Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                    <DataGridTextColumn Binding="{Binding DiscountVat,Mode=TwoWay, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                                        Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" Foreground="Crimson"
                                                        Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                    <!-- SubTotal -->
                                    <DataGridTextColumn Binding="{Binding SubTotal, StringFormat={}{0:N}, ValidatesOnDataErrors=True}" 
                                                        Header="{lex:Loc Cognitivo:local:SubTotal}" Width="Auto" IsReadOnly="True"
                                                        Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, 
                                                        UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ElementStyle="{StaticResource RightAlignStyle}"/>
                                    <DataGridTextColumn Binding="{Binding Discount_SubTotal,Mode=TwoWay, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                        Foreground="Crimson" Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}"
                                                        Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                    <!-- SubTotal_VAT -->
                                    <DataGridTextColumn Binding="{Binding SubTotal_Vat, StringFormat={}{0:N}, ValidatesOnDataErrors=True}"  Header="{lex:Loc Cognitivo:local:SubTotalwithVAT}" 
                                                        Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                        Width="Auto" IsReadOnly="True" ElementStyle="{StaticResource RightAlignStyle}"/>
                                    <DataGridTextColumn Binding="{Binding Discount_SubTotal_Vat, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                                        Foreground="Crimson" Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" IsReadOnly="True"
                                                        Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                    <DataGridTemplateColumn Width="Auto" Header="">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Command="customcmd:CustomCommands.Delete"
                                                        Style="{StaticResource btnDeleteChildStyle}"
                                                        CommandParameter="{Binding}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
        
        <cntrl:toolBar x:Name="toolBar" appName="SalesInvoice"
			           btnNew_Click="btnNew_Click" 
			           btnDelete_Click="btnDelete_Click" 
			           btnSave_Click="btnSave_Click" 
                       btnEdit_Click="toolBar_btnEdit_Click"
                       btnSearch_Click="toolBar_btnSearch_Click"
			           btnApprove_Click="btnApprove_Click"
                       btnAnull_Click="toolBar_btnAnull_Click"
			           btnCancel_Click="toolBar_btnCancel_Click"
                       
                       MultipleStyleForm="True"
                       
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                       Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
			           VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
    </Grid>
</Page>

<Page x:Class="Cognitivo.Sales.Invoice" Title="{lex:Loc SalesInvoice}" x:Name="SalesInvoice"
      xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:pref="clr-namespace:Cognitivo.Sales"
      xmlns:mainpref="clr-namespace:Cognitivo.Properties"
      xmlns:entity="clr-namespace:entity;assembly=entity"
      xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
      xmlns:converter="clr-namespace:Cognitivo.Converters"
      xmlns:customcmd="clr-namespace:Cognitivo.Class"
      xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"  
          xmlns:lex="http://wpflocalizeextension.codeplex.com"        
          lex:LocalizeDictionary.DesignCulture="en-US"
          lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
          lex:ResxLocalizationProvider.DefaultDictionary="local"
      mc:Ignorable="d"
      MinHeight="550" MinWidth="750" Loaded="SalesInvoice_Loaded">
    <Page.CommandBindings>
        <CommandBinding x:Name="DeleteCommand" Command="customcmd:CustomCommands.Delete" 
                        CanExecute="DeleteCommandBinding_CanExecute" 
                        Executed="DeleteCommandBinding_Executed"/>
    </Page.CommandBindings>
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <converter:CustomStringFormatConverter x:Key="CustomStringFormat"/>
        <converter:BooleanToIsStatusConverter x:Key="BoolToIssued"/>
        <converter:IsActive2ColorConverter x:Key="ActiveValueConverter"/>
        <converter:TextChangeToIsEnableConverter x:Key="TextChangeToEnable"/>
        <converter:TrueToFalseConverter x:Key="TrueToFalse"/>
        <!--<CollectionViewSource x:Key="itemViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item}, CreateList=True}"/>-->
        <!--<CollectionViewSource x:Key="contactViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:contact}, CreateList=True}"/>-->
        <CollectionViewSource x:Key="sales_invoiceViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:sales_invoice}, CreateList=True}" />
        <CollectionViewSource x:Key="sales_invoicesales_invoice_detailViewSource" Source="{Binding sales_invoice_detail, Source={StaticResource sales_invoiceViewSource}}"/>
       
        <CollectionViewSource x:Key="app_vat_groupViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_vat_group}, CreateList=True}"/>
        <CollectionViewSource x:Key="sales_invoicesales_invoice_detailsales_packinglist_relationViewSource" Source="{Binding sales_packinglist_relation, Source={StaticResource sales_invoicesales_invoice_detailViewSource}}"/>
    </Page.Resources>
    <Grid DataContext="{StaticResource sales_invoiceViewSource}" Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden" 
              Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5"/>
        <ListBox Background="{DynamicResource AccentColor_Brush}" x:Name="sales_invoiceDataGrid"
                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemContainerStyle="{StaticResource nav_ListSelection}"
                 ItemsSource="{Binding}" Grid.Row="1" Margin="0,3,0,-3">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling"
                                   recordCode="{Binding trans_date, StringFormat=d, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                   recordSecondaryName="{Binding number, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   recordName="{Binding contact.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <cntrl:navPagination x:Name="navPagination" VerticalAlignment="Bottom" Grid.Row="1" DisplayMode="Month"/>

        <Grid Grid.Column="1" Grid.Row="1" 
              >
            <Grid.RowDefinitions>
                <RowDefinition Height="380"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel HorizontalAlignment="Center" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}">
                        <Label Content="{lex:Loc Date}" Style="{StaticResource input_label}"/>
                        <DatePicker x:Name="dtpTrans_Date" Style="{StaticResource input_datepicker}"
                                metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                metro:ControlsHelper.MouseOverBorderBrush="Silver"
					            SelectedDate="{Binding trans_date, StringFormat=d, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        <Grid>
                            <Label Content="{lex:Loc Customer}"  Style="{StaticResource input_label}"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <Label Content="+" HorizontalAlignment="Right" PreviewMouseUp="hrefAddCust_PreviewMouseUp" 
                                   Style="{StaticResource btn_Label}"/>
                                <Label Content="e" HorizontalAlignment="Right"
                                   Style="{StaticResource btn_Label}"/>
                            </StackPanel>
                        </Grid>
                        <Controls:SmartBox_Contact x:Name="sbxContact" Get_Customers="True" Select="set_ContactPref"
                                                   Text="{Binding contact.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Content="{lex:Loc Document}" Style="{StaticResource input_label}"/>
                        <ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range" 
                                  metro:ControlsHelper.FocusBorderBrush="RoyalBlue" SelectedIndex="0"
                                  metro:ControlsHelper.MouseOverBorderBrush="Silver"
                                  Style="{StaticResource input_combobox}"
                                  SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                        <Label Content="{lex:Loc InvoiceNumber}" Style="{StaticResource input_label}"/>
                        <TextBox
                                metro:TextBoxHelper.Watermark="{Binding NumberWatermark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{StaticResource input_textbox}"
                                metro:TextBoxHelper.SelectAllOnFocus="True"
                                metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                metro:ControlsHelper.MouseOverBorderBrush="Silver"
                             Text="{Binding number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                            <Label Content="{lex:Loc Condition}"  Style="{StaticResource input_label}"/>
                        <ComboBox x:Name="cbxCondition" Style="{StaticResource input_combobox}" DisplayMemberPath="name"
                              metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                              metro:ControlsHelper.MouseOverBorderBrush="Silver"
                              SelectedValue="{Binding id_condition, Mode=TwoWay, NotifyOnValidationError=True, 
                              Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
					          SelectedValuePath="id_condition" Grid.Row="1" SelectionChanged="cbxCondition_SelectionChanged">
                            <!--ItemsSource="{Binding Source={StaticResource conditionViewSource}}"-->
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="{lex:Loc Contract}" Style="{StaticResource input_label}"/>
                        <ComboBox Style="{StaticResource input_combobox}" DisplayMemberPath="name"
                              metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                              metro:ControlsHelper.MouseOverBorderBrush="Silver"
					          SelectedValuePath="id_contract" x:Name="cbxContract"
					          SelectedValue="{Binding id_contract, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Grid>
                            <Label Content="{lex:Loc Currency}" Style="{StaticResource input_label}"/>
                            <Label Content="e" HorizontalAlignment="Right"
                                   Style="{StaticResource btn_Label}" IsEnabled="False"/>
                        </Grid>
                        <Controls:CurrencyBox x:Name="cbxCurrency" 
                                          SelectedValue="{Binding id_currencyfx, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                          LostFocus="cbxCurrency_LostFocus"/>
                        <Label Content="{lex:Loc Discount(In %)}" Style="{StaticResource input_label}"/>
                        <TextBox Text="{Binding DiscountPercentage, StringFormat={}{0:N},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <!--sidepanel-->
                    <StackPanel Grid.Column="1">
                        <Label Content="{lex:Loc QuickActions}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
                        <StackPanel x:Name="stackpnlCustomize" Margin="3,2,0,5">
                            <StackPanel Orientation="Horizontal"  Margin="3,2,0,0">
                                <Label Content="A" Style="{StaticResource btn_Label}"/>
                                <TextBlock MouseUp="tbCustomize_MouseUp" VerticalAlignment="Center">
                                    <Hyperlink x:Name="hrefCustomize"><Run Text="{lex:Loc Customize}"/></Hyperlink></TextBlock>
                                <Popup x:Name="popupCustomize" IsOpen="False" Closed="popupCustomize_Closed"
                               PlacementTarget="{Binding ElementName=stackpnlCustomize}" Placement="Mouse">
                                    <Border BorderThickness="1" BorderBrush="Gray">
                                        <StackPanel Background="WhiteSmoke" Width="180">
                                            <Label Content="{lex:Loc Header}" FontWeight="Medium" Foreground="MediumVioletRed"/>
                                            <WrapPanel>
                                                <TextBox Width="30" HorizontalAlignment="Left" 
                                                         Text="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=TransDate_OffSet, Mode=TwoWay}"
                                                         Margin="6,2,2,2"/>
                                                <Label Content="{lex:Loc DifferenceinDate}" Style="{StaticResource generic_Label}"/>
                                            </WrapPanel>
                                            <Label Content="{lex:Loc Details}" FontWeight="Medium" Foreground="MediumVioletRed"/>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkPriceWithVAT" 
                                                      IsChecked="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Included, Mode=TwoWay}">
                                                <Label Content="{lex:Loc VATIncluded}" Style="{StaticResource generic_Label}"/>
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkPriceWithoutVAT"
                                                      IsChecked="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Excluded, Mode=TwoWay}">
                                                <Label Content="{lex:Loc VATExcluded}" Style="{StaticResource generic_Label}"/>
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkDiscount"
                                                      IsChecked="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=Discount_OnUnitValue, Mode=TwoWay}">
                                                <Label Content="{lex:Loc UnitValue}" Style="{StaticResource generic_Label}"/>
                                            </CheckBox>
                                            <WrapPanel>
                                                <ComboBox Width="64" HorizontalAlignment="Left" ItemsSource="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=Discount_OnUnitValue, Mode=TwoWay}"
                                                         Margin="6,2,2,2"/>
                                                <Label Content="{lex:Loc Discount}" Style="{StaticResource generic_Label}"/>
                                            </WrapPanel>
                                            <Label Content="{lex:Loc QuickLook}" FontWeight="Medium" Foreground="MediumVioletRed"/>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkAvailCredit"
                                                      IsChecked="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_AvailableCredit, Mode=TwoWay}">
                                                <Label Content="{lex:Loc AvailableCredit}" Style="{StaticResource generic_Label}"/>
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkField"
                                                      IsChecked="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_Telephone, Mode=TwoWay}">
                                                <Label Content="{lex:Loc Telephone}" Style="{StaticResource generic_Label}"/>
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkSalesOrder"
                                                      IsChecked="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_SalesOrder, Mode=TwoWay}">
                                                <Label Content="{lex:Loc SalesOrder}" Style="{StaticResource generic_Label}"/>
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkSalesRep"
                                                      IsChecked="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_SalesRep, Mode=TwoWay}">
                                                <Label Content="{lex:Loc SalesRepresentative}" Style="{StaticResource generic_Label}"/>
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkProject"
                                                      IsChecked="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_Project, Mode=TwoWay}">
                                                <Label Content="{lex:Loc Project}" Style="{StaticResource generic_Label}"/>
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkBranch"
                                                      IsChecked="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_Branch, Mode=TwoWay}">
                                                <Label Content="{lex:Loc Branch}" Style="{StaticResource generic_Label}"/>
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkDeveloper"
                                                      IsChecked="{Binding Source={x:Static mainpref:Settings.Default}, Path=developer_Option, Mode=TwoWay}">
                                                <Label Content="{lex:Loc DeveloperMode}" Style="{StaticResource generic_Label}"/>
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkDuplicateItem" 
                                          IsChecked="{Binding Source={x:Static mainpref:Settings.Default}, Path=AllowDuplicateItems, Mode=TwoWay}">
                                                <Label Content="{lex:Loc AllowDuplicateItem}" Foreground="MediumVioletRed"/>
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkfilterbyBranch" 
                                          IsChecked="{Binding Source={x:Static mainpref:Settings.Default}, Path=filterbyBranch, Mode=TwoWay}">
                                                <Label Content="{lex:Loc filterbyBranch}" Foreground="MediumVioletRed"/>
                                            </CheckBox>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal"  Margin="3,0,0,0" IsEnabled="False">
                                <Label Content="" Style="{StaticResource btn_Label}"/>
                                <TextBlock Margin="5,0" VerticalAlignment="Center">
                                <Hyperlink><Run Text="{lex:Loc RecievePayment}"/></Hyperlink></TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" IsEnabled="False">
                                <Label Content="" Style="{StaticResource btn_Label}"/>
                                <TextBlock Margin="5,0" VerticalAlignment="Center">
                                <Hyperlink x:Name="btnDuplicateInvoice" PreviewMouseUp="btnDuplicateInvoice_PreviewMouseUp">
                                    <Run Text="{lex:Loc Duplicate}"/>
                                </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" >
                                <Label Content="" Style="{StaticResource btn_Label}"/>
                                <TextBlock Margin="5,0" VerticalAlignment="Center">
                                        <Hyperlink PreviewMouseUp="toolBar_btnPrint_Click">
                                            <Run Text="{lex:Loc Document}"/>
                                        </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" IsEnabled="False">
                                <Label Content="" Style="{StaticResource btn_Label}"/>
                                <TextBlock Margin="5,0" VerticalAlignment="Center"><Hyperlink>
                                <Run Text="{lex:Loc BurnInvoice}"/></Hyperlink></TextBlock>
                            </StackPanel>
                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
                                       Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_SalesOrder, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="" Style="{StaticResource ico_Label}"/>
                                <TextBlock Margin="5,0" VerticalAlignment="Center" Style="{StaticResource text_Label}" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged}">
                                    <Hyperlink PreviewMouseUp="btnSalesOrder_Click">
                                        <Run Text="{lex:Loc SalesOrder}" />
                                    </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                            <ItemsControl ItemsSource="{Binding Source={StaticResource sales_invoicesales_invoice_detailViewSource}}" Margin="0">
                                <!-- host the items generated by this ItemsControl in a grid -->
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <!-- render each bound item using a TextBlock-->
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock VerticalAlignment="Top" Margin="5,0"  Style="{StaticResource text_Label}">
                                    <Hyperlink PreviewMouseUp="salesorder_PreviewMouseUp" Tag="{Binding sales_order_detail.sales_order}">
                                        <Run  Text="{Binding sales_order_detail.sales_order.number}" />
                                    </Hyperlink>
                                            </TextBlock>

                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                        <Label Content="{lex:Loc QuickLook}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
                        <StackPanel Grid.Column="0" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged}" >
                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
                                    Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_AvailableCredit, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="X" Style="{StaticResource ico_Label}"/>
                                <TextBlock Text="{lex:Loc AvailableCredit}" Style="{StaticResource text_Label}"/>
                                <TextBlock Text="{Binding /contact.credit_availability, IsAsync=True, Mode=TwoWay, 
                                       UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Style="{StaticResource text_Data}"/>
                            </StackPanel>
                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
                                    Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_Telephone, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="P" Style="{StaticResource ico_Label}"/>
                                <TextBlock Style="{StaticResource text_Label}" Text="{lex:Loc Telephone}"/>
                                <TextBlock Text="{Binding contact.telephone, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource text_Data}" Width="55"/>

                            </StackPanel>
                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding Source={x:Static pref:OrderSetting.Default}, Path=quicklook_SalesRep, Converter={StaticResource BoolToVisibility}, 
                                    UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="U" Style="{StaticResource ico_Label}"/>
                                <TextBlock Text="{lex:Loc Contact}" Style="{StaticResource text_Label}"/>
                                <ComboBox x:Name="cbxContactRelation" Style="{StaticResource ComboToLabelStyle}"
                                          metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                          metro:ControlsHelper.MouseOverBorderBrush="Silver"
						                  DisplayMemberPath="name" Width="Auto"
						                  SelectedValuePath="id_sales_rep" 
						                  SelectedValue="{Binding id_sales_rep, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  >
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel/>
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_SalesRep, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="S" Style="{StaticResource ico_Label}"/>
                                <TextBlock Text="{lex:Loc Salesman}" Style="{StaticResource text_Label}"/>
                                <ComboBox x:Name="cbxSalesRep" Style="{StaticResource ComboToLabelStyle}"
                                      metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                      metro:ControlsHelper.MouseOverBorderBrush="Silver"
						              DisplayMemberPath="name" Width="Auto"
						              SelectedValuePath="id_sales_rep" 
						              SelectedValue="{Binding id_sales_rep, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  >
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel/>
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
                                       Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_SalesOrder, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="" Style="{StaticResource ico_Label}"/>
                                <TextBlock Margin="5,0" Text="{lex:Loc Exports}" VerticalAlignment="Center" Style="{StaticResource text_Label}"/>
                                <CheckBox IsChecked="{Binding is_impex, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>


                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center">

                                <Label Content="" Style="{StaticResource ico_Label}" HorizontalContentAlignment="Center"/>
                                <TextBlock Margin="5,0" VerticalAlignment="Center" Style="{StaticResource text_Label}">
                                <Hyperlink PreviewMouseUp="btnPackingList_Click">
                                    <Run Text="{lex:Loc PackingList}"/>
                                </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                            <ItemsControl  ItemsSource="{Binding Source={StaticResource sales_invoicesales_invoice_detailsales_packinglist_relationViewSource}}" Margin="0">
                                <!-- host the items generated by this ItemsControl in a grid -->
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <!-- render each bound item using a TextBlock-->
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock VerticalAlignment="Top" Margin="5,0"  Style="{StaticResource text_Label}">
                                    <Hyperlink PreviewMouseUp="salespackinglist_PreviewMouseUp" Tag="{Binding sales_packinglist_relation.sales_packing}">
                                        <Run  Text="{Binding sales_packing_detail.id_sales_packing_detail}" />
                                    </Hyperlink>
                                        </TextBlock>

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal"
                                    Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_Branch, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="" Style="{StaticResource ico_Label}"/>
                                <TextBlock Text="{lex:Loc Code}" Style="{StaticResource text_Label}"/>
                                <TextBox Text="{Binding code, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                     Style="{StaticResource TextToLabelStyle}"/>
                            </StackPanel>
                            <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal"
                                    Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_Branch, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="" Style="{StaticResource ico_Label}"/>
                                <TextBlock Text="{lex:Loc Branch}" Style="{StaticResource text_Label}"/>
                                <ComboBox Width="Auto" Margin="0" x:Name="cbxBranch" Style="{StaticResource ComboToLabelStyle}"
                                     metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                     metro:ControlsHelper.MouseOverBorderBrush="Silver"
                                     DisplayMemberPath="name" SelectedValuePath="id_branch" 
						             SelectedValue="{Binding id_branch, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel/>
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal"
                                    Visibility="Collapsed">
                                <Label Content="" Style="{StaticResource ico_Label}"/>
                                <TextBlock Text="{lex:Loc Terminal}" Style="{StaticResource text_Label}"/>
                                <ComboBox x:Name="cbxTerminal" Width="Auto" Margin="0"  Style="{StaticResource ComboToLabelStyle}"
                                     metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                     metro:ControlsHelper.MouseOverBorderBrush="Silver"
                                     DisplayMemberPath="name" SelectedValuePath="id_terminal" 
						             SelectedValue="{Binding id_terminal, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel/>
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2"
                                       Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=quicklook_Project, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <Label Content="Y" Style="{StaticResource ico_Label}"/>
                            <TextBlock Text="{lex:Loc Project}" Style="{StaticResource text_Label}"/>
                            <ComboBox x:Name="cbxProject" Style="{StaticResource ComboToLabelStyle}"
                                     metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                     metro:ControlsHelper.MouseOverBorderBrush="Silver"
						             DisplayMemberPath="name" Width="Auto"
						             SelectedValuePath="id_project" 
						             SelectedValue="{Binding id_project, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <!--ItemsSource="{Binding Source={StaticResource projectViewSource}}"-->
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel VerticalAlignment="Center" Margin="2">
                            <Label Content="{lex:Loc Comment}" Style="{StaticResource input_label}"/>
                            <TextBox x:Name="commentTextBox" Text="{Binding comment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MinHeight="64" 
                                 Style="{StaticResource input_textbox}" HorizontalAlignment="Stretch" Width="Auto" TextWrapping="Wrap"/>
                        </StackPanel>
                    </StackPanel>
                    <!--sidepanel-->
                </Grid>
            </ScrollViewer>
            <GridSplitter Grid.Row="2" Grid.ColumnSpan="2" Background="Red" Height="2"/>
            <Grid Grid.ColumnSpan="2" Grid.Row="2" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <Rectangle Height="0.7" Fill="Black" VerticalAlignment="Top" Margin="8,0"/>
                <StackPanel VerticalAlignment="Top" Margin="8,0" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                    <Grid Width="256" HorizontalAlignment="Left">
                        <Label Content="{lex:Loc Item}" Style="{StaticResource input_label}"/>
                        <Label Content="+" VerticalAlignment="Center" ToolTip="{lex:Loc New}" PreviewMouseUp="EditProduct" 
                                   Margin="4,0,0,0" Style="{StaticResource btn_Label}" HorizontalAlignment="Right"
                                   FontFamily="/Cognitivo;component/Resources/#cognitivo" IsEnabled="False"/>
                    </Grid>
                    <Controls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="item_Select"
                                                 IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}"/>
                    <!--<cntrl:SearchableTextbox x:Name="cbxItem" Margin="0,0,8,0" HorizontalAlignment="Left" Width="256"
                                                 CollectionViewSource="{StaticResource itemViewSource}" Height="26"  
                                                 KeyDown="cbxItem_KeyDown" MouseDoubleClick="cbxItem_MouseDoubleClick"
                                                 IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <cntrl:SearchableTextbox.Columns>
                            <cntrl:SmartBoxColumn Header="{lex:Loc Cognitivo:local:Code}" ForProperty="code" Binding="{Binding code, Mode=Default}" EnableSearch="True"/>
                            <cntrl:SmartBoxColumn Header="{lex:Loc Cognitivo:local:Product}" ForProperty="name" Binding="{Binding name, Mode=Default}" EnableSearch="True"/>
                            <cntrl:SmartBoxColumn Header="{lex:Loc Cognitivo:local:ID}" ForProperty="id_item" Binding="{Binding id_item, Mode=Default}" Hide="True" EnableSearch="False"/>
                        </cntrl:SearchableTextbox.Columns>
                    </cntrl:SearchableTextbox>-->
                    <!--<Label Content="{lex:Loc Quantity}"/>
                    <TextBox Text="{Binding quantity, Mode=TwoWay, 
                        NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, 
                        ValidatesOnExceptions=true, ValidatesOnDataErrors=True}"/>-->
                </StackPanel>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                    <!--<Label Content="{lex:Loc Total}" Style="{StaticResource H3}" FontWeight="Thin" VerticalAlignment="Center"/>-->
                    <Label Content="{Binding GrandTotal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=0, Source={StaticResource sales_invoiceViewSource}, StringFormat={}{0:N}}"
                               Style="{StaticResource H2}" ContentStringFormat="{}{0:N}" FontWeight="Normal"/>
                    <Label Content="{Binding app_currencyfx.app_currency.name}" Style="{StaticResource H3}" ContentStringFormat="{}{0:N}" VerticalAlignment="Center" Foreground="{StaticResource Label_ImportantColor}" />
                    <Label x:Name="lblVAT" Foreground="RoyalBlue" Content="{lex:Loc VAT}" VerticalAlignment="Center"/>
                    <Popup x:Name="popupVAT" IsOpen="{Binding ElementName=lblVAT, Path=IsMouseOver, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                   Placement="Top">
                        <Grid Background="{StaticResource AccentColor_Introvert}">
                            <DataGrid x:Name="dgvVAT" AutoGenerateColumns="False" EnableRowVirtualization="True" Margin="4"
                                          RowDetailsVisibilityMode="VisibleWhenSelected" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding id_vat}" Header="ID" Width="40" 
                                                        Visibility="{Binding Source={x:Static mainpref:Settings.Default}, Path=Developer_Option, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                    <DataGridTextColumn Binding="{Binding name}" Width="Auto"
                                                        Header="{lex:Loc Cognitivo:local:Name}"/>
                                    <DataGridTextColumn Binding="{Binding value, StringFormat={}{0:N}}" 
                                                        Header="{lex:Loc Cognitivo:local:Value}" Width="Auto"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Popup>
                </StackPanel>
                <DataGrid x:Name="dgvSalesDetail" Style="{StaticResource detail_Datagrid}" Margin="5,58,5,0"
                                  IsReadOnly="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource TrueToFalse},
                                                       UpdateSourceTrigger=PropertyChanged, FallbackValue=false}" 
				                  ItemsSource="{Binding Source={StaticResource sales_invoicesales_invoice_detailViewSource}}" 
                                  InitializingNewItem="sales_invoice_detailDataGrid_InitializingNewItem" 
                                  RowEditEnding="sales_invoice_detailDataGrid_RowEditEnding" 
                                  CellEditEnding="sales_invoice_detailDataGrid_CellEditEnding">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding id_sales_invoice_detail, UpdateSourceTrigger=PropertyChanged}" 
                                                    Header="{lex:Loc ID}" IsReadOnly="True" Width="100" 
                                                    Visibility="{Binding Source={x:Static mainpref:Settings.Default}, Path=developer_Option, 
                                                    Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Binding="{Binding item.code, UpdateSourceTrigger=PropertyChanged}" 
                                                Header="{lex:Loc Cognitivo:local:Code}" IsReadOnly="True" Width="100"/>
                        <DataGridTextColumn Binding="{Binding item_description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Header="{lex:Loc Cognitivo:local:Item}" IsReadOnly="False" Width="*"/>
                        <DataGridComboBoxColumn Header="{lex:Loc Cognitivo:local:VAT}" Width="50"
					                                    ItemsSource="{Binding Source={StaticResource app_vat_groupViewSource}}"  
                                                        DisplayMemberPath="name" SelectedValuePath="id_vat_group" 
					                                    SelectedValueBinding="{Binding id_vat_group, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, 
                                                        UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <DataGridTextColumn Binding="{Binding quantity, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}, ValidatesOnDataErrors=True}" 
                                                Header="{lex:Loc Cognitivo:local:Quantity}" Width="100" CellStyle="{StaticResource Number_CellStyle}"/>
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Price}" Width="100" CellStyle="{StaticResource Number_CellStyle}"
                                                Binding="{Binding unit_price, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}, ValidatesOnDataErrors=True}" 
                                                Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Excluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <DataGridTextColumn Binding="{Binding discount, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                                Header="Discount" Width="Auto" CellStyle="{StaticResource Number_CellStyle}"/>
                        <DataGridTextColumn Binding="{Binding UnitPrice_Vat, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                                Header="{lex:Loc Cognitivo:local:PricewithVAT}" CellStyle="{StaticResource Number_CellStyle}"
                                                Width="Auto" Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Included, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        <DataGridTextColumn Binding="{Binding Discount_SubTotal, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                                Header="Discount" Width="Auto" />
                        <DataGridTextColumn Binding="{Binding SubTotal, StringFormat={}{0:N}, ValidatesOnDataErrors=True}" 
                                                Header="{lex:Loc Cognitivo:local:SubTotal}" Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Excluded, Converter={StaticResource BoolToVisibility}, 
                                                UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" CellStyle="{StaticResource Number_CellStyle}"
                                                Width="Auto" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding SubTotal_Vat, StringFormat={}{0:N}, ValidatesOnDataErrors=True}"  Header="{lex:Loc Cognitivo:local:SubTotalwithVAT}" 
                                                Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Included, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                Width="Auto" IsReadOnly="True" CellStyle="{StaticResource Number_CellStyle}"/>
                        <!--Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=Discount, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"-->
                        <DataGridTemplateColumn Width="Auto" Header="">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Command="customcmd:CustomCommands.Delete"
                                                    Style="{StaticResource btnDeleteChildStyle}"
                                                    CommandParameter="{Binding}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>

        <cntrl:toolBar x:Name="toolBar" appName="SalesInvoice"
			           btnNew_Click="btnNew_Click" 
			           btnDelete_Click="btnDelete_Click" 
			           btnSave_Click="btnSave_Click" 
                       btnEdit_Click="toolBar_btnEdit_Click"
                       btnSearch_Click="toolBar_btnSearch_Click"
			           btnApprove_Click="btnApprove_Click"
                       btnAnull_Click="toolBar_btnAnull_Click"
			           btnCancel_Click="toolBar_btnCancel_Click"
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                       Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                    
			           VerticalAlignment="Top" Grid.ColumnSpan="2" Margin="-1,3,1,0" Grid.RowSpan="2"/>
    </Grid>
</Page>

<Page x:Name="pageSalesReturn" x:Class="Cognitivo.Sales.Return" 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:entity="clr-namespace:entity;assembly=entity" 
	xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl" 
	xmlns:customcmd="clr-namespace:Cognitivo.Class"
	  xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:Converter ="clr-namespace:Cognitivo.Converters"  
	xmlns:mainpref="clr-namespace:Cognitivo.Properties"
	mc:Ignorable="d" 
	xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"  
	xmlns:lex="http://wpflocalizeextension.codeplex.com" 
	lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
	lex:ResxLocalizationProvider.DefaultDictionary="local"
	xmlns:pref="clr-namespace:Cognitivo.Sales"
	lex:LocalizeDictionary.DesignCulture="en-US" 
	d:DesignHeight="450" d:DesignWidth="750" Loaded="Page_Loaded"
	Title="Sales Return">
	<Page.CommandBindings>
		<CommandBinding x:Name="DeleteCommand" Command="customcmd:CustomCommands.Delete" CanExecute="DeleteCommand_CanExecute" Executed="DeleteCommand_Executed"/>
	</Page.CommandBindings>
	<Page.Resources>
		<BooleanToVisibilityConverter x:Key="BoolToVisibility" />
		<Converter:TrueToFalseConverter x:Key="TrueToFalse"/>
		<Converter:BooleanToIsStatusConverter x:Key="BoolToIssued"/>
		<Converter:IsActive2ColorConverter x:Key="ActiveValueConverter"/>
		<CollectionViewSource x:Key="sales_returnViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:sales_return}, CreateList=True}"/>
		<CollectionViewSource x:Key="app_branchViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_branch}, CreateList=True}"/>
		<CollectionViewSource x:Key="app_currencyfxViewSource" Source="{Binding app_currencyfx, Source={StaticResource sales_returnViewSource}}"/>
		<CollectionViewSource x:Key="sales_returnsales_return_detailViewSource" Source="{Binding sales_return_detail, Source={StaticResource sales_returnViewSource}}"/>
		<CollectionViewSource x:Key="sales_invoiceViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:sales_invoice}, CreateList=True}"/>
		<CollectionViewSource x:Key="app_vat_groupViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_vat_group}, CreateList=True}"/>
	</Page.Resources>
	<Grid DataContext="{StaticResource sales_returnViewSource}">
		<Grid.RowDefinitions>
			<RowDefinition Height="40"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="1*"/>
			<ColumnDefinition Width="3*"/>
		</Grid.ColumnDefinitions>
		<Grid Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden" 
			  Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5"/>
		<cntrl:toolBar x:Name="toolBar" appName="SalesReturn"
					   btnCancel_Click="toolBar_btnCancel_Click" 
					   btnDelete_Click="toolBar_btnDelete_Click"  
					   btnSearch_Click="toolBar_btnSearch_Click"
					   btnEdit_Click="toolBar_btnEdit_Click" 
					   btnNew_Click="toolBar_btnNew_Click" 
					   btnSave_Click="toolBar_btnSave_Click"
					   btnApprove_Click="toolBar_btnApprove_Click"
					   btnAnull_Click="toolBar_btnAnull_Click"
					   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
					   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
					   Grid.ColumnSpan="2" Grid.Row="0" HorizontalAlignment="Stretch" 
					   VerticalAlignment="Top"/>
		<ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1">
			<ListBox Background="{StaticResource AccentColor_Brush}" x:Name="sales_returnDataGrid"
				 ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="1"
				 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
				 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
				 ItemsSource="{Binding}">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<cntrl:navList recordCode="{Binding trans_date}" recordName="{Binding contact.name}"
								   recordSecondaryName="{Binding number}" 
								   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/> 
				 </DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>

		</ScrollViewer>
		<Grid Grid.Column="1" Grid.Row="1"
					Background="{StaticResource winBackground}" 
					IsEnabled="{Binding is_accounted, Converter={StaticResource TrueToFalse}}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="2*"></ColumnDefinition>
					<ColumnDefinition Width="1*"></ColumnDefinition>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="300"></RowDefinition>
					<RowDefinition Height="1*"></RowDefinition>
				</Grid.RowDefinitions>
				<ScrollViewer VerticalScrollBarVisibility="Auto">
					<StackPanel IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}" Grid.Column="0" Grid.Row="0" Margin="8,0" MinHeight="256" HorizontalAlignment="Center">
						<Label Content="{lex:Loc Date}" Style="{StaticResource input_label}"/>
						<DatePicker x:Name="trans_dateDatePicker" SelectedDate="{Binding trans_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
								Style="{StaticResource input_datepicker}"/>
						<Label Content="{lex:Loc Customer}" Style="{StaticResource input_label}"/>
						<Controls:SmartBox_Contact x:Name="sbxContact" Get_Customers="True" Select="set_ContactPref"
												   Text="{Binding contact.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
						<Label Content="{lex:Loc Document}" Style="{StaticResource input_label}"/>
						<ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range" 
								  metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
								  metro:ControlsHelper.MouseOverBorderBrush="Silver"
								  Style="{StaticResource input_combobox}"                                 
								  SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
						<Label Content="{lex:Loc ReturnNumber}" Style="{StaticResource input_label}"/>
						<TextBox Style="{StaticResource input_textbox}" 
								 metro:TextBoxHelper.Watermark="{Binding NumberWatermark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								 Text="{Binding number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
						<Label Content="{lex:Loc Currency}" Style="{StaticResource input_label}"/>
						<Controls:CurrencyBox x:Name="cbxCurrency" Width="256" HorizontalAlignment="Left" appName="SalesReturn"
											  SelectedValue="{Binding id_currencyfx, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" LostFocus="cbxCurrency_LostFocus"/>
						<!--<Label Content="{lex:Loc Discount}" Style="{StaticResource input_label}"/>
						<TextBox Style="{StaticResource input_textbox}" Text="{Binding DiscountPercentage, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
						<!--<Controls:CurrencyBox x:Name="cbxCurrencyfx"  ItemsSource="{StaticResource app_currencyfxViewSource}"  SelectedItem="{Binding id_currencyfx, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>-->
						<!--<ComboBox Style="{StaticResource input_combobox}" ItemsSource="{Binding Source={StaticResource app_currencyfxViewSource}}"
							  DisplayMemberPath="app_currency.name" SelectedValuePath="id_currencyfx"
							  SelectedValue="{Binding id_currencyfx, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>-->
						<!--<Grid>
							<Label Content="{lex:Loc Condition}" Style="{StaticResource input_label}"/>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" IsEnabled="False">
								<Label Content="+" HorizontalAlignment="Right" PreviewMouseUp="CreateNewCondition_PreviewMouseUp" 
								   Style="{StaticResource btn_Label}"/>
								<Label Content="e" HorizontalAlignment="Right" PreviewMouseUp="hrefEditCondition_PreviewMouseUp" 
								   Style="{StaticResource btn_Label}"/>
							</StackPanel>
						</Grid>-->
						<!--<ComboBox  Style="{DynamicResource input_combobox}" 
					x:Name="cbxCondition"
					DisplayMemberPath="name" SelectedValue="{Binding id_condition, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
					SelectedValuePath="id_condition"
					 SelectionChanged="cbxCondition_SelectionChanged">
							<ComboBox.ItemsPanel>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel/>
								</ItemsPanelTemplate>
							</ComboBox.ItemsPanel>
						</ComboBox>
						<Grid>
							<Label Content="{lex:Loc Contract}" Style="{StaticResource input_label}"/>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" IsEnabled="False">
								<Label Content="+" HorizontalAlignment="Right" PreviewMouseUp="hrefAddContract_PreviewMouseUp" 
								   Style="{StaticResource btn_Label}"/>
								<Label Content="e" HorizontalAlignment="Right" PreviewMouseUp="hrefEditContract_PreviewMouseUp" 
								   Style="{StaticResource btn_Label}"/>
							</StackPanel>
						</Grid>
						<ComboBox Style="{DynamicResource input_combobox}" 
								DisplayMemberPath="name" x:Name="cbxContract"
								SelectedValue="{Binding id_contract, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
								SelectedValuePath="id_contract" >
							<ComboBox.ItemsPanel>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel/>
								</ItemsPanelTemplate>
							</ComboBox.ItemsPanel>
						</ComboBox>-->
						<!--<Label Content="{lex:Loc Invoice}" Style="{StaticResource input_label}"/>
						<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
							<ComboBox x:Name="cbxSalesInvoice" Style="{StaticResource input_combobox}" 
									  ItemsSource="{Binding Source={StaticResource sales_invoiceViewSource}}"
							  DisplayMemberPath="sales_invoice.number" SelectedValuePath="id_sales_invoice"
							  SelectedValue="{Binding id_sales_invoice, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
							<Button Content="{lex:Loc Import}" Click="ButtonImport_Click" Width="80" Height="20"/>
						</StackPanel>-->
					</StackPanel>
				</ScrollViewer>
			   
				<StackPanel  Grid.Column="1">
					<Label Content="{lex:Loc QuickAction}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>

					<StackPanel x:Name="stackpnlCustomize" Orientation="Horizontal" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
						<Label Content="A" Style="{StaticResource btn_Label}"/>
						<TextBlock MouseUp="tbCustomize_MouseUp" VerticalAlignment="Center">
							<Hyperlink x:Name="hrefCustomize"><Run Text="{lex:Loc Customize}"/></Hyperlink></TextBlock>

						<Popup x:Name="popupCustomize" IsOpen="False" StaysOpen="False" Closed="popupCustomize_Closed"
								   PlacementTarget="{Binding ElementName=stackpnlCustomize}" Placement="Mouse">
							<Border BorderThickness="1" BorderBrush="Gray">
								<StackPanel Background="WhiteSmoke" Width="180">
									<Label Content="{lex:Loc Header}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
									<WrapPanel>
										<TextBox Width="30" HorizontalAlignment="Left"   Margin="6,2,2,2"
											 Text="{Binding Source={x:Static pref:Settings.Default}, Path=TransDate_OffSet, Mode=TwoWay}">
										</TextBox>
										<Label Content="Offset Date" Style="{StaticResource generic_Label}"/>
									</WrapPanel>
								</StackPanel>
							</Border>
						</Popup>
					</StackPanel>
					<StackPanel Orientation="Horizontal" >
						<Label Content="" Style="{StaticResource btn_Label}"/>
						<TextBlock Margin="5,0" VerticalAlignment="Center">
										<Hyperlink PreviewMouseUp="toolBar_btnPrint_Click">
											<Run Text="{lex:Loc Document}"/>
										</Hyperlink>
						</TextBlock>
					</StackPanel>

					<StackPanel  Orientation="Horizontal" VerticalAlignment="Center" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
						<Label Content="" Style="{StaticResource ico_Label}" 
								FontFamily="/Cognitivo;component/Resources/#cognitivo"/>
						<TextBlock Style="{StaticResource text_Data}">
							<Hyperlink PreviewMouseUp="btnSalesInvoice_Click">
								<Run Text="{lex:Loc SalesInvoice}"/>
							</Hyperlink>
						</TextBlock>
					</StackPanel>

					<ItemsControl ItemsSource="{Binding Source={StaticResource sales_returnsales_return_detailViewSource}}" Margin="0">
						<!-- host the items generated by this ItemsControl in a grid -->
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel/>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<!-- render each bound item using a TextBlock-->
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<TextBlock VerticalAlignment="Top" Margin="5,0"  Style="{StaticResource text_Label}">
									<Hyperlink PreviewMouseUp="salesinvoice_PreviewMouseUp" Tag="{Binding sales_invoice_detail.sales_invoice}">
										<Run Text="{Binding sales_invoice_detail.sales_invoice.number}" />
									</Hyperlink>
								</TextBlock>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>

					<StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesRep, Converter={StaticResource BoolToVisibility}, 
									UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
						<Label Content="" Style="{StaticResource ico_Label}"/>
						<Label Content="{lex:Loc Type}" Style="{StaticResource input_label}"/>
						<ComboBox Grid.Column="1" Style="{StaticResource ComboToLabelStyle}"
							  Name="cbxReturnType"
							  SelectedValue="{Binding return_type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
													  ValidatesOnExceptions=True, NotifyOnValidationError=True, 
													  ValidatesOnDataErrors=True}"/>
					</StackPanel>

					<StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesRepresentative, Converter={StaticResource BoolToVisibility}, 
									UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
						<Label Content="" Style="{StaticResource ico_Label}"/>
						<Label Content="{lex:Loc Branch}"  Style="{StaticResource input_label}"/>
						<ComboBox  Style="{StaticResource ComboToLabelStyle}" DisplayMemberPath="name"
						  metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
						  metro:ControlsHelper.MouseOverBorderBrush="Silver"
						  SelectedValue="{Binding id_branch, Mode=TwoWay, NotifyOnValidationError=True, 
						  ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
						  SelectedValuePath="id_branch" 
						  ItemsSource="{Binding Source={StaticResource app_branchViewSource}}"/>
					</StackPanel>

					<StackPanel IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
					<Label Content="{lex:Loc Comment}" Style="{StaticResource input_label}"/>
					<TextBox x:Name="commentTextBox" Style="{StaticResource input_textbox}" Width="140"
							 Text="{Binding comment, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=true}" Margin="4,0,0,4" Height="64"/>
					<TextBox x:Name="TextBox" Style="{StaticResource input_textbox}" Width="140"
						Text="{Binding comment}" Visibility="Hidden" Margin="4,0,0,4" Height="50"/>
					</StackPanel>
				</StackPanel>
				<Controls:Totals Grid.Row="1" Grid.Column="1"
					GrandTotal="{Binding GrandTotal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={StaticResource sales_returnViewSource}, StringFormat={}{0:N}}"
											 Currency="{Binding app_currencyfx.app_currency.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											 VerticalAlignment="Top" HorizontalAlignment="Right" CanOpen="False" />

				<Grid Grid.ColumnSpan="2" Grid.Row="1">
					<StackPanel  MinHeight="100" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}">
						<Controls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="item_Select" Margin="8"
												 IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}"/>
						
						<DataGrid x:Name="sales_return_detailDataGrid" AutoGenerateColumns="False" Style="{StaticResource detail_Datagrid}" EnableRowVirtualization="True" 
								IsReadOnly="{Binding ElementName=pageSalesReturn, Path=SetIsEnable, Converter={StaticResource TrueToFalse}, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}" 
								ItemsSource="{Binding Source={StaticResource sales_returnsales_return_detailViewSource}}" InitializingNewItem="sales_return_detailDataGrid_InitializingNewItem"
								RowDetailsVisibilityMode="VisibleWhenSelected" RowEditEnding="sales_return_detailDataGrid_RowEditEnding" CellEditEnding="sales_return_detailDataGrid_CellEditEnding">
							<DataGrid.Columns>
								<DataGridTextColumn Binding="{Binding id_sales_return_detail, UpdateSourceTrigger=PropertyChanged}" 
													Header="Id" IsReadOnly="True" Width="SizeToHeader" Visibility="{Binding Source={x:Static mainpref:Settings.Default}, Path=developer_Option, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged}"/>
								<DataGridCheckBoxColumn Header="{lex:Loc Cognitivo:local:Stock}" Width="Auto"/>
								<DataGridTextColumn Header="{lex:Loc Cognitivo:local:Invoice}" Width="SizeToHeader" IsReadOnly="True"
													Binding="{Binding sales_invoice_detail.sales_invoice.number}"/>
								<DataGridTextColumn Binding="{Binding item.code, UpdateSourceTrigger=PropertyChanged}" 
													Header="{lex:Loc Cognitivo:local:Code}" IsReadOnly="True" Width="100"/>
								<DataGridTextColumn Binding="{Binding item_description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
													Header="{lex:Loc Cognitivo:local:Items}" Width="*"/>
								<DataGridComboBoxColumn DisplayMemberPath="name" SelectedValuePath="id_vat_group" 
													  SelectedValueBinding="{Binding id_vat_group, Mode=TwoWay, NotifyOnValidationError=True, 
																			  ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, 
																			  ValidatesOnDataErrors=True}" 
													  ItemsSource="{Binding Source={StaticResource app_vat_groupViewSource}}"  
												  />

								<DataGridTextColumn Binding="{Binding quantity, UpdateSourceTrigger=PropertyChanged}" Header="{lex:Loc Cognitivo:local:Quantity}" Width="Auto"/>
								<DataGridTextColumn Binding="{Binding unit_price, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Header="{lex:Loc Cognitivo:local:Price}" Width="Auto"/>
								<DataGridTextColumn Binding="{Binding UnitPrice_Vat, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Header="{lex:Loc Cognitivo:local:PricewithVAT}" Width="Auto"/>
								<DataGridTextColumn Binding="{Binding SubTotal, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
													Header="{lex:Loc Cognitivo:local:SubTotal}" Width="Auto" IsReadOnly="True"/>
								<DataGridTextColumn Binding="{Binding SubTotal_Vat, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Header="{lex:Loc Cognitivo:local:SubTotalwithVAT}" Width="Auto" IsReadOnly="True"/>
								<DataGridTemplateColumn Width="Auto">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" Style="{StaticResource btnDeleteChildStyle}"/>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
							</DataGrid.Columns>
						</DataGrid>
					</StackPanel>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</Page>
<Page x:Class="Cognitivo.Production.FractionOrder" Title="{lex:Loc ProductionOrder}" x:Name="Productionorder"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:Panels="clr-namespace:cntrl.Panels;assembly=cntrl" 
      xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      mc:Ignorable="d" 
      xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"  
      xmlns:data="clr-namespace:entity;assembly=entity"
      xmlns:entity="clr-namespace:entity;assembly=entity"
      xmlns:converter="clr-namespace:Cognitivo.Converters"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:cntrlConverter="clr-namespace:cntrl.Converters;assembly=cntrl"
      xmlns:lex="http://wpflocalizeextension.codeplex.com" 
         xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
          xmlns:customcmd="clr-namespace:Cognitivo.Class"
      lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
      lex:ResxLocalizationProvider.DefaultDictionary="local"
      lex:LocalizeDictionary.DesignCulture="en-US" 
      MinHeight="600" MinWidth="800" Loaded="Page_Loaded">
    <!--<Page.CommandBindings>
        <CommandBinding Command="customcmd:CustomCommands.Delete" 
                        CanExecute="DeleteCommandBinding_CanExecute" 
                        Executed="DeleteCommandBinding_Executed"/>

        <CommandBinding x:Name="EditCommand" Command="customcmd:CustomCommands.EditAll" 
                        CanExecute="EditCommand_CanExecute" 
                        Executed="EditCommand_Executed"/>
    </Page.CommandBindings>-->
    <Page.Resources>
        <converter:TreeViewchildFilter x:Key="tree"/>
        <converter:Type2Enable x:Key="Type2Enable"/>
        <converter:SecurityConverter x:Key="SecurityConverter"/>
        <converter:Status_Project_2ColorConverter x:Key="ProjectStatus2Color"/>
        <converter:ProjectPending2BooleanConverter x:Key="ProjectPending2Bool"/>
        <converter:NotConverter x:Key="NotConverter"/>
        <converter:Bool2Collapsed x:Key="Bool2Collapsed"/>
        <CollectionViewSource x:Key="projectViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:project}, CreateList=True}"/>
        <CollectionViewSource x:Key="production_orderViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_order}, CreateList=True}"/>
        <CollectionViewSource x:Key="production_executionViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_execution}, CreateList=True}"/>
        <CollectionViewSource x:Key="projectproject_taskViewSource" Source="{Binding project_task, Source={StaticResource projectViewSource}}"/>
        <CollectionViewSource x:Key="production_lineViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_line}, CreateList=True}"/>
        <!--<CollectionViewSource x:Key="projectpurchase_order_detailViewSource" Source="{Binding purchase_order_detail, Source={StaticResource projectViewSource}}"/>-->
        <CollectionViewSource x:Key="production_orderproduction_order_detailViewSource" Source="{Binding production_order_detail, Source={StaticResource production_orderViewSource}}" d:DesignSource="{d:DesignInstance {x:Type entity:production_order_detail}, CreateList=True}"/>
        <CollectionViewSource x:Key="production_order_detaillProductViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_order_detail}, CreateList=True}"/>
        <CollectionViewSource x:Key="production_order_detaillRawViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_order_detail}, CreateList=True}"/>
        <CollectionViewSource x:Key="production_order_detaillServiceViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_order_detail}, CreateList=True}"/>
        <CollectionViewSource x:Key="production_order_detaillAssetViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_order_detail}, CreateList=True}"/>
        <CollectionViewSource x:Key="production_order_detaillSupplyViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_order_detail}, CreateList=True}"/>
        <CollectionViewSource x:Key="production_order_detaillServiceContractViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_order_detail}, CreateList=True}"/>
        <CollectionViewSource x:Key="production_executionproduction_execustion_detailViewSource" Source="{Binding production_execustion_detail, Source={StaticResource production_executionViewSource}}" d:DesignSource="{d:DesignInstance {x:Type entity:production_execution_detail}, CreateList=True}"/>
        <CollectionViewSource x:Key="production_execution_detailProductViewSource" Source="{Binding production_execution_detail, Source={StaticResource production_executionViewSource}}"/>
        <CollectionViewSource x:Key="production_execution_detailRawViewSource" Source="{Binding production_execution_detail, Source={StaticResource production_executionViewSource}}"/>
        <CollectionViewSource x:Key="production_execution_detailAssetViewSource" Source="{Binding production_execution_detail, Source={StaticResource production_executionViewSource}}"/>
        <CollectionViewSource x:Key="production_execution_detailServiceViewSource" Source="{Binding production_execution_detail, Source={StaticResource production_executionViewSource}}"/>
        <CollectionViewSource x:Key="production_execution_detailServiceContractViewSource" Source="{Binding production_execution_detail, Source={StaticResource production_executionViewSource}}"/>
        <CollectionViewSource x:Key="production_execution_detailSupplyViewSource" Source="{Binding production_execution_detail, Source={StaticResource production_executionViewSource}}"/>
        <CollectionViewSource x:Key="production_order_dimensionViewSource" Source="{Binding production_order_dimension, Source={StaticResource production_orderproduction_order_detailViewSource}}"/>
        <!--<CollectionViewSource x:Key="item_transferViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_transfer}, CreateList=True}"/>-->
        <!--<CollectionViewSource x:Key="item_requestViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_request}, CreateList=True}"/>-->
        <CollectionViewSource x:Key="project_task_dimensionViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:project_task_dimension}, CreateList=True}"/>
       
        <CollectionViewSource x:Key="item_movementViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_movement}, CreateList=True}"/>
        <CollectionViewSource x:Key="item_movementitem_movement_dimensionViewSource" Source="{Binding item_movement_dimension, Source={StaticResource item_movementViewSource}}"/>
        <CollectionViewSource x:Key="item_movementrawViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_movement}, CreateList=True}"/>
        <CollectionViewSource x:Key="item_movementrawitem_movement_dimensionViewSource" Source="{Binding item_movement_dimension, Source={StaticResource item_movementrawViewSource}}"/>
        <CollectionViewSource x:Key="hr_time_coefficientViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:hr_time_coefficient}, CreateList=True}"/>
        <sys:Int32 x:Key="IntOne">1</sys:Int32>
        <sys:Int32 x:Key="IntTwo">2</sys:Int32>
        <sys:Int32 x:Key="IntThree">3</sys:Int32>
        <sys:Int32 x:Key="IntFour">4</sys:Int32>
        <sys:Int32 x:Key="IntFive">5</sys:Int32>
        <sys:Int32 x:Key="IntSix">6</sys:Int32>
        <sys:Int32 x:Key="IntSeven">7</sys:Int32>
    </Page.Resources>
    <Grid Background="White" DataContext="{StaticResource production_orderViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Name="crud_modal_request" Background="{StaticResource Modal_BackgroundColor}" Visibility="Collapsed"
              Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5">

        </Grid>
        <Grid x:Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden" Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5" IsVisibleChanged="crud_modal_IsVisibleChanged"/>

        <ListBox Background="{StaticResource AccentColor_Brush}" x:Name="production_orderDataGrid"
			     ScrollViewer.VerticalScrollBarVisibility="Auto"
			     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
			     ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
			     ItemsSource="{Binding}" Grid.Row="1" SelectionChanged="productionorderDataGrid_SelectionChanged">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordName="{Binding name, UpdateSourceTrigger=PropertyChanged}"
                                   recordCode="{Binding project.project_template.name, UpdateSourceTrigger=PropertyChanged}"
						           recordSecondaryName="{Binding trans_date, Mode=TwoWay, StringFormat=d, UpdateSourceTrigger=PropertyChanged}"
                                   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   Status="{Binding status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid Grid.Column="1" Grid.Row="1" Margin="0" IsEnabled="{Binding State}">
            <Grid.RowDefinitions>
                <RowDefinition Height="6*"/>
                <RowDefinition Height="9*"/>
            </Grid.RowDefinitions>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel DataContext="{StaticResource production_orderViewSource}" HorizontalAlignment="Center"  IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="{lex:Loc Name}" Style="{StaticResource input_label}"/>
                        <TextBox Style="{StaticResource input_textbox}" Text="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="{lex:Loc Document}" Style="{StaticResource input_label}"/>
                        <ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range" 
                              metro:ControlsHelper.FocusBorderBrush="RoyalBlue" SelectedIndex="0"
                              metro:ControlsHelper.MouseOverBorderBrush="Silver"
                              Style="{StaticResource input_combobox}"
                              SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                        <Label Content="{lex:Loc OrderNumber}" Style="{StaticResource input_label}"/>
                        <TextBox metro:TextBoxHelper.Watermark="{Binding NumberWatermark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{StaticResource input_textbox}" Text="{Binding work_number,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="{lex:Loc Line}" Style="{StaticResource input_label}"/>
                        <ComboBox x:Name="cmbline"  Style="{DynamicResource input_combobox}" 
					          DisplayMemberPath="name" SelectedValue="{Binding id_production_line, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
					          SelectedValuePath="id_production_line"
					          ItemsSource="{Binding Source={StaticResource production_lineViewSource}}">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                        <Label Content="{lex:Loc Type}" Style="{StaticResource input_label}"/>
                        <ComboBox x:Name="cmbtype"  Style="{DynamicResource input_combobox}" 
					              SelectedValue="{Binding types, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" >
                        </ComboBox>
                        <Label Content="{lex:Loc StartDate}" Style="{StaticResource input_label}"/>
                        <DatePicker SelectedDate="{Binding start_date_est, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource input_datepicker}" />
                        <Label Content="{lex:Loc EndDate}" Style="{StaticResource input_label}"/>
                        <DatePicker SelectedDate="{Binding end_date_est, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource input_datepicker}" />
                    </StackPanel>
                    <StackPanel Grid.Column="1" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="{lex:Loc QuickAction}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" Margin="5"/>
                        <StackPanel Orientation="Horizontal" >
                            <Label Content="{lex:Loc Project}" Style="{StaticResource input_label}" VerticalAlignment="Center"/>
                            <Label Content="{Binding project.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center">


                            <TextBlock Style="{StaticResource text_Label}" Text="{lex:Loc CostCenter}"/>
                            <TextBlock Text="{Binding project_cost_center, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource text_Data}" Width="55"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </ScrollViewer>
            <TabControl HorizontalAlignment="Stretch" metro:TabControlHelper.IsUnderlined="True" 
                        Grid.Row="2" Grid.ColumnSpan="2" Margin="8">
                <TabItem Header="{lex:Loc Order}">
                    <Grid Grid.Row="1"  Background="White" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}"
                              DataContext="{StaticResource production_orderproduction_order_detailViewSource}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type entity:production_order_detail}" 
            							                      ItemsSource="{Binding child,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <Panels:pnl_TreeView StatusColor="{Binding status, Converter={StaticResource ProjectStatus2Color},  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            								                 IsChecked="{Binding IsSelected,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            								                 HorizontalAlignment="Stretch"
            								                 Type_Name="{Binding items.id_item_type, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                                             TaskName="{Binding item.name,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
            								                 QuantityExec="{Binding quantity_exe, StringFormat=N2, Mode=OneWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                                             Quantity="{Binding quantity,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </HierarchicalDataTemplate>
                            </Grid.Resources>
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <cntrl:ExtendedTreeView x:Name="treeProject" ItemsSource="{Binding}"   
                                                        VirtualizingPanel.VirtualizationMode="Recycling" 
                                                        VirtualizingPanel.IsVirtualizing="True" 
                                                        ScrollViewer.CanContentScroll="True" SelectedItemChanged="treeProject_SelectedItemChanged">
                                    <TreeView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel/>
                                        </ItemsPanelTemplate>
                                    </TreeView.ItemsPanel>
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <Setter Property="IsExpanded" Value="True" />
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                </cntrl:ExtendedTreeView>
                            </ScrollViewer>
                        </Grid>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="1">
                            <StackPanel DataContext="{Binding SelectedItem_, ElementName=treeProject}">
                                <Button Content="{lex:Loc Fraction}" Click="Button_Click" Style="{StaticResource btn_green}" Margin="16"/>
                                <!--<cntrl:toolBar_Mini appName="ProductionOrder" State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                    Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                    btnNew_Click="btnNewTask_Click"
                                                    btnEdit_Click="btnEditTask_Click"
                                                    btnSave_Click="btnSaveTask_Click"
                                                    btnDelete_Click="btnDeleteTask_Click"
                                                    btnApprove_Click="toolIcon_Click"
                                                    btnAnull_Click="toolIcon_Click_1"
                                                    btnParent_Click="btnAddParentTask_Click"/>-->
                                <cntrl:toolBar_Mini appName="ProductionOrder" State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                    Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                    btnNew_Click="btnNewTask_Click"
                                                    btnEdit_Click="btnEditTask_Click"
                                                    btnSave_Click="btnSaveTask_Click"
                                                    btnDelete_Click="btnDeleteTask_Click"
                                                    btnApprove_Click="toolIcon_Click"
                                                    btnAnull_Click="toolIcon_Click_1"
                                                 />
                                <StackPanel HorizontalAlignment="Center" Margin="0,16">
                                    <StackPanel x:Name="stpcode">
                                        <Label Content="{lex:Loc Parent}" Style="{StaticResource input_label}"/>
                                        <ComboBox x:Name="cbxParent" Style="{StaticResource input_combobox}" 
                                                  IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProjectPending2Bool}}" 
                                                  SelectedItem="{Binding parent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
							                        DisplayMemberPath="name" SelectedValuePath="id_order_detail"    />

                                        <Label Content="{lex:Loc Item}" Style="{StaticResource input_label}"/>
                                        <Controls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="item_Select" />
                                        <metro:ToggleSwitch x:Name="ToggleQuantity" OffLabel="{lex:Loc Input}" OnLabel="{lex:Loc Output}" HorizontalAlignment="Right" OffSwitchBrush="Silver" OnSwitchBrush="Gray" UseLayoutRounding="False" ThumbIndicatorWidth="16" ThumbIndicatorBrush="{StaticResource AccentColor_Introvert}" Checked="ToggleQuantity_Checked" Unchecked="ToggleQuantity_Unchecked"/>

                                        <Label Content="{lex:Loc Quantity}" Style="{StaticResource input_label}"/>
                                        <TextBox x:Name="txtqty" IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProjectPending2Bool}}"
                                             Text="{Binding quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N4}}" Style="{StaticResource input_textbox}"/>
                                    </StackPanel>

                                    <StackPanel x:Name="stpproduct">
                                        <Label Content="Product Dimension"/>
                                        <DataGrid x:Name="project_task_dimensionDataGrid" AutoGenerateColumns="False" 
                                                      EnableRowVirtualization="True" Margin="8"  CanUserAddRows="False"
                                                   
                                                      RowDetailsVisibilityMode="VisibleWhenSelected">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn x:Name="dimension" Binding="{Binding app_dimension.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N}}" 
                                                                        Header="{lex:Loc Cognitivo:local:Dimension}" ElementStyle="{StaticResource RightAlignStyle}"
                                                                        Width="auto"/>
                                                <DataGridTextColumn x:Name="valueColumn2" Binding="{Binding value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N}}" 
                                                                        Header="{lex:Loc Cognitivo:local:Quantity}" ElementStyle="{StaticResource RightAlignStyle}"
                                                                        Width="auto"/>
                                                <DataGridTextColumn x:Name="measurement" Binding="{Binding app_measurement.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N}}" 
                                                                        Header="{lex:Loc Cognitivo:local:Measurement}" ElementStyle="{StaticResource RightAlignStyle}"
                                                                        Width="auto"/>
                                            </DataGrid.Columns>
                                        </DataGrid>

                                    </StackPanel>
                                    <!--<StackPanel x:Name="StpMovement" >
                                        <Label Content="Stock Dimension"/>
                                        <DataGrid Height="Auto" x:Name="item_movement_detailDataGrid" Width="340" SelectionChanged="item_movement_detailDataGrid_SelectionChanged"
                              AutoGenerateColumns="False" ItemsSource="{Binding Source={StaticResource item_movementViewSource}}"
                              EnableRowVirtualization="True" 
                              RowDetailsVisibilityMode="VisibleWhenSelected" HeadersVisibility="All">
                                            <DataGrid.Columns>
                                                <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"/>
                                                <DataGridTextColumn Binding="{Binding item_product.item.name, UpdateSourceTrigger=PropertyChanged}"  Header="{lex:Loc Cognitivo:local:Name}" Width="100" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding item_product.item.name, UpdateSourceTrigger=PropertyChanged}"  Header="{lex:Loc Cognitivo:local:Name}" Width="100" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding credit, Mode=TwoWay, StringFormat=\{0:N\}, UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource RightAlignStyle}" 
                        		Header="{lex:Loc Cognitivo:local:Quantity}" IsReadOnly="True" Width="*"/>
                                            </DataGrid.Columns>
                                            <DataGrid.RowDetailsTemplate>
                                                <DataTemplate>
                                                    <Grid Background="{StaticResource AccentColor_Introvert}">
                                                        <DataGrid x:Name="item_inventory_dimentionDataGrid" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" Margin="4" IsReadOnly="True"
                            			EnableRowVirtualization="True" Height="Auto" ItemsSource="{Binding Source={StaticResource item_movementitem_movement_dimensionViewSource}}"
                            			RowDetailsVisibilityMode="VisibleWhenSelected" CanUserDeleteRows="False">
                                                            <DataGrid.Columns>
                                                                <DataGridComboBoxColumn x:Name="dimentionComboCol" Header="Dimension" Width="auto" 
                            					ItemsSource="{Binding Source={StaticResource app_dimensionViewSource}}" DisplayMemberPath="name" SelectedValuePath="id_dimension"
                            					SelectedValueBinding="{Binding id_dimension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                <DataGridTextColumn x:Name="valueColumn2" Binding="{Binding value, Mode=TwoWay, StringFormat=\{0:N\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ElementStyle="{StaticResource RightAlignStyle}" Header="value" Width="auto"/>
                                                                <DataGridComboBoxColumn x:Name="AppMeasurementComboBox" 
                            					DisplayMemberPath="name" SelectedValuePath="id_measurement"  
                            					ItemsSource="{Binding Source={StaticResource app_measurementViewSource}}"
                            					SelectedValueBinding="{Binding id_measurement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            					Header="{lex:Loc Cognitivo:local:Measurement}" Width="auto"/>
                                                            </DataGrid.Columns>
                                                        </DataGrid>
                                                    </Grid>
                                                </DataTemplate>
                                            </DataGrid.RowDetailsTemplate>
                                        </DataGrid>
                                    </StackPanel>-->
                                </StackPanel>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem Header="{lex:Loc ProductionExecution}">
                    <TabControl Grid.ColumnSpan="2" Grid.Row="1">
                        <TabItem Header="{lex:Loc Product}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Background="WhiteSmoke">

                                    <Grid Grid.Row="1" Grid.Column="0" Background="White" DataContext="{StaticResource production_order_detaillProductViewSource}">
                                        <Grid.Resources >
                                            <HierarchicalDataTemplate DataType="{x:Type data:production_order_detail}" 
                                                              ItemsSource="{Binding child, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource tree}, ConverterParameter={StaticResource IntOne}}">
                                                <Panels:pnl_TreeView   StatusColor="{Binding status, Converter={StaticResource ProjectStatus2Color},  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding .,Converter={StaticResource Type2Enable}}"
                                             HorizontalAlignment="Stretch"
                                             Type_Name="{Binding items.id_item_type, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                             TaskName="{Binding item.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                             Quantity="{Binding quantity, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}}" 
                                             QuantityExec="{Binding quantity_exe, StringFormat=N2, Mode=OneWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"/>
                                            </HierarchicalDataTemplate>
                                        </Grid.Resources>

                                        <cntrl:ExtendedTreeView x:Name="treeProduct" ItemsSource="{Binding}" SelectedItemChanged="treeProduct_SelectedItemChanged" 
                                          IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                                            <TreeView.ItemContainerStyle>
                                                <Style TargetType="{x:Type TreeViewItem}">
                                                    <Setter Property="IsExpanded" Value="True" />
                                                </Style>
                                            </TreeView.ItemContainerStyle>
                                        </cntrl:ExtendedTreeView>
                                    </Grid>
                                    <Rectangle Width="1" Fill="Silver" HorizontalAlignment="Right"/>
                                </Grid>
                                <StackPanel Grid.Column="1" Background="WhiteSmoke" DataContext="{StaticResource production_execution_detailProductViewSource}" 
                                    IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="8" IsEnabled="{Binding SelectedItem, ElementName=treeProduct, Converter={StaticResource Type2Enable}}">
                                        <Label Style="{StaticResource generic_Label}" Content="{lex:Loc Quantity}" />
                                        <TextBox x:Name="txtProduct" Width="64" KeyUp="btnInsert_KeyDown" VerticalAlignment="Top" />
                                        <Button x:Name="btnInsert_Product" Content="{lex:Loc Insert}" Click="btnInsert_Click"/>
                                    </StackPanel>
                                      <DataGrid  Margin="4,0" x:Name="dgproduct" Background="WhiteSmoke" AutoGenerateColumns="False" 
                                      ItemsSource="{Binding Source={StaticResource production_execution_detailProductViewSource}}" 
                                      SelectionChanged="dgproduct_SelectionChanged">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Date}" IsReadOnly="True"
                                                        Binding="{Binding trans_date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="Auto"/>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Name}" IsReadOnly="True" Width="*"
                                                        Binding="{Binding item.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}"/>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Quantity}" IsReadOnly="True"
                                                        Binding="{Binding quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="128"/>
                                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Movement}" IsReadOnly="True"
                                                        Binding="{Binding movement_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="128"/>
                                            <DataGridTemplateColumn Width="Auto" Header="">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Button Command="customcmd:CustomCommands.Delete"
                                                        CommandParameter="{Binding}" Style="{StaticResource btnDeleteChildStyle}"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid >
                                        <!--<StackPanel x:Name="StpMovement" Grid.Column="1">
                                            <Label Content="Stock"/>
                                            <DataGrid Height="Auto" x:Name="item_movement_detailDataGrid" Width="340" SelectionChanged="item_movement_detailDataGrid_SelectionChanged"
                              AutoGenerateColumns="False" ItemsSource="{Binding Source={StaticResource item_movementViewSource}}"
                              EnableRowVirtualization="True" 
                              RowDetailsVisibilityMode="VisibleWhenSelected" HeadersVisibility="All">
                                                <DataGrid.Columns>
                                                                                                      <DataGridTextColumn Binding="{Binding item_product.item.name, UpdateSourceTrigger=PropertyChanged}"  Header="{lex:Loc Cognitivo:local:Name}" Width="100" IsReadOnly="True"/>
                                                    <DataGridTextColumn Binding="{Binding credit, Mode=TwoWay, StringFormat=\{0:N\}, UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource RightAlignStyle}" 
                        		Header="{lex:Loc Cognitivo:local:Quantity}" IsReadOnly="True" Width="*"/>
                                                </DataGrid.Columns>
                                                <DataGrid.RowDetailsTemplate>
                                                    <DataTemplate>
                                                        <Grid Background="{StaticResource AccentColor_Introvert}">
                                                            <DataGrid x:Name="item_inventory_dimentionDataGrid" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" Margin="4" IsReadOnly="True"
                            			EnableRowVirtualization="True" Height="Auto" ItemsSource="{Binding Source={StaticResource item_movementitem_movement_dimensionViewSource}}"
                            			RowDetailsVisibilityMode="VisibleWhenSelected" CanUserDeleteRows="False">
                                                                <DataGrid.Columns>
                                                                    <DataGridComboBoxColumn x:Name="dimentionComboCol" Header="Dimension" Width="auto" 
                            					ItemsSource="{Binding Source={StaticResource app_dimensionViewSource}}" DisplayMemberPath="name" SelectedValuePath="id_dimension"
                            					SelectedValueBinding="{Binding id_dimension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                    <DataGridTextColumn x:Name="valueColumn2" Binding="{Binding value, Mode=TwoWay, StringFormat=\{0:N\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ElementStyle="{StaticResource RightAlignStyle}" Header="value" Width="auto"/>
                                                                    <DataGridComboBoxColumn x:Name="AppMeasurementComboBox" 
                            					DisplayMemberPath="name" SelectedValuePath="id_measurement"  
                            					ItemsSource="{Binding Source={StaticResource app_measurementViewSource}}"
                            					SelectedValueBinding="{Binding id_measurement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            					Header="{lex:Loc Cognitivo:local:Measurement}" Width="auto"/>
                                                                </DataGrid.Columns>
                                                            </DataGrid>
                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGrid.RowDetailsTemplate>
                                            </DataGrid>
                                        </StackPanel>-->
                                 



                                    <StackPanel>
                                        <Label x:Name="lblProjectedProductQty" Content="Total" />
                                        <Label x:Name="lblTotalProduct" Content="Total" />
                                    </StackPanel>

                                </StackPanel>

                            </Grid>

                        </TabItem>
                        <TabItem Header="{lex:Loc RawMaterial}" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Background="WhiteSmoke">

                                    <Grid Grid.Row="1" Grid.Column="0" Background="White" DataContext="{StaticResource production_order_detaillRawViewSource}">
                                        <Grid.Resources >
                                            <HierarchicalDataTemplate DataType="{x:Type data:production_order_detail}" 
                                              ItemsSource="{Binding child,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource tree},ConverterParameter={StaticResource IntTwo}}">
                                                <Panels:pnl_TreeView  StatusColor="{Binding status, Converter={StaticResource ProjectStatus2Color},  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             IsChecked="{Binding IsSelected, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding .,Converter={StaticResource Type2Enable}}"
                                              HorizontalAlignment="Stretch"
                                             Type_Name="{Binding items.id_item_type, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                             TaskName="{Binding item.name, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}" 
                                             Quantity="{Binding quantity, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}}"
                                             QuantityExec="{Binding quantity_exe, StringFormat=N2, Mode=OneWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"/>
                                            </HierarchicalDataTemplate>
                                        </Grid.Resources>
                                        <cntrl:ExtendedTreeView x:Name="treeRaw" ItemsSource="{Binding}" SelectedItemChanged="treeraw_SelectedItemChanged">
                                            <TreeView.ItemContainerStyle>
                                                <Style TargetType="{x:Type TreeViewItem}">
                                                    <Setter Property="IsExpanded" Value="True" />
                                                </Style>
                                            </TreeView.ItemContainerStyle>
                                        </cntrl:ExtendedTreeView>
                                    </Grid>
                                    <Rectangle Width="1" Fill="Silver" HorizontalAlignment="Right"/>
                                </Grid>
                                <StackPanel Grid.Column="1"  VerticalAlignment="Top" Background="WhiteSmoke" DataContext="{StaticResource production_execution_detailRawViewSource}" IsEnabled="{Binding SelectedItem, ElementName=treeRaw, Converter={StaticResource Type2Enable}}">
                                    <!--<DataGrid x:Name="Production_execution_detailRaw_dimensionDataGrid" AutoGenerateColumns="False" 
                                                      EnableRowVirtualization="True"  IsReadOnly="True" CanUserAddRows="False"
                                                   
                                                      RowDetailsVisibilityMode="VisibleWhenSelected">
                                        <DataGrid.Columns>
                                            <DataGridComboBoxColumn Header="{lex:Loc Cognitivo:local:Dimension}" Width="auto"
									                                        ItemsSource="{Binding Source={StaticResource app_dimensionViewSource}}" 
                                                                            DisplayMemberPath="name" SelectedValuePath="id_dimension"
									                                        SelectedValueBinding="{Binding id_dimension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <DataGridTextColumn  Binding="{Binding value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N}}" 
                                                                        Header="{lex:Loc Cognitivo:local:Quantity}" ElementStyle="{StaticResource RightAlignStyle}"
                                                                        Width="auto"/>
                                            <DataGridComboBoxColumn x:Name="AppMeasurementComboBox" 
									                                        DisplayMemberPath="name" SelectedValuePath="id_measurement"  
									                                        ItemsSource="{Binding Source={StaticResource app_measurementViewSource}}"
									                                        SelectedValueBinding="{Binding id_measurement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                            Header="{lex:Loc Cognitivo:local:Measurement}" Width="auto"/>
                                        </DataGrid.Columns>
                                    </DataGrid>-->
                                    <StackPanel Orientation="Horizontal" Margin="0,4">

                                        <Label Style="{StaticResource generic_Label}" Content="{lex:Loc Quantity}" />
                                        <TextBox  x:Name="txtRaw" Width="64" KeyUp="btnInsert_KeyDown" Margin="8,0" VerticalAlignment="Top" />
                                        <Button x:Name="btnInsert_RawMaterial" Content="{lex:Loc Insert}" Click="btnInsert_Click"/>
                                    </StackPanel>
                                    
                                        <DataGrid Margin="0" x:Name="dgRaw"  AutoGenerateColumns="False" ItemsSource="{Binding Source={StaticResource production_execution_detailRawViewSource}}" SelectionChanged="dgRaw_SelectionChanged">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Name}" IsReadOnly="True" Binding="{Binding item.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Width="100"/>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Quantity}" Binding="{Binding quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100"/>
                                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Movement}" IsReadOnly="True"
                                                        Binding="{Binding movement_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="128"/>
                                            <DataGridTemplateColumn Width="32" Header="">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" Style="{StaticResource btnDeleteChildStyle}"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <!--<StackPanel x:Name="StpMovementraw" Grid.Column="1">
                                            <Label Content="Stock"/>
                                            <DataGrid Height="Auto" x:Name="item_movement_detailDataGridraw" Width="340" SelectionChanged="item_movement_detailDataGridraw_SelectionChanged"
                                                      AutoGenerateColumns="False" ItemsSource="{Binding Source={StaticResource item_movementrawViewSource}}"
                                                      EnableRowVirtualization="True" 
                                                      RowDetailsVisibilityMode="VisibleWhenSelected" HeadersVisibility="All">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Binding="{Binding item_product.item.name, UpdateSourceTrigger=PropertyChanged}"  Header="{lex:Loc Cognitivo:local:Name}" Width="100" IsReadOnly="True"/>
                                                    <DataGridTextColumn Binding="{Binding credit, Mode=TwoWay, StringFormat=\{0:N\}, UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource RightAlignStyle}" 
                        		Header="{lex:Loc Cognitivo:local:Quantity}" IsReadOnly="True" Width="*"/>
                                                </DataGrid.Columns>
                                                <DataGrid.RowDetailsTemplate>
                                                    <DataTemplate>
                                                        <Grid Background="{StaticResource AccentColor_Introvert}">
                                                            <DataGrid x:Name="item_inventory_dimentionDataGrid" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" Margin="4" IsReadOnly="True"
                            			EnableRowVirtualization="True" Height="Auto" ItemsSource="{Binding Source={StaticResource item_movementrawitem_movement_dimensionViewSource}}"
                            			RowDetailsVisibilityMode="VisibleWhenSelected" CanUserDeleteRows="False">
                                                                <DataGrid.Columns>
                                                                    <DataGridComboBoxColumn x:Name="dimentionComboCol" Header="Dimension" Width="auto" 
                            					ItemsSource="{Binding Source={StaticResource app_dimensionViewSource}}" DisplayMemberPath="name" SelectedValuePath="id_dimension"
                            					SelectedValueBinding="{Binding id_dimension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                    <DataGridTextColumn x:Name="valueColumn2" Binding="{Binding value, Mode=TwoWay, StringFormat=\{0:N\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ElementStyle="{StaticResource RightAlignStyle}" Header="value" Width="auto"/>
                                                                    <DataGridComboBoxColumn x:Name="AppMeasurementComboBox" 
                            					DisplayMemberPath="name" SelectedValuePath="id_measurement"  
                            					ItemsSource="{Binding Source={StaticResource app_measurementViewSource}}"
                            					SelectedValueBinding="{Binding id_measurement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            					Header="{lex:Loc Cognitivo:local:Measurement}" Width="auto"/>
                                                                </DataGrid.Columns>
                                                            </DataGrid>
                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGrid.RowDetailsTemplate>
                                            </DataGrid>
                                        </StackPanel>-->
                                  
                                 
                                    <Label x:Name="lblProjectedRawQty" Content="Total" VerticalAlignment="Bottom"/>
                                    <Label x:Name="lblTotalRaw" Content="Total" VerticalAlignment="Bottom"/>
                                </StackPanel>
                            </Grid>

                        </TabItem>
                        <TabItem Header="{lex:Loc Service}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Background="WhiteSmoke">
                                    <Grid Grid.Row="1" Grid.Column="0" Background="White" DataContext="{StaticResource production_order_detaillServiceViewSource}">
                                        <Grid.Resources>
                                            <HierarchicalDataTemplate DataType="{x:Type data:production_order_detail}" 
                                                              ItemsSource="{Binding child, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource tree},ConverterParameter={StaticResource IntThree}}">
                                                <Panels:pnl_TreeView  StatusColor="{Binding status, Converter={StaticResource ProjectStatus2Color},  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                             IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding .,Converter={StaticResource Type2Enable}}"
                                                             HorizontalAlignment="Stretch"
                                                             Type_Name="{Binding items.id_item_type, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                                             TaskName="{Binding item.name, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}" 
                                                             Quantity="{Binding quantity, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}}"
                                                             QuantityExec="{Binding quantity_exe, StringFormat=N2, Mode=OneWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"/>
                                            </HierarchicalDataTemplate>
                                        </Grid.Resources>
                                        <cntrl:ExtendedTreeView x:Name="treeService" ItemsSource="{Binding}" SelectedItemChanged="treeservice_SelectedItemChanged">
                                            <TreeView.ItemContainerStyle>
                                                <Style TargetType="{x:Type TreeViewItem}">
                                                    <Setter Property="IsExpanded" Value="True" />
                                                </Style>
                                            </TreeView.ItemContainerStyle>
                                        </cntrl:ExtendedTreeView>
                                    </Grid>
                                    <Rectangle Width="1" Fill="Silver" HorizontalAlignment="Right"/>
                                </Grid>

                                <WrapPanel Orientation="Vertical" Grid.Column="1" ItemHeight="36" IsEnabled="{Binding SelectedItem,ElementName=treeService, Converter={StaticResource Type2Enable}}" VerticalAlignment="Top" Background="WhiteSmoke" 
                                 DataContext="{StaticResource production_execution_detailServiceViewSource}">

                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Label Style="{StaticResource generic_Label}" Content="{lex:Loc Factor}" />
                                        <ComboBox x:Name="cmbcoefficient" Width="235" 
                                          DisplayMemberPath="name" SelectedValuePath="id_time_coefficient" 
                                          ItemsSource="{Binding Source={StaticResource hr_time_coefficientViewSource}}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Label Style="{StaticResource generic_Label}" Content="{lex:Loc StartDate}" />
                                        <DatePicker x:Name="dtpstartdate"  Width="150" Height="27"/>
                                        <toolkit:TimePicker x:Name="dtpstarttime"  Width="85" Height="27" Format="Custom" FormatString="HH:mm" />

                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Label Style="{StaticResource generic_Label}" Content="{lex:Loc EndDate}" />
                                        <DatePicker x:Name="dtpenddate"  Width="150" Height="27" />
                                        <toolkit:TimePicker x:Name="dtpendtime"  Width="85" Height="27" Format="Custom" FormatString="HH:mm" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Label Style="{StaticResource generic_Label}" Content="{lex:Loc Employee}" />
                                        <Controls:SmartBox_Contact x:Name="CmbService" Get_Employees="True" Width="226" Select="itemserviceComboBox_MouseDoubleClick"/>
                                    </StackPanel>
                                </WrapPanel>
                                <DataGrid x:Name="dgService" Grid.Column="1" 
                                      ItemsSource="{Binding Source={StaticResource production_execution_detailServiceViewSource}}" 
                                      Margin="0,145,0,50" AutoGenerateColumns="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Employee}" IsReadOnly="True" 
                                                    Binding="{Binding contact.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    Width="Auto"/>
                                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:StartDate}" 
                                                    Binding="{Binding start_date, Mode=TwoWay, 
                                                                      UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:g}}" 
                                                                      Width="Auto"/>
                                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:EndDate}"
                                                    Binding="{Binding end_date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                                      StringFormat={}{0:g}}" Width="Auto"/>
                                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Quantity}" IsReadOnly="True"
                                                    Binding="{Binding quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" Width="Auto"/>
                                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Hour}" IsReadOnly="True"
                                                    Binding="{Binding hours, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" Width="Auto"/>
                                        <DataGridTemplateColumn Width="Auto">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" Style="{StaticResource btnDeleteChildStyle}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <StackPanel Grid.Column="1" VerticalAlignment="Bottom">
                                    <Label x:Name="lblProjectedempqty" Grid.Column="1"  Content="Total"/>
                                    <Label x:Name="lblTotalemp" Grid.Column="1"  Content="Total"/>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="{lex:Loc ServiceContract}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Background="WhiteSmoke">

                                    <Grid Grid.Row="1" Grid.Column="0" Background="White" DataContext="{StaticResource production_order_detaillServiceContractViewSource}">
                                        <Grid.Resources >
                                            <HierarchicalDataTemplate DataType="{x:Type data:production_order_detail}" 
                                              ItemsSource="{Binding child, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource tree},ConverterParameter={StaticResource IntSeven}}">
                                                <Panels:pnl_TreeView  StatusColor="{Binding status, Converter={StaticResource ProjectStatus2Color},  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding .,Converter={StaticResource Type2Enable}}"
                                              HorizontalAlignment="Stretch"
                                             Type_Name="{Binding items.id_item_type, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                                                 TaskName="{Binding item.name, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}" 
                                             Quantity="{Binding quantity, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}}"/>
                                            </HierarchicalDataTemplate>
                                        </Grid.Resources>
                                        <cntrl:ExtendedTreeView x:Name="treeServicecontract" ItemsSource="{Binding}" SelectedItemChanged="treeServicecontract_SelectedItemChanged">
                                            <TreeView.ItemContainerStyle>
                                                <Style TargetType="{x:Type TreeViewItem}">
                                                    <Setter Property="IsExpanded" Value="True" />
                                                </Style>
                                            </TreeView.ItemContainerStyle>
                                        </cntrl:ExtendedTreeView>
                                    </Grid>
                                    <Rectangle Width="1" Fill="Silver" HorizontalAlignment="Right"/>
                                </Grid>
                                <StackPanel Grid.Column="1"  VerticalAlignment="Top" Background="WhiteSmoke"
                                    DataContext="{StaticResource production_execution_detailServiceContractViewSource}" 
                                    IsEnabled="{Binding SelectedItem, ElementName=treeServicecontract, Converter={StaticResource Type2Enable}}">
                                    <StackPanel Orientation="Horizontal" Margin="4">
                                        <RadioButton Content="Hours" IsChecked="True" x:Name="rbtnHours"/>
                                        <RadioButton Content="Quantity" x:Name="rbtnQuantity"/>
                                    </StackPanel>
                                    <StackPanel x:Name="stpquantity" Visibility="{Binding IsChecked,ElementName=rbtnHours,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource Bool2Collapsed}}">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <Label Style="{StaticResource generic_Label}" Content="{lex:Loc Quantity}" />
                                            <TextBox x:Name="txtServicecontract" KeyUp="btnInsert_KeyDown" Width="64" VerticalAlignment="Top" />
                                            <Button x:Name="btnInsert_ServiceContract" Content="{lex:Loc Insert}" Click="btnInsert_Click"/>
                                        </StackPanel>
                                        <DataGrid Grid.Column="1" Margin="4,0" x:Name="dgServicecontract" AutoGenerateColumns="False" 
                                      ItemsSource="{Binding Source={StaticResource production_execution_detailServiceContractViewSource}}" 
                                      SelectionChanged="dgServicecontract_SelectionChanged">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Name}" IsReadOnly="True" 
                                                        Binding="{Binding item.name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  
                                                        Width="100"/>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Quantity}" 
                                                        Binding="{Binding quantity,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                        Width="100"/>
                                                <DataGridTemplateColumn Width="Auto" Header="">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" 
                                                        Style="{StaticResource btnDeleteChildStyle}"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <StackPanel>
                                            <Label x:Name="lblProjectedServicecontractqty" 
                                       Grid.Column="1" Content="Total"/>
                                            <Label x:Name="lblTotalServicecontract" 
                                       Grid.Column="1" Content="Total"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel x:Name="stphour" Margin="4"
                                        Visibility="{Binding IsChecked,ElementName=rbtnQuantity,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource Bool2Collapsed}}" >
                                        <WrapPanel Orientation="Vertical" Grid.Column="1" ItemHeight="36" IsEnabled="{Binding SelectedItem,ElementName=treeService, Converter={StaticResource Type2Enable}}" VerticalAlignment="Top" Background="WhiteSmoke" 
                                 DataContext="{StaticResource production_execution_detailServiceViewSource}">

                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Label Style="{StaticResource generic_Label}" Content="{lex:Loc Factor}" />
                                                <ComboBox x:Name="cmbsccoefficient" Width="235" 
                                          DisplayMemberPath="name" SelectedValuePath="id_time_coefficient" 
                                          ItemsSource="{Binding Source={StaticResource hr_time_coefficientViewSource}}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Label Style="{StaticResource generic_Label}" Content="{lex:Loc StartDate}" />
                                                <DatePicker x:Name="dtpscstartdate"  Width="150" Height="27"/>
                                                <toolkit:TimePicker x:Name="dtpscstarttime"  Width="85" Height="27" Format="Custom" FormatString="HH:mm" />

                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Label Style="{StaticResource generic_Label}" Content="{lex:Loc EndDate}" />
                                                <DatePicker x:Name="dtpscenddate"  Width="150" Height="27" />
                                                <toolkit:TimePicker x:Name="dtpscendtime"  Width="85" Height="27" Format="Custom" FormatString="HH:mm" />
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Label Style="{StaticResource generic_Label}" Content="{lex:Loc Employee}" />
                                                <Controls:SmartBox_Contact x:Name="CmbServicecontract" Get_Employees="True" Width="226" Select="CmbServicecontract_Select"/>
                                            </StackPanel>
                                        </WrapPanel>
                                        <DataGrid x:Name="dgServiceContracthour" Grid.Column="1" 
                                          ItemsSource="{Binding Source={StaticResource production_execution_detailServiceContractViewSource}}" 
                                          Margin="0,0,0,50" AutoGenerateColumns="False">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Employee}" IsReadOnly="True" 
                                                    Binding="{Binding contact.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    Width="Auto"/>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:StartDate}" 
                                                    Binding="{Binding start_date, Mode=TwoWay, 
                                                                      UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:g}}" 
                                                                      Width="Auto"/>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:EndDate}" 
                                                    Binding="{Binding end_date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                                      StringFormat={}{0:g}}" Width="Auto"/>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Quantiity}" IsReadOnly="True"
                                                    Binding="{Binding quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" Width="Auto"/>
                                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Hour}" IsReadOnly="True"
                                                    Binding="{Binding hours, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" Width="Auto"/>
                                                <DataGridTemplateColumn Width="Auto">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" Style="{StaticResource btnDeleteChildStyle}"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <StackPanel Grid.Column="1" VerticalAlignment="Bottom">
                                            <Label x:Name="lblProjectedservicecontrcthourqty" Grid.Column="1"  Content="Total"/>
                                            <Label x:Name="lblTotalservicecontracthour" Grid.Column="1"  Content="Total"/>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="{lex:Loc FixedAssets}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Background="WhiteSmoke">
                                    <Grid Grid.Row="1" Grid.Column="0" Background="White" DataContext="{StaticResource production_order_detaillAssetViewSource}">
                                        <Grid.Resources >
                                            <HierarchicalDataTemplate DataType="{x:Type data:production_order_detail}" 
                                            ItemsSource="{Binding child,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource tree},ConverterParameter={StaticResource IntFour}}">
                                                <Panels:pnl_TreeView  StatusColor="{Binding status, Converter={StaticResource ProjectStatus2Color},  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            IsChecked="{Binding IsSelected, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ., Converter={StaticResource Type2Enable}}"
                                            HorizontalAlignment="Stretch"
                                            Type_Name="{Binding items.id_item_type, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                                              TaskName="{Binding name, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}" 
                                            Quantity="{Binding quantity, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}}"/>
                                            </HierarchicalDataTemplate>
                                        </Grid.Resources>
                                        <cntrl:ExtendedTreeView x:Name="treeAsset" ItemsSource="{Binding}" SelectedItemChanged="treecapital_SelectedItemChanged">
                                            <TreeView.ItemContainerStyle>
                                                <Style TargetType="{x:Type TreeViewItem}">
                                                    <Setter Property="IsExpanded" Value="True" />
                                                </Style>
                                            </TreeView.ItemContainerStyle>
                                        </cntrl:ExtendedTreeView>

                                    </Grid>
                                </Grid>
                                <StackPanel Grid.Column="1" Background="WhiteSmoke"  DataContext="{StaticResource production_execution_detailAssetViewSource}" 
                                    IsEnabled="{Binding SelectedItem, ElementName=treeAsset, Converter={StaticResource Type2Enable}}">
                                    <StackPanel Orientation="Horizontal" Margin="8">
                                        <Label Style="{StaticResource generic_Label}" Content="{lex:Loc Quantity}" Margin="4"/>
                                        <TextBox  x:Name="txtAsset" Width="64" KeyUp="btnInsert_KeyDown" VerticalAlignment="Top" Margin="4"/>
                                        <Button x:Name="btnInsert_FixedAsset" Content="{lex:Loc Insert}" VerticalAlignment="Center" Click="btnInsert_Click"/>
                                    </StackPanel>
                                    <DataGrid Grid.Column="1" Margin="4,0" x:Name="dgCapital"  AutoGenerateColumns="False" ItemsSource="{Binding Source={StaticResource production_execution_detailAssetViewSource}}" SelectionChanged="dgCapital_SelectionChanged">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Name}" IsReadOnly="True" Binding="{Binding item.name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Width="100"/>
                                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Quantity}" Binding="{Binding quantity,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="100"/>
                                            <DataGridTemplateColumn Width="Auto" Header="">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" Style="{StaticResource btnDeleteChildStyle}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <Label x:Name="lblProjectedassetqty" Grid.Column="1"  Content="Total" VerticalAlignment="Bottom"/>
                                    <Label x:Name="lblTotalasset" Grid.Column="1"  Content="Total" VerticalAlignment="Bottom"/>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="{lex:Loc Supplies}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Background="WhiteSmoke">

                                    <Grid Grid.Row="1" Grid.Column="0" Background="White" DataContext="{StaticResource production_order_detaillSupplyViewSource}">
                                        <Grid.Resources >
                                            <HierarchicalDataTemplate DataType="{x:Type data:production_order_detail}" 
                                              ItemsSource="{Binding child, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource tree},ConverterParameter={StaticResource IntSix}}">
                                                <Panels:pnl_TreeView  StatusColor="{Binding status, Converter={StaticResource ProjectStatus2Color},  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding .,Converter={StaticResource Type2Enable}}"
                                             HorizontalAlignment="Stretch"
                                             Type_Name="{Binding items.id_item_type, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                             TaskName="{Binding item.name, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}" 
                                             Quantity="{Binding quantity, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}}"
                                             QuantityExec="{Binding quantity_exe, StringFormat=N2, Mode=OneWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"/>
                                            </HierarchicalDataTemplate>
                                        </Grid.Resources>
                                        <cntrl:ExtendedTreeView x:Name="treeSupply" ItemsSource="{Binding}" SelectedItemChanged="treeSupply_SelectedItemChanged">
                                            <TreeView.ItemContainerStyle>
                                                <Style TargetType="{x:Type TreeViewItem}">
                                                    <Setter Property="IsExpanded" Value="True" />
                                                </Style>
                                            </TreeView.ItemContainerStyle>
                                        </cntrl:ExtendedTreeView>
                                    </Grid>
                                    <Rectangle Width="1" Fill="Silver" HorizontalAlignment="Right"/>
                                </Grid>
                                <StackPanel Grid.Column="1"  VerticalAlignment="Top" Background="WhiteSmoke" 
                                    DataContext="{StaticResource production_execution_detailSupplyViewSource}" 
                                    IsEnabled="{Binding SelectedItem, ElementName=treeSupply, Converter={StaticResource Type2Enable}}">
                                    <StackPanel Orientation="Horizontal" Margin="8">
                                        <Label Style="{StaticResource generic_Label}" Content="{lex:Loc Quantity}" />
                                        <TextBox x:Name="txtSupply" Width="64" KeyUp="btnInsert_KeyDown" VerticalAlignment="Top"/>
                                        <Button x:Name="btnInsert_Supplies" Content="{lex:Loc Insert}" Click="btnInsert_Click"/>
                                    </StackPanel>
                                    <DataGrid Grid.Column="1" Margin="4,0" x:Name="dgSupplier" AutoGenerateColumns="False" 
                                      ItemsSource="{Binding Source={StaticResource production_execution_detailSupplyViewSource}}" 
                                      SelectionChanged="dgSupplier_SelectionChanged">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Name}" IsReadOnly="True" 
                                                        Binding="{Binding item.name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  
                                                        Width="100"/>
                                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Quantity}" 
                                                        Binding="{Binding quantity,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                        Width="100"/>
                                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Movement}" IsReadOnly="True"
                                                        Binding="{Binding movement_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="128"/>
                                            <DataGridTemplateColumn Width="Auto" Header="">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" 
                                                        Style="{StaticResource btnDeleteChildStyle}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <StackPanel>
                                        <Label x:Name="lblProjectedSuppliesqty" 
                                       Grid.Column="1" Content="Total"/>
                                        <Label x:Name="lblTotalsupplies" 
                                       Grid.Column="1" Content="Total"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </TabItem>
            </TabControl>
        </Grid>

        <cntrl:toolBar Grid.ColumnSpan="2" x:Name="toolBar"
                       btnNew_Click="toolBar_btnNew_Click"
                       btnDelete_Click="toolBar_btnDelete_Click"
                       btnEdit_Click="toolBar_btnEdit_Click"
                       btnSave_Click="toolBar_btnSave_Click"
                       btnCancel_Click="toolBar_btnCancel_Click"
                       btnApprove_Click="toolBar_btnApprove_Click"
                       btnAnull_Click="toolBar_btnAnull_Click"
                       btnSearch_Click="toolBar_btnSearch_Click"
                       appName="ProductionOrder"
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                      Status="{Binding status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </Grid>
</Page>

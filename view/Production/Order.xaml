<Page x:Class="Cognitivo.Production.Order" Title="{lex:Loc ProductionOrder}" x:Name="Productionorder"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	  xmlns:Panels="clr-namespace:cntrl.Panels;assembly=cntrl" 
	  xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	  mc:Ignorable="d" 
	  xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"  
	  xmlns:data="clr-namespace:entity;assembly=entity"
	  xmlns:entity="clr-namespace:entity;assembly=entity"
	  xmlns:converter="clr-namespace:Cognitivo.Converters"
	  xmlns:sys="clr-namespace:System;assembly=mscorlib"
	  xmlns:cntrlConverter="clr-namespace:cntrl.Converters;assembly=cntrl"
	  xmlns:lex="http://wpflocalizeextension.codeplex.com" 
	  lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
	  lex:ResxLocalizationProvider.DefaultDictionary="local"
	  lex:LocalizeDictionary.DesignCulture="en-US" 
	  MinHeight="400" MinWidth="800" Loaded="Page_Loaded">
	<Page.Resources>
		<converter:SecurityConverter x:Key="SecurityConverter"/>
		<converter:Status_Project_2ColorConverter x:Key="ProjectStatus2Color"/>
        <converter:ProuctionPending2BooleanConverter x:Key="ProuctionPending2BooleanConverter"/>
		<CollectionViewSource x:Key="projectViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:project}, CreateList=True}"/>
		<CollectionViewSource x:Key="production_orderViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_order}, CreateList=True}"/>
		<CollectionViewSource x:Key="projectproject_taskViewSource" Source="{Binding project_task, Source={StaticResource projectViewSource}}"/>
		<CollectionViewSource x:Key="production_lineViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_line}, CreateList=True}"/>
		<CollectionViewSource x:Key="production_orderproduction_order_detailViewSource" Source="{Binding production_order_detail, Source={StaticResource production_orderViewSource}}" d:DesignSource="{d:DesignInstance {x:Type entity:production_order_detail}, CreateList=True}"/>
		<CollectionViewSource x:Key="project_task_dimensionViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:project_task_dimension}, CreateList=True}"/>
		<CollectionViewSource x:Key="app_dimensionViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_dimension}, CreateList=True}"/>
		<CollectionViewSource x:Key="app_measurementViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_measurement}, CreateList=True}"/>
	</Page.Resources>
	<Grid Background="White" DataContext="{StaticResource production_orderViewSource}">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="1*"/>
			<ColumnDefinition Width="3*"/>
		</Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Name="crud_modal_cost" Background="{StaticResource Modal_BackgroundColor}" Visibility="Collapsed" 
			  Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5"/>

		<Grid x:Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden" Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5"/>

		<ListBox x:Name="production_orderDataGrid"
				 ScrollViewer.VerticalScrollBarVisibility="Auto"
				 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
				 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
				 ItemsSource="{Binding}" Grid.Row="1" SelectionChanged="productionorderDataGrid_SelectionChanged">
			<ListBox.ItemTemplate>
				<DataTemplate>
					<cntrl:navList recordName="{Binding name, UpdateSourceTrigger=PropertyChanged}"
								   recordCode="{Binding project.project_template.name, UpdateSourceTrigger=PropertyChanged}"
								   recordSecondaryName="{Binding trans_date, Mode=TwoWay, StringFormat=d, UpdateSourceTrigger=PropertyChanged}"
								   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   Status="{Binding status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>
		
		<Grid Grid.Column="1" Grid.Row="1" Margin="0" IsEnabled="{Binding State}">
			<Grid.RowDefinitions>
				<RowDefinition Height="6*"/>
				<RowDefinition Height="9*"/>
			</Grid.RowDefinitions>

			<TabControl HorizontalAlignment="Stretch" metro:TabControlHelper.IsUnderlined="True" 
						Grid.Row="0" Grid.ColumnSpan="1" Grid.RowSpan="2">
				<TabItem Header="{lex:Loc Order}">
					<Grid Grid.Row="1"  Background="White" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}"
							  DataContext="{StaticResource production_orderproduction_order_detailViewSource}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="1*"/>
							<ColumnDefinition Width="1*"/>
						</Grid.ColumnDefinitions>
						<Grid>
							<Grid.Resources>
								<HierarchicalDataTemplate DataType="{x:Type entity:production_order_detail}" 
															  ItemsSource="{Binding child,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<Panels:TreeProduction StatusColor="{Binding status, Converter={StaticResource ProjectStatus2Color},  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
														 IsChecked="{Binding IsSelected,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
														 Code="{Binding code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
														 HorizontalAlignment="Stretch"
														 IsInput="{Binding is_input, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
														 Type_Name="{Binding item.id_item_type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
														 TaskName="{Binding item.name,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
														 QuantityExec="{Binding quantity_exe, StringFormat=N2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
														 Quantity="{Binding quantity,StringFormat=N2,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
								</HierarchicalDataTemplate>
							</Grid.Resources>
							<Grid Grid.Column="0">
								<Grid DataContext="{StaticResource production_orderViewSource}">
									<Label Content="{Binding code, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
										   HorizontalAlignment="Center" VerticalAlignment="Top" Style="{StaticResource generic_Label}"/>
									<TextBlock Style="{StaticResource TextAreaH2}" Margin="36,6,0,0"
											   Text="{Binding name, FallbackValue=Production, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
											   HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" />
									<ToggleButton x:Name="btnExpandAll" Width="32" Height="32" Margin="0,8"  FontSize="16"
												  VerticalAlignment="Top" HorizontalAlignment="Left" BorderBrush="{StaticResource AccentColor_Brush2}"
												  Style="{DynamicResource MetroCircleToggleButtonStyle}" Content="&#xE81D;" 
												  FontFamily="/Cognitivo;component/Resources/#cognitivo" Foreground="RoyalBlue"
												  Unchecked="btnExpandAll_Checked" Checked="btnExpandAll_Checked"/>
								</Grid>

								<cntrl:ExtendedTreeView x:Name="treeProject" ItemsSource="{Binding}"  Margin="10,58,-10,-14"  
														VirtualizingPanel.VirtualizationMode="Recycling" 
														VirtualizingPanel.IsVirtualizing="True" 
														ScrollViewer.CanContentScroll="True" >
									<TreeView.ItemsPanel>
										<ItemsPanelTemplate>
											<VirtualizingStackPanel/>
										</ItemsPanelTemplate>
									</TreeView.ItemsPanel>
									<TreeView.ItemContainerStyle>
										<Style TargetType="{x:Type TreeViewItem}" >
											<Setter Property="IsExpanded" Value="{Binding ElementName=Productionorder, Path=ViewAll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
										</Style>
									</TreeView.ItemContainerStyle>
								</cntrl:ExtendedTreeView>

							</Grid>

						</Grid>

						<TabControl Grid.Column="1" VirtualizingPanel.VirtualizationMode="Recycling">
							<TabItem Header="Data">
								<StackPanel DataContext="{StaticResource production_orderViewSource}" HorizontalAlignment="Center" 
											IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
									<StackPanel Orientation="Horizontal" >
										<Label Content="{lex:Loc Project}" Style="{StaticResource input_label}" VerticalAlignment="Center"/>
										<Label Content="{Binding project.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
									</StackPanel>
									<StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center">
										<Label Content="{lex:Loc CostCenter}" Style="{StaticResource input_label}" VerticalAlignment="Center"/>
										<TextBlock Text="{Binding project_cost_center, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource text_Data}"/>
									</StackPanel>
									<Label Content="{lex:Loc Name}" Style="{StaticResource input_label}"/>
									<TextBox Style="{StaticResource input_textbox}" Text="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
									<Label Content="{lex:Loc Document}" Style="{StaticResource input_label}"/>
									<ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range" 
							  metro:ControlsHelper.FocusBorderBrush="RoyalBlue" SelectedIndex="0"
							  metro:ControlsHelper.MouseOverBorderBrush="Silver"
							  Style="{StaticResource input_combobox}"
							  SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
									<Label Content="{lex:Loc OrderNumber}" Style="{StaticResource input_label}"/>
									<TextBox metro:TextBoxHelper.Watermark="{Binding NumberWatermark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{StaticResource input_textbox}" Text="{Binding work_number,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
									<Label Content="{lex:Loc Line}" Style="{StaticResource input_label}"/>
									<ComboBox x:Name="cmbline"  Style="{DynamicResource input_combobox}" 
							  DisplayMemberPath="name" SelectedValue="{Binding id_production_line, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
							  SelectedValuePath="id_production_line"
							  ItemsSource="{Binding Source={StaticResource production_lineViewSource}}">
										<ComboBox.ItemsPanel>
											<ItemsPanelTemplate>
												<VirtualizingStackPanel/>
											</ItemsPanelTemplate>
										</ComboBox.ItemsPanel>
									</ComboBox>
									<Label Content="{lex:Loc Type}" Style="{StaticResource input_label}"/>
									<ComboBox x:Name="cmbtype"  Style="{DynamicResource input_combobox}" 
								  SelectedValue="{Binding type, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" >
									</ComboBox>
									<Label Content="{lex:Loc StartDate}" Style="{StaticResource input_label}"/>
									<DatePicker SelectedDate="{Binding start_date_est, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource input_datepicker}" />
									<Label Content="{lex:Loc EndDate}" Style="{StaticResource input_label}"/>
									<DatePicker SelectedDate="{Binding end_date_est, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Style="{StaticResource input_datepicker}" />
								</StackPanel>
							</TabItem>
							<TabItem Header="Item">
								<StackPanel DataContext="{Binding SelectedItem_, ElementName=treeProject}">
									<Label Style="{StaticResource generic_Label}" HorizontalAlignment="Center" 
									   Content="{Binding parent.name, FallbackValue=---}"/>
									<TextBlock Text="{Binding name}" Margin="0,-10,0,8"
										   Style="{StaticResource TextAreaH2}" HorizontalAlignment="Center"/>
									<cntrl:toolBar_Mini appName="ProductionOrder" State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
													Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
													btnNew_Click="btnNewTask_Click"
													btnEdit_Click="btnEditTask_Click"
													btnSave_Click="btnSaveTask_Click"
													btnDelete_Click="btnDeleteTask_Click"
													btnApprove_Click="toolIcon_Click"
													btnParent_Click="btnAddParentTask_Click"/>
									<StackPanel HorizontalAlignment="Center" Margin="0,16">
										<StackPanel x:Name="stpcode" IsEnabled="False">
											<Label Content="{lex:Loc ItemType}" Style="{StaticResource input_label}"/>
											<ComboBox x:Name="cbxItemType" Style="{StaticResource input_combobox}" 
												  IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProuctionPending2BooleanConverter}}" 
												  SelectedValue="{Binding item.id_item_type, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
												  SelectionChanged="cbxItemType_SelectionChanged"/>

											<Label Content="{lex:Loc Items}" Style="{StaticResource input_label}"/>
											<Controls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="item_Select" 
                                                                    Text="{Binding  item.name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
											<metro:ToggleSwitch x:Name="ToggleQuantity" OffLabel="{lex:Loc Consume}" OnLabel="{lex:Loc Produce}" HorizontalAlignment="Right" OffSwitchBrush="Silver" 
																OnSwitchBrush="Gray" UseLayoutRounding="False" 
																ThumbIndicatorWidth="16" ThumbIndicatorBrush="{StaticResource AccentColor_Introvert}" 
																Checked="ToggleQuantity_Checked" Unchecked="ToggleQuantity_Unchecked"/>

										</StackPanel>

										<StackPanel x:Name="stpdate" Visibility="Collapsed">
											<Label Content="{lex:Loc StartDate}" Style="{StaticResource input_label}" />
											<DatePicker Style="{StaticResource input_datepicker}"
													IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProuctionPending2BooleanConverter}}" 
													SelectedDate="{Binding start_date_est, StringFormat=d, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
											<Label Content="{lex:Loc EndDate}" Style="{StaticResource input_label}"/>
											<DatePicker Style="{StaticResource input_datepicker}"
													IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProuctionPending2BooleanConverter}}" 
													SelectedDate="{Binding end_date_est, StringFormat=d, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
										</StackPanel>

										<StackPanel x:Name="stpitem" Visibility="Collapsed">
											<Label Content="{lex:Loc Quantity}" Style="{StaticResource input_label}"/>
                                            <TextBox IsEnabled="{Binding status, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProuctionPending2BooleanConverter}}"
											 Text="{Binding quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N4}}" Style="{StaticResource input_textbox}"/>
										</StackPanel>
									</StackPanel>
								</StackPanel>
							</TabItem>
						</TabControl>
					</Grid>
				</TabItem>
				<TabItem Header="{lex:Loc RequestResource}" VirtualizingPanel.VirtualizationMode="Standard">
					<Grid >
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="2*"/>
							<ColumnDefinition Width="1*"/>
						</Grid.ColumnDefinitions>

						<TabControl metro:TabControlHelper.IsUnderlined="True"  Grid.Column="0" SelectionChanged="TabControl_SelectionChanged">
							<TabItem Header="{lex:Loc Product}">
								<TabItem.IsEnabled>
									<Binding Path="AppName" ElementName="_Total" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"
										 Converter="{StaticResource SecurityConverter}">
										<Binding.ConverterParameter>
											<sys:Int32>4</sys:Int32>
										</Binding.ConverterParameter>
									</Binding>
								</TabItem.IsEnabled>
								<DataGrid x:Name="item_ProductDataGrid" 
											  VerticalScrollBarVisibility="Auto"
											  AutoGenerateColumns="False" 
											  EnableRowVirtualization="True"
											  RowDetailsVisibilityMode="VisibleWhenSelected" SelectionChanged="Logistics_SelectionChanged"   >
									<DataGrid.Columns>
										<DataGridTextColumn Binding="{Binding ItemCode}" Header="{lex:Loc Cognitivo:local:Code}" Width="SizeToHeader" />
										<DataGridTextColumn Binding="{Binding ItemName}" Header="{lex:Loc Cognitivo:local:Product}" Width="*" />
										<DataGridTextColumn Binding="{Binding Quantity, StringFormat={}{0:N}}" Header="{lex:Loc Cognitivo:local:Required}" ElementStyle="{StaticResource RightAlignStyle}" Width="auto" />
										<DataGridTextColumn Binding="{Binding Availability, StringFormat={}{0:N2}}" Header="{lex:Loc Available}" ElementStyle="{StaticResource RightAlignStyle}" Width="SizeToHeader" />
										<DataGridTextColumn Binding="{Binding Requested, StringFormat={}{0:N}}" Header="{lex:Loc Requested}" ElementStyle="{StaticResource RightAlignStyle}" Width="SizeToHeader" />
									</DataGrid.Columns>
								</DataGrid>
							</TabItem>
							<TabItem Header="{lex:Loc RawMaterial}">
								<TabItem.IsEnabled>
									<Binding Path="AppName" ElementName="_Total" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"
										 Converter="{StaticResource SecurityConverter}">
										<Binding.ConverterParameter>
											<sys:Int32>5</sys:Int32>
										</Binding.ConverterParameter>
									</Binding>
								</TabItem.IsEnabled>
								<DataGrid x:Name="item_RawDataGrid" 
											  VerticalScrollBarVisibility="Auto"
											  AutoGenerateColumns="False" 
											  EnableRowVirtualization="True"  SelectionChanged="Logistics_SelectionChanged"  
											  RowDetailsVisibilityMode="VisibleWhenSelected"  IsReadOnly="True">
									<DataGrid.Columns>
										<DataGridTextColumn Binding="{Binding ItemCode}" Header="{lex:Loc Cognitivo:local:Code}" Width="SizeToHeader" />
										<DataGridTextColumn Binding="{Binding ItemName}" Header="{lex:Loc Cognitivo:local:RawMaterial}" Width="*" />
										<DataGridTextColumn Binding="{Binding Quantity, StringFormat={}{0:N}}" Header="{lex:Loc Cognitivo:local:Required}" ElementStyle="{StaticResource RightAlignStyle}" Width="auto" />
										<DataGridTextColumn Binding="{Binding Availability, StringFormat={}{0:N2}}" Header="{lex:Loc Available}" ElementStyle="{StaticResource RightAlignStyle}" Width="SizeToHeader" />
										<DataGridTextColumn Binding="{Binding Requested, StringFormat={}{0:N}}" Header="{lex:Loc Requested}" ElementStyle="{StaticResource RightAlignStyle}" Width="SizeToHeader" />
									</DataGrid.Columns>
								</DataGrid>
							</TabItem>
							<TabItem Header="{lex:Loc FixedAssets}">
								<TabItem.IsEnabled>
									<Binding Path="AppName" ElementName="_Total" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"
										 Converter="{StaticResource SecurityConverter}">
										<Binding.ConverterParameter>
											<sys:Int32>7</sys:Int32>
										</Binding.ConverterParameter>
									</Binding>
								</TabItem.IsEnabled>
								<DataGrid x:Name="item_CapitalDataGrid" 
										VerticalScrollBarVisibility="Auto"
										AutoGenerateColumns="False" Grid.Column="1"
										EnableRowVirtualization="True"  Grid.Row="1" SelectionChanged="Logistics_SelectionChanged" 
										RowDetailsVisibilityMode="VisibleWhenSelected"  IsReadOnly="True">
									<DataGrid.Columns>
										<DataGridTextColumn Binding="{Binding ItemCode}" Header="{lex:Loc Cognitivo:local:Code}" Width="SizeToHeader" />
										<DataGridTextColumn Binding="{Binding ItemName}" Header="{lex:Loc Cognitivo:local:RawMaterial}" Width="*" />
										<DataGridTextColumn Binding="{Binding Quantity, StringFormat={}{0:N}}" Header="{lex:Loc Cognitivo:local:Required}" ElementStyle="{StaticResource RightAlignStyle}" Width="auto" />
									</DataGrid.Columns>
								</DataGrid>
							</TabItem>
							<TabItem Header="{lex:Loc Supplies}">
								<TabItem.IsEnabled>
									<Binding Path="AppName" ElementName="_Total" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"
										 Converter="{StaticResource SecurityConverter}">
										<Binding.ConverterParameter>
											<sys:Int32>9</sys:Int32>
										</Binding.ConverterParameter>
									</Binding>
								</TabItem.IsEnabled>
								<DataGrid x:Name="item_SupplierDataGrid" 
											  VerticalScrollBarVisibility="Auto"
											  AutoGenerateColumns="False" Grid.Column="1"
											  EnableRowVirtualization="True"  Grid.Row="1" SelectionChanged="Logistics_SelectionChanged" 
											  RowDetailsVisibilityMode="VisibleWhenSelected"  IsReadOnly="True">
									<DataGrid.Columns>
										<DataGridTextColumn Binding="{Binding ItemCode}" Header="{lex:Loc Cognitivo:local:Code}" Width="SizeToHeader" />
										<DataGridTextColumn Binding="{Binding ItemName}" Header="{lex:Loc Cognitivo:local:RawMaterial}" Width="*" />
										<DataGridTextColumn Binding="{Binding Quantity, StringFormat={}{0:N}}" Header="{lex:Loc Cognitivo:local:Required}" ElementStyle="{StaticResource RightAlignStyle}" Width="auto" />
										<DataGridTextColumn Binding="{Binding Availability, StringFormat={}{0:N2}}" Header="{lex:Loc Available}" ElementStyle="{StaticResource RightAlignStyle}" Width="SizeToHeader" />
										<DataGridTextColumn Binding="{Binding Requested, StringFormat={}{0:N}}" Header="{lex:Loc Requested}" ElementStyle="{StaticResource RightAlignStyle}" Width="SizeToHeader" />
									</DataGrid.Columns>
								</DataGrid>
							</TabItem>
							<TabItem Header="{lex:Loc ServiceContract}">
								<TabItem.IsEnabled>
									<Binding Path="AppName" ElementName="_Total" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"
										 Converter="{StaticResource SecurityConverter}">
										<Binding.ConverterParameter>
											<sys:Int32>10</sys:Int32>
										</Binding.ConverterParameter>
									</Binding>
								</TabItem.IsEnabled>
								<DataGrid x:Name="item_ServiceContractDataGrid" 
										  VerticalScrollBarVisibility="Auto"
										  AutoGenerateColumns="False" Grid.Column="1"
										  EnableRowVirtualization="True" Grid.Row="1" 
										  SelectionChanged="Logistics_SelectionChanged" 
										  RowDetailsVisibilityMode="VisibleWhenSelected" IsReadOnly="True">
									<DataGrid.Columns>
										<DataGridTextColumn Binding="{Binding ItemCode}" Header="{lex:Loc Cognitivo:local:Code}" Width="SizeToHeader" />
										<DataGridTextColumn Binding="{Binding ItemName}" Header="{lex:Loc Cognitivo:local:RawMaterial}" Width="*" />
										<DataGridTextColumn Binding="{Binding Quantity, StringFormat={}{0:N}}" Header="{lex:Loc Cognitivo:local:Required}" ElementStyle="{StaticResource RightAlignStyle}" Width="auto" />
									</DataGrid.Columns>
								</DataGrid>
							</TabItem>
						</TabControl>
						<Grid Grid.Column="1">
							<StackPanel Grid.Row="0" Margin="0,10,0,0" >
								<Controls:NotificationButton Text="{lex:Loc RequestResource}" 
															 Number="{Binding SelectedCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
															 Icon="" Click="btnRequestResource_Click" 
															 VerticalAlignment="Top" HorizontalAlignment="Center"/>
							</StackPanel>
							<DataGrid x:Name="itemDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" Margin="0,48,0,0"
										  CanUserAddRows="False" RowDetailsVisibilityMode="VisibleWhenSelected" VerticalScrollBarVisibility="Auto"
										  LoadingRowDetails="item_ProductDataGrid_LoadingRowDetails" IsEnabled="{Binding is_request,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
								<DataGrid.Columns>
									<DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
																ElementStyle="{DynamicResource MetroDataGridCheckBox}" Width="24" 
																EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"/>
									<DataGridTextColumn Binding="{Binding parent.code}" Header="{lex:Loc Cognitivo:local:Code}" Width="16" IsReadOnly="True" />
									<DataGridTextColumn Binding="{Binding parent.name}" Header="{lex:Loc Cognitivo:local:Task}" Width="128" IsReadOnly="True" />
									<DataGridTextColumn Binding="{Binding quantity, StringFormat={}{0:N}}" Header="{lex:Loc Cognitivo:local:Quantity}" 
															ElementStyle="{StaticResource RightAlignStyle}"
															Width="auto" IsReadOnly="True" />
								</DataGrid.Columns>
								<DataGrid.RowDetailsTemplate>
									<DataTemplate>
										<DataGrid x:Name="project_task_dimensionDataGrid" AutoGenerateColumns="False" 
													  EnableRowVirtualization="True" Margin="8" IsReadOnly="True" CanUserAddRows="False"
													  ItemsSource="{Binding Source={StaticResource project_task_dimensionViewSource}}" 
													  RowDetailsVisibilityMode="VisibleWhenSelected">
											<DataGrid.Columns>
												<DataGridComboBoxColumn x:Name="dimentionComboCol" Header="{lex:Loc Cognitivo:local:Dimension}" Width="auto"
																			ItemsSource="{Binding Source={StaticResource app_dimensionViewSource}}" 
																			DisplayMemberPath="name" SelectedValuePath="id_dimension"
																			SelectedValueBinding="{Binding id_dimension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
												<DataGridTextColumn x:Name="valueColumn2" Binding="{Binding value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N}}" 
																		Header="{lex:Loc Cognitivo:local:Quantity}" ElementStyle="{StaticResource RightAlignStyle}"
																		Width="auto"/>
												<DataGridComboBoxColumn x:Name="AppMeasurementComboBox" 
																			DisplayMemberPath="name" SelectedValuePath="id_measurement"  
																			ItemsSource="{Binding Source={StaticResource app_measurementViewSource}}"
																			SelectedValueBinding="{Binding id_measurement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
																			Header="{lex:Loc Cognitivo:local:Measurement}" Width="auto"/>
											</DataGrid.Columns>
										</DataGrid>
									</DataTemplate>
								</DataGrid.RowDetailsTemplate>
							</DataGrid>
						</Grid>
					</Grid>
				</TabItem>
			</TabControl>
		</Grid>
	   
		<cntrl:toolBar Grid.ColumnSpan="2" x:Name="toolBar"
					   btnNew_Click="toolBar_btnNew_Click"
					   btnDelete_Click="toolBar_btnDelete_Click"
					   btnEdit_Click="toolBar_btnEdit_Click"
					   btnSave_Click="toolBar_btnSave_Click"
					   btnCancel_Click="toolBar_btnCancel_Click"
					   btnApprove_Click="toolBar_btnApprove_Click"
					   btnAnull_Click="toolBar_btnAnull_Click"
					   btnSearch_Click="toolBar_btnSearch_Click"
					   appName="ProductionOrder"
					   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
					  Status="{Binding status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
		
		<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,150,0">
			<Button x:Name="btncost" Click="Button_Click" Content="Cost Calculation" VerticalAlignment="Center" Width="90" Height="25"/>
		</StackPanel>
	</Grid>
</Page>

<Page x:Class="Cognitivo.Product.Transfer"  Title="ItemTransfer"
      xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:pref="clr-namespace:Cognitivo.Product"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:entity="clr-namespace:entity;assembly=entity" 
      xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
      xmlns:control="clr-namespace:cntrl.Controls;assembly=cntrl"
      xmlns:converter="clr-namespace:Cognitivo.Converters"
      xmlns:converters="clr-namespace:Cognitivo.Converters;assembly=cntrl"
      xmlns:cls ="clr-namespace:Cognitivo.Class"
      xmlns:customcmd="clr-namespace:Cognitivo.Class"
      mc:Ignorable="d" 
      xmlns:lex="http://wpflocalizeextension.codeplex.com" 
        lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
        lex:ResxLocalizationProvider.DefaultDictionary="local"
        lex:LocalizeDictionary.DesignCulture="en-US" 
      d:DesignHeight="400" d:DesignWidth="800" Loaded="Page_Loaded">
    <Page.CommandBindings>
        <CommandBinding x:Name="DeleteCommand" Command="customcmd:CustomCommands.Delete" 
                        CanExecute="DeleteCommandBinding_CanExecute" 
                        Executed="DeleteCommandBinding_Executed"/>
    </Page.CommandBindings>
    <Page.Resources>
        <converter:TrueToFalseConverter x:Key="True2False"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <converter:Status2ColorConverter x:Key="Status2ColorConverter"/>
        <CollectionViewSource x:Key="security_userViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:security_user}, CreateList=True}"/>
        <CollectionViewSource x:Key="item_transferViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_transfer}, CreateList=True}"/>
        <CollectionViewSource x:Key="item_transferitem_transfer_detailViewSource" Source="{Binding item_transfer_detail, Source={StaticResource item_transferViewSource}}"/>
        <CollectionViewSource x:Key="branch_destViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_branch}, CreateList=True}"/>
        <CollectionViewSource x:Key="branch_originViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_branch}, CreateList=True}"/>
        <CollectionViewSource x:Key="transfercostViewSource" d:DesignSource="{d:DesignInstance {x:Type cls:transfercost}, CreateList=True}"/>
    </Page.Resources>

    <Grid DataContext="{StaticResource item_transferViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden" Margin="0,-36,0,0"
              Grid.ColumnSpan="2" Grid.RowSpan="2" Panel.ZIndex="10" IsVisibleChanged="crud_modal_IsVisibleChanged"/>

        <ListBox x:Name="itemDataGrid" DataContext="{Binding}"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="1"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
                 ItemsSource="{Binding}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordCode="{Binding app_location_origin.app_branch.name}" 
                                   recordSecondaryName="{Binding trans_date}"
                                   recordName="{Binding app_location_destination.app_branch.name}"
                                   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid x:Name="MainGrid" Grid.Column="1" Grid.Row="1" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="227"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel HorizontalAlignment="Center" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}" Margin="68,0" Width="264">
                <Label Content="{lex:Loc Date}" Style="{DynamicResource input_label}"/>
                <DatePicker Style="{StaticResource input_datepicker }"
                            SelectedDate="{Binding trans_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="{lex:Loc Document}" Style="{StaticResource input_label}"/>
                <ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range" 
                                  metro:ControlsHelper.FocusBorderBrush="RoyalBlue" SelectedIndex="0"
                                  metro:ControlsHelper.MouseOverBorderBrush="Silver"
                                  Style="{StaticResource input_combobox}"
                                  SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                <Label Content="{lex:Loc Number}" Style="{StaticResource input_label}"/>
                <TextBox
                                metro:TextBoxHelper.Watermark="{Binding NumberWatermark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{StaticResource input_textbox}"
                                metro:TextBoxHelper.SelectAllOnFocus="True"
                                metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                metro:ControlsHelper.MouseOverBorderBrush="Silver"
                             Text="{Binding number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                <StackPanel Orientation="Horizontal">
                    <StackPanel>
                        <Label Content="{lex:Loc Origin}" Style="{DynamicResource input_label}"/>
                        <ComboBox x:Name="id_branch_originComboBox" Grid.Column="1" DisplayMemberPath="name" Width="111"
                          SelectedValuePath="id_branch" SelectedItem="{Binding app_branch_origin,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}"
                          ItemsSource="{Binding Source={StaticResource branch_originViewSource}}" 
                          Style="{StaticResource input_combobox}"/>
                    </StackPanel>
                    <Label Content="" Style="{StaticResource ico_Label}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <StackPanel>
                        <Label Content="{lex:Loc Destination}" Style="{DynamicResource input_label}"/>
                        <ComboBox x:Name="id_branch_destinComboBox" Grid.Column="1" DisplayMemberPath="name" Width="111"
                          SelectedValuePath="id_branch" SelectedItem="{Binding app_branch_destination,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}"
                          ItemsSource="{Binding Source={StaticResource branch_destViewSource}}" 
                          Style="{StaticResource input_combobox}"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Column="1">
                <StackPanel x:Name="stackpnlCustomize" Margin="3,2,0,5">
                    <Label Content="{lex:Loc Information}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
                    <StackPanel Orientation="Horizontal" Margin="4,0" 
                                                Visibility="{Binding ElementName=chkDiscountStock, Path=IsChecked, Converter={StaticResource BoolToVisibility}}">

                        <TextBlock Text="" FontFamily="Cognitivo" VerticalAlignment="Center" Margin="6" Foreground="Crimson"/>
                        <TextBlock Text="Truck" Style="{StaticResource text_Label}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" >
                        <Label Content="" Style="{StaticResource btn_Label}"/>
                        <TextBlock Margin="5,0" VerticalAlignment="Center">
                                    <Hyperlink PreviewMouseUp="toolBar_btnPrint_Click">
                                        <Run Text="{lex:Loc Document}"/>
                                    </Hyperlink>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"  Margin="3,2,0,0">
                        <Label Content="A" Style="{StaticResource btn_Label}" Margin="0,0,4,0"/>
                        <TextBlock MouseUp="tbCustomize_MouseUp" VerticalAlignment="Center">
                                    <Hyperlink x:Name="hrefCustomize"><Run Text="{lex:Loc Customize}"/></Hyperlink></TextBlock>
                        <Popup x:Name="popupCustomize" IsOpen="False" Closed="popupCustomize_Closed"
                               PlacementTarget="{Binding ElementName=stackpnlCustomize}" Placement="Mouse">
                            <Border BorderThickness="1" BorderBrush="Gray">
                                <StackPanel Background="WhiteSmoke" Width="180">
                                    <Label Content="{lex:Loc Header}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}"/>
                                    <WrapPanel>
                                        <CheckBox Margin="6,0,0,0" x:Name="chkDiscountStock" 
                                                  IsChecked="{Binding Source={x:Static pref:TransferSetting.Default}, Path=movebytruck, Mode=TwoWay}">
                                            <Label Content="Truck" Style="{StaticResource generic_Label}"/>
                                        </CheckBox>

                                    </WrapPanel>

                                </StackPanel>
                            </Border>
                        </Popup>
                    </StackPanel>

                </StackPanel>
                <Label HorizontalAlignment="Left" Content="{lex:Loc Comment}" Margin="5,5,5,1"/>
                <TextBox Grid.Column="1" Grid.Row="0" TextWrapping="WrapWithOverflow" Height="46"
                         Text="{Binding comment, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}" 
                         Margin="5,1,5,5"/>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2">
                    <Label Content="Y" Style="{StaticResource ico_Label}"/>
                    <TextBlock Text="{lex:Loc Project}" Style="{StaticResource text_Label}"/>
                    <Label Content="{Binding project.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource generic_Label}"/>
                </StackPanel>
            </StackPanel>

            <TabControl Grid.Row="1" Grid.ColumnSpan="2" Margin="0,5,0,-5">
                <TabItem Header="{lex:Loc Origin}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="1" DataContext="{Binding Source={StaticResource item_transferViewSource}}" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}" VerticalAlignment="Top">

                            <cntrl:toolBar_Mini btnApprove_Click="toolBar_btnApproveOrigin_Click" Status="{Binding status, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                        <control:SmartBox_Item x:Name="sbxItem" Select="SmartBox_Item_Select" VerticalAlignment="Top" Exclude_OutOfStock="True" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}"/>
                        <DataGrid x:Name="item_transfer_detailDataGrid" Grid.Column="0" IsReadOnly="{Binding ElementName=toolBar,Path=IsEditable, Converter={StaticResource True2False}}"
                                    AutoGenerateColumns="False" EnableRowVirtualization="True" CanUserAddRows="False"
                                    ItemsSource="{Binding Source={StaticResource item_transferitem_transfer_detailViewSource}}" 
                                    RowDetailsVisibilityMode="VisibleWhenSelected" Margin="0,32,0,0">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="Auto" Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label Content="" FontFamily="/Cognitivo;component/Resources/#cognitivo" >
                                                <Label.Style>
                                                    <Style TargetType="{x:Type Label}">
                                                        <Setter Property="Background" Value="{Binding status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Status2ColorConverter}}"/>
                                                    </Style>
                                                </Label.Style>
                                            </Label>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding item_product.item.code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    Header="{lex:Loc Cognitivo:local:Code}" Width="Auto"/>
                                <DataGridTextColumn Binding="{Binding item_product.item.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    Header="{lex:Loc Cognitivo:local:Items}" MinWidth="128" Width="*" IsReadOnly="True"/>
                                <DataGridTextColumn Binding="{Binding quantity_origin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" 
                                                    Header="{lex:Loc Cognitivo:local:Quantity}" Width="64">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Foreground" Value="{Binding StockLevel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Status2ColorConverter}}"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Quantity_InStock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" 
                                                    Header="{lex:Loc Cognitivo:local:Stock}" Width="64" ElementStyle="{StaticResource RightAlignStyle}"/>
                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Movement}" IsReadOnly="True"
                                                    Binding="{Binding movement_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="64"/>
                                <DataGridTemplateColumn Width="Auto" Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="customcmd:CustomCommands.Delete"
                                                Style="{StaticResource btnDeleteChildStyle}"
                                                CommandParameter="{Binding}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="{lex:Loc Destination}">
                    <Grid     IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="1"
                                    DataContext="{Binding Source={StaticResource item_transferViewSource}}" >
                            <cntrl:toolBar_Mini btnApprove_Click="toolBar_btnApproveDestination_Click" Status="{Binding status}"/>
                            <ToggleButton Content="Check All" Margin="8" Click="btnCheckDestination_Click"/>
                        </StackPanel>
                        <DataGrid AutoGenerateColumns="False" Grid.Column="0"
                                  EnableRowVirtualization="True" CanUserDeleteRows="False" CanUserAddRows="False"
                                  ItemsSource="{Binding Source={StaticResource item_transferitem_transfer_detailViewSource}}" 
                                  Grid.Row="1" RowDetailsVisibilityMode="VisibleWhenSelected">
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"/>
                                <DataGridTemplateColumn Width="Auto" Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label Content="" FontFamily="/Cognitivo;component/Resources/#cognitivo" >
                                                <Label.Style>
                                                    <Style TargetType="{x:Type Label}">
                                                        <Setter Property="Foreground" Value="{Binding status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Status2ColorConverter}}"/>
                                                    </Style>
                                                </Label.Style>
                                            </Label>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Binding="{Binding item_product.item.code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    Header="{lex:Loc Cognitivo:local:Code}" Width="Auto"/>
                                <DataGridTextColumn Binding="{Binding item_product.item.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    Header="{lex:Loc Cognitivo:local:Items}" IsReadOnly="True" MinWidth="128" Width="Auto"/>
                                <DataGridTextColumn Binding="{Binding quantity_destination, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}}" 
                                                    Header="{lex:Loc Cognitivo:local:Quantity}" MinWidth="64"/>
                                <DataGridTextColumn Binding="{Binding timestamp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Header="{lex:Loc Cognitivo:local:Date}" MinWidth="64" IsReadOnly="True" Width="SizeToHeader"/>
                                <DataGridTemplateColumn Width="Auto" Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="customcmd:CustomCommands.Delete"
                                                    Style="{StaticResource btnDeleteChildStyle}"
                                                    CommandParameter="{Binding}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="{lex:Loc Cost}">
                    <StackPanel     IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <DataGrid x:Name="dgbcost" Height="Auto"
                                  AutoGenerateColumns="False" Grid.ColumnSpan="2" 
                                  EnableRowVirtualization="True" 
                                  ItemsSource="{Binding Source={StaticResource transfercostViewSource}}" 
                                  Grid.Row="1" RowDetailsVisibilityMode="VisibleWhenSelected">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding costname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{lex:Loc Cognitivo:local:Name}" Width="SizeToHeader"/>
                                <DataGridTextColumn Binding="{Binding cost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}}" Header="{lex:Loc Cognitivo:local:Cost}" Width="SizeToHeader"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </TabItem>
            </TabControl>

            <Grid Grid.Row="2" Margin="16" Grid.Column="1" VerticalAlignment="Top" Height="26" Width="155">
                <TextBox Width="155" x:Name="txtsearch" Height="26" VerticalAlignment="Center" HorizontalAlignment="Right" Padding="14,0,0,0" TextChanged="TextBox_TextChanged"/>
                <Label Content="L" Style="{StaticResource ico_Label}" HorizontalAlignment="Left" Foreground="Silver"/>
            </Grid>
        </Grid>
        <cntrl:toolBar Name="toolBar" Grid.ColumnSpan="2" VerticalAlignment="Top" 
                       btnNew_Click="toolBar_btnNew_Click" 
                       btnSave_Click="toolBar_btnSave_Click" 
                       btnDelete_Click="toolBar_btnDelete_Click" 
                       btnCancel_Click="toolBar_btnCancel_Click" 
                       btnEdit_Click="toolBar_btnEdit_Click"
                       btnSearch_Click="toolBar_btnSearch_Click"
                       State="{Binding State, Mode=TwoWay , UpdateSourceTrigger=PropertyChanged}"
                       Status="{Binding status, Mode=TwoWay , UpdateSourceTrigger=PropertyChanged}"
                       appName="Transfer"/>
    </Grid>
</Page>

<Page x:Class="Cognitivo.Product.Inventory" Title="{lex:Loc Inventory}"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	   xmlns:customcmd="clr-namespace:Cognitivo.Class"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:entity="clr-namespace:entity;assembly=entity"
      xmlns:mainpref="clr-namespace:Cognitivo.Properties"
	  xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
	  xmlns:cls="clr-namespace:Cognitivo.Class"
       xmlns:Controller="clr-namespace:entity.Controller.Product;assembly=entity"
        xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"
	  xmlns:converter="clr-namespace:Cognitivo.Converters"
	  mc:Ignorable="d"
	  xmlns:lex="http://wpflocalizeextension.codeplex.com"
		lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo"
		lex:ResxLocalizationProvider.DefaultDictionary="local"
		lex:LocalizeDictionary.DesignCulture="en-US"
	  d:DesignHeight="400" d:DesignWidth="800" Loaded="Page_Loaded">
    <Page.Resources>
        <converter:ToStringFormatConverter x:Key="ToStringFormatConverter" />
        <BooleanToVisibilityConverter x:Key="Bool2Visi" />
        <converter:TrueToFalseConverter x:Key="TrueToFalse" />
        <converter:ExpireDate2Visible x:Key="ExpireDate2Visible" />
        <Controller:InventoryController x:Key="InventoryController"/>
        <CollectionViewSource x:Key="item_inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_inventory}, CreateList=True}" />
        <CollectionViewSource x:Key="app_branchViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_branch}, CreateList=True}" />
        <CollectionViewSource x:Key="app_branchapp_locationViewSource" Source="{Binding app_location, Source={StaticResource app_branchViewSource}}" />
        <CollectionViewSource x:Key="item_inventoryitem_inventory_detailViewSource" Source="{Binding item_inventory_detail, Source={StaticResource item_inventoryViewSource}}" >
           
        </CollectionViewSource>
    </Page.Resources>
    <Page.CommandBindings>
        <CommandBinding x:Name="EditCommand" Command="customcmd:CustomCommands.EditAll"
						CanExecute="EditCommand_CanExecute"
						Executed="EditCommand_Executed" />
    </Page.CommandBindings>
    <Grid DataContext="{StaticResource item_inventoryViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <!-- toolBar -->
        <Grid Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden"
			  Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5" IsVisibleChanged="crud_modal_IsVisibleChanged" />
        <Grid Name="crud_modalExpire" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden"
			  Grid.RowSpan="3" Grid.ColumnSpan="2" Panel.ZIndex="5" IsVisibleChanged="crud_modalExpire_IsVisibleChanged" />
        <cntrl:toolBar x:Name="toolBar" Grid.ColumnSpan="2" VerticalAlignment="Top"
					   btnEdit_Click="toolBar_btnEdit_Click"
					   btnSave_Click="toolBar_btnSave_Click"
					   btnNew_Click="toolBar_btnNew_Click"
					   btnCancel_Click="toolBar_btnCancel_Click"
					   appName="Inventory"
                           btnSearch_Click="Search_Click"
					   btnApprove_Click="toolBar_btnApprove_Click"
					   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
						Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
					   Margin="0" />

        <!--Left Side Part Start-->
        <Grid Grid.Row="1">
            <ListBox x:Name="item_inventoryDataGrid"
					 ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="1"
					 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
					 ItemsSource="{Binding}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <cntrl:navList recordCode="{Binding security_user.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									   recordSecondaryName="{Binding comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									   recordName="{Binding trans_date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
									   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
									   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        <!--Left Side Part End-->

        <!--Right Hand Side Part - Start-->
        <Grid Grid.Column="1" Grid.Row="1" DataContext="{StaticResource item_inventoryitem_inventory_detailViewSource}" Background="{StaticResource winBackground}">
            <Grid.RowDefinitions>
                <RowDefinition Height="135" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.ColumnSpan="2" DataContext="{StaticResource item_inventoryViewSource}">
                <StackPanel Margin="8" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}">
                    <Label Content="{lex:Loc Date}" />
                    <DatePicker SelectedDate="{Binding trans_date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={StaticResource item_inventoryViewSource}}"  Style="{StaticResource input_datepicker}" />
                    <Label Content="{lex:Loc Comment}" />
                    <TextBox Text="{Binding comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_textbox}" />
                </StackPanel>
            </Grid>

            <!-- Right Side Panel -->
            <Grid Grid.Column="2" DataContext="{StaticResource item_inventoryViewSource}">
                <StackPanel Margin="8">
                    <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="" Style="{StaticResource ico_Label}" />
                        <CheckBox Content="{lex:Loc LotNumber}" Unchecked="cbxExpiryCode_Unchecked" x:Name="cbxBatchCode" />
                        <TextBox Text="{Binding GroupBatchCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ElementName=cbxBatchCode, Path=IsChecked, Converter={StaticResource Bool2Visi}}" Style="{StaticResource input_textbox}" Width="64" VerticalAlignment="Center" />
                    </StackPanel>
                    <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="" Style="{StaticResource ico_Label}" />
                        <CheckBox Content="{lex:Loc ExpirationDate}" Unchecked="cbxExpiryCode_Unchecked" x:Name="cbxExpiryCode" />
                        <DatePicker SelectedDate="{Binding GroupExpiryDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ElementName=cbxExpiryCode, Path=IsChecked, Converter={StaticResource Bool2Visi}}" Style="{StaticResource input_datepicker}" Width="auto" VerticalAlignment="Center" />
                    </StackPanel>
                    <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="R" Style="{StaticResource ico_Label}" />
                        <Label Content="{lex:Loc User}" />
                        <Label Content="{Binding security_user.name, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Source={StaticResource item_inventoryViewSource}}"
						        Style="{StaticResource input_label}" />
                    </StackPanel>
                    <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
                                AllowDrop="True" Drop="Excel_Drop"
                                IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="" Style="{StaticResource ico_Label}" />
                        <Button Click="Excel_Create" Content="Excel" MinWidth="128" FontSize="10" />
                    </StackPanel>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="1">
                <ComboBox x:Name="cbxBranch" ItemsSource="{Binding Source={StaticResource app_branchViewSource}}" Margin="2"
						  DisplayMemberPath="name" SelectedValuePath="id_branch" VerticalAlignment="Top" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
						  SelectedValue="{Binding id_branch, Mode=TwoWay,Source={StaticResource item_inventoryViewSource}, UpdateSourceTrigger=PropertyChanged}" />

                <ListBox x:Name="location_ListBox" Background="{DynamicResource AccentColor_Introvert}" Margin="0,32,0,0"
						 ScrollViewer.VerticalScrollBarVisibility="Auto"
						 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
						 ItemContainerStyle="{StaticResource nav_ListSelection}"
						 ItemsSource="{Binding Source={StaticResource app_branchapp_locationViewSource}}"
						 SelectionChanged="location_ListBox_SelectionChanged_1">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <cntrl:navList recordCode="{Binding app_branch.name, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
								   recordName="{Binding name, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
								   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>

            <Grid  Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource btn_green}" Content="{lex:Loc Refresh}" Click="location_ListBox_SelectionChanged"
						VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}" />
                    <CheckBox x:Name="checkStock" Width="auto" Style="{StaticResource input_checkbox}" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" Content="{lex:Loc Stock}" />
                    <CheckBox x:Name="checkBatch" Width="auto" Style="{StaticResource input_checkbox}" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" Content="{lex:Loc Insert}" />

                </StackPanel>

                <Grid Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top" Width="256" Margin="2">
                    <TextBox x:Name="txtsearch" Width="256" Height="26" VerticalAlignment="Center" HorizontalAlignment="Right" Padding="14,0,0,0" TextChanged="TextBox_TextChanged" Margin="-71,0,0,0" />
                    <Label Content="L" Style="{StaticResource ico_Label}" HorizontalAlignment="Left" Foreground="Silver" />
                </Grid>

                <Grid Grid.Column="1" Visibility="{Binding ElementName=checkBatch, Path=IsChecked, Converter={StaticResource Bool2Visi}}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="264" Margin="0,1,-1,0">
                    <Controls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="item_Select" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}"  Type="InStock_Only" />
                </Grid>
                <DataGrid x:Name="dgvdetail" AutoGenerateColumns="False" EnableRowVirtualization="True" BorderBrush="WhiteSmoke" BorderThickness="1" VirtualizingStackPanel.VirtualizationMode="Recycling"
						  IsReadOnly="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource TrueToFalse},
													   UpdateSourceTrigger=PropertyChanged, FallbackValue=false}" CanUserAddRows="False"
						  RowDetailsVisibilityMode="VisibleWhenSelected" Margin="0,32,0,0" Style="{StaticResource AzureDataGrid}"  ItemsSource="{Binding Source={StaticResource item_inventoryitem_inventory_detailViewSource}}">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												ElementStyle="{DynamicResource MetroDataGridCheckBox}"
												EditingElementStyle="{DynamicResource MetroDataGridCheckBox}" />
                        <DataGridTextColumn Binding="{Binding item_product.item.code}" IsReadOnly="True" Header="{lex:Loc Cognitivo:local:Code}" MinWidth="64" Width="Auto" />
                        <DataGridTextColumn Binding="{Binding item_product.item.name}" IsReadOnly="True" Header="{lex:Loc Cognitivo:local:Items}" MinWidth="128" MaxWidth="256" Width="Auto" />
                        <DataGridTextColumn MinWidth="64" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" SortMemberPath="value_system" IsReadOnly="True" >
                            <DataGridTextColumn.Header>
                                <TextBlock><Run Text="{lex:Loc Cognitivo:local:Quantity}" /><Run Text=" System" /></TextBlock>
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="value_system" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="QuantityDecimalStringFormat" Mode="OneWay"  />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn  Width="64" ElementStyle="{StaticResource RightAlignStyle}" SortMemberPath="value_counted">
                            <DataGridTextColumn.Header>
                                <TextBlock><Run Text="{lex:Loc Cognitivo:local:Quantity}" /><Run Text=" Real" /></TextBlock>
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="value_counted" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="QuantityDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Cost}"  ElementStyle="{StaticResource RightAlignStyle}" Width="Auto" SortMemberPath="unit_value" IsReadOnly="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,Source={StaticResource item_inventoryitem_inventory_detailViewSource}}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="unit_value" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <!--<DataGridTextColumn Binding="{Binding batch_code, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                            Header="{lex:Loc Cognitivo:local:LotNumber}" MinWidth="64" MaxWidth="128">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding item_product.can_expire}" Value="false">
                                            <Setter Property="IsEnabled" Value="false" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn Header="{lex:Loc Cognitivo:local:ExpirationDate}" Width="100">
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding item_product.can_expire}" Value="false">
                                            <Setter Property="IsEnabled" Value="false" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <DatePicker SelectedDate="{Binding expire_date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                        <DataGridTemplateColumn Width="Auto" Header="">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Command="customcmd:CustomCommands.EditAll"  IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
													Style="{StaticResource btnEditChildStyle}"
													CommandParameter="{Binding}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridComboBoxColumn x:Name="App_currencyfxcombobox" Header="Currency" Width="Auto"
															ItemsSource="{Binding Source={StaticResource app_currencyfxViewSource}}" DisplayMemberPath="app_currency.name" SelectedValuePath="id_currencyfx"
															SelectedValueBinding="{Binding id_currencyfx, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />-->
                        <DataGridTextColumn Binding="{Binding comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Header="{lex:Loc Cognitivo:local:Comment}" MinWidth="128" Width="Auto" />
                        <DataGridTemplateColumn Width="Auto" Header="">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="Update Cost" Click="Button_Click"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
        <!--Right Hand Side Part - End-->
    </Grid>
</Page>
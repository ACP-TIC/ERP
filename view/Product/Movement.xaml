<Page x:Class="Cognitivo.Product.Movement" Title="{lex:Loc Movement}"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:entity="clr-namespace:entity;assembly=entity" 
    xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
    xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl" 
      mc:Ignorable="d" 
      
      xmlns:lex="http://wpflocalizeextension.codeplex.com" 
        lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
        lex:ResxLocalizationProvider.DefaultDictionary="local"
        lex:LocalizeDictionary.DesignCulture="en-US" 
      
      d:DesignHeight="600" d:DesignWidth="800" Loaded="Page_Loaded">

    <Page.Resources>
        <CollectionViewSource x:Key="contactViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:contact}, CreateList=True}"/>
        <CollectionViewSource x:Key="itemViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item}, CreateList=True}"/>
        <CollectionViewSource x:Key="item_transferViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_transfer}, CreateList=True}"/>
        <CollectionViewSource x:Key="item_transferitem_transfer_detailViewSource" Source="{Binding item_transfer_detail, Source={StaticResource item_transferViewSource}}"/>
        <CollectionViewSource x:Key="location_destViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_location}, CreateList=True}"/>
        <CollectionViewSource x:Key="location_originViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_location}, CreateList=True}"/>
        <CollectionViewSource x:Key="app_statusViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:Status}, CreateList=True}"/>
        <CollectionViewSource x:Key="security_userViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:security_user}, CreateList=True}"/>
        
    </Page.Resources>

    <Grid DataContext="{StaticResource item_transferViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--<DataGrid x:Name="item_transferDataGrid" ItemsSource="{Binding}"
                  Style="{StaticResource main_Datagrid}"
                  Grid.Row="1">
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="commentColumn" Binding="{Binding comment}" Header="comment" Width="*"/>
                <DataGridTemplateColumn x:Name="trans_dateColumn" Header="trans date" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding trans_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>-->

        <ListBox Background="{StaticResource AccentColor_Brush}" x:Name="item_transferDataGrid"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="1"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
              
                 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
                 ItemsSource="{Binding}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordName="{Binding item_request.name}" recordSecondaryName="{Binding trans_date}"
                                   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid x:Name="MainGrid" Grid.Column="1" Grid.Row="1" Background="White" DataContext="{Binding}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="17*"/>
                <ColumnDefinition Width="10*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="113*"/>
                <RowDefinition Height="67*"/>
            </Grid.RowDefinitions>
            <StackPanel HorizontalAlignment="Center" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}" Grid.Column="1" Margin="7.85,0,68,0">
                <Label Content="{lex:Loc Date}" Style="{DynamicResource input_label}"/>
                <DatePicker Style="{StaticResource input_datepicker }"
                            SelectedDate="{Binding trans_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Content="{lex:Loc Origin}" Style="{DynamicResource input_label}"/>
                <ComboBox x:Name="id_location_originComboBox" Grid.Column="1" DisplayMemberPath="name" 
                          SelectedValuePath="id_location" Grid.Row="2" 
                          ItemsSource="{Binding Source={StaticResource location_originViewSource}}" 
                          SelectedItem="{Binding app_location_origin, 
                                                  Mode=TwoWay, ValidatesOnExceptions=True, 
                                                  NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" 
                          Style="{StaticResource input_combobox}"/>
                <Label Content="{lex:Loc Destination}" Style="{DynamicResource input_label}"/>
                <ComboBox x:Name="id_location_destinationComboBox" Grid.Column="1" Grid.Row="1" DisplayMemberPath="name" 
                          SelectedValuePath="id_location" ItemsSource="{Binding Source={StaticResource location_destViewSource}}" 
                          SelectedItem="{Binding app_location_destination, 
                                                  Mode=TwoWay, 
                                                  ValidatesOnExceptions=True, 
                                                  NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" 
                          Style="{StaticResource input_combobox}"/>
                <Label Content="{lex:Loc Document}" Style="{StaticResource input_label}"/>
                <ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range" 

                                  metro:ControlsHelper.FocusBorderBrush="RoyalBlue" SelectedIndex="0"
                                  metro:ControlsHelper.MouseOverBorderBrush="Silver"
                                  Style="{StaticResource input_combobox}"
                                  SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                <Label Content="{lex:Loc Number}" Style="{StaticResource input_label}"/>
                <TextBox
                                metro:TextBoxHelper.Watermark="{Binding NumberWatermark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{StaticResource input_textbox}"
                                metro:TextBoxHelper.SelectAllOnFocus="True"
                                metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                metro:ControlsHelper.MouseOverBorderBrush="Silver"
                             Text="{Binding number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                <Grid>
                    <Label Content="{lex:Loc Employee}" Style="{StaticResource input_label}"/>

                </Grid>
                <AdornerDecorator>
                    <Controls:SmartBox_Contact x:Name="sbxContact" Get_Employees="True" Select="set_ContactPref"
                                                   Text="{Binding employee.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </AdornerDecorator>
            </StackPanel>
            <StackPanel Grid.Column="2" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                <Label HorizontalAlignment="Left" Content="{lex:Loc Comment}" Margin="5,5,5,1"/>
                <TextBox Grid.Column="1" Grid.Row="0" TextWrapping="WrapWithOverflow" Height="46"
                         Text="{Binding comment, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}" 
                         Margin="5,1,5,5"/>
                <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal"
                                    >
                    <Label Content="" Style="{StaticResource ico_Label}"/>
                    <TextBlock Text="{lex:Loc Branch}" Style="{StaticResource text_Label}"/>
                    <ComboBox Width="Auto" Margin="0" x:Name="cbxBranch" Style="{StaticResource ComboToLabelStyle}"
                                     metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                     metro:ControlsHelper.MouseOverBorderBrush="Silver"
                                     DisplayMemberPath="name" SelectedValuePath="id_branch" SelectionChanged="cbxBranch_SelectionChanged"
						             SelectedValue="{Binding id_branch, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2"
                                       >
                    <Label Content="Y" Style="{StaticResource ico_Label}"/>
                    <TextBlock Text="{lex:Loc Department}" Style="{StaticResource text_Label}"/>
                    <ComboBox x:Name="cbxDepartment" Style="{StaticResource ComboToLabelStyle}"
                                     metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                     metro:ControlsHelper.MouseOverBorderBrush="Silver"
						             DisplayMemberPath="name" Width="Auto"
						             SelectedValuePath="id_department" 
						             SelectedValue="{Binding id_department, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <!--ItemsSource="{Binding Source={StaticResource projectViewSource}}"-->
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2">
                    <Label Content="Y" Style="{StaticResource ico_Label}"/>
                    <TextBlock Text="{lex:Loc Project}" Style="{StaticResource text_Label}"/>
                    <ComboBox x:Name="cbxProject" Style="{StaticResource ComboToLabelStyle}"
                                     metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                     metro:ControlsHelper.MouseOverBorderBrush="Silver"
						             DisplayMemberPath="name" Width="Auto"
						             SelectedValuePath="id_project" 
						             SelectedValue="{Binding id_project, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <!--ItemsSource="{Binding Source={StaticResource projectViewSource}}"-->
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                </StackPanel>
            </StackPanel>
            <StackPanel IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}" Margin="8" Grid.Row="1" Grid.ColumnSpan="3" >
                <Label Content="{lex:Loc Item}" Style="{StaticResource input_label}"/>


                <cntrl:SearchableTextbox x:Name="cbxItem" Margin="0,0,8,0" HorizontalAlignment="Left" Width="256"
                                                 CollectionViewSource="{StaticResource itemViewSource}" Height="26"  
                                                 KeyDown="cbxItem_KeyDown" MouseDoubleClick="cbxItem_MouseDoubleClick"
                                                 IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}" >
                    <cntrl:SearchableTextbox.Columns>
                        <cntrl:SmartBoxColumn Header="{lex:Loc Cognitivo:local:Code}" ForProperty="code" Binding="{Binding code, Mode=Default}" EnableSearch="True"/>
                        <cntrl:SmartBoxColumn Header="{lex:Loc Cognitivo:local:Product}" ForProperty="name" Binding="{Binding name, Mode=Default}" EnableSearch="True"/>
                        <cntrl:SmartBoxColumn Header="{lex:Loc Cognitivo:local:ID}" ForProperty="id_item" Binding="{Binding id_item, Mode=Default}" Hide="True" EnableSearch="False"/>
                    </cntrl:SearchableTextbox.Columns>
                </cntrl:SearchableTextbox>
                <DataGrid  x:Name="item_transfer_detailDataGrid" 
                      AutoGenerateColumns="False" 
                      EnableRowVirtualization="True" 
                      IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}"
                      ItemsSource="{Binding Source={StaticResource item_transferitem_transfer_detailViewSource}}" 
                      Grid.Row="1" >
                    <DataGrid.Columns>
                        <!--<DataGridTextColumn Binding="{Binding code}" Header="code" Width="SizeToHeader"/>-->
                        <!--<DataGridTextColumn Binding="{Binding product}" Header="product" Width="200"/>-->
                        <!--<DataGridComboBoxColumn 
                        ItemsSource="{Binding Source={StaticResource item_productViewSource}}" 
                        SelectedValueBinding="{Binding id_item_product,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        DisplayMemberPath="item.name"  SelectedValuePath="id_item_product" 
                        Header="Product" Width="200"/>-->
                        <DataGridTextColumn Binding="{Binding item_product.item.name,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Name" Width="Auto"/>
                        <DataGridTextColumn Binding="{Binding quantity_origin,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="quantity" Width="Auto"/>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>



        </Grid>
        <cntrl:toolBar Name="toolBar" Grid.ColumnSpan="2" VerticalAlignment="Top" 
                       btnNew_Click="toolBar_btnNew_Click" 
                       btnSave_Click="toolBar_btnSave_Click" 
                       btnDelete_Click="toolBar_btnDelete_Click" 
                       btnCancel_Click="toolBar_btnCancel_Click" 
                       btnEdit_Click="toolBar_btnEdit_Click"
                       btnApprove_Click="toolBar_btnApprove_Click"
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                       Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                       appName="Movement"/>
    </Grid>
</Page>

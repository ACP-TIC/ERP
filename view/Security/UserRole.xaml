<Page x:Class="Cognitivo.Security.UserRole"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
	  xmlns:entity="clr-namespace:entity;assembly=entity"
	  xmlns:converter="clr-namespace:Cognitivo.Converters"
	  mc:Ignorable="d" d:DesignHeight="600" d:DesignWidth="800"
	  xmlns:lex="http://wpflocalizeextension.codeplex.com"
		lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo"
		lex:ResxLocalizationProvider.DefaultDictionary="local"
		lex:LocalizeDictionary.DesignCulture="en-US"
	  Background="{StaticResource winBackground}"
	 Loaded="Page_Loaded">
    <Page.Resources>
        <converter:Localize x:Key="Localized" />
        <converter:TrueToFalseConverter x:Key="TrueToFalse" />
        <CollectionViewSource x:Key="app_departmentViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_department}, CreateList=True}" />
        <CollectionViewSource x:Key="security_roleViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:security_role}, CreateList=True}" />
        <CollectionViewSource x:Key="security_rolesecurity_curdViewSource" Source="{Binding security_curd, Source={StaticResource security_roleViewSource}}" />
        <CollectionViewSource x:Key="security_rolesecurity_role_privilageViewSource" Source="{Binding security_role_privilage, Source={StaticResource security_roleViewSource}}" />
    </Page.Resources>
    <Grid DataContext="{StaticResource security_roleViewSource}" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="182" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid Name="crud_modal" Background="#7FC0C0C0"
			  Grid.ColumnSpan="2" Grid.RowSpan="2" Panel.ZIndex="1" Visibility="Hidden" />
        <Grid />
        <ListBox x:Name="security_roleDataGrid"
				 ScrollViewer.VerticalScrollBarVisibility="Auto" Background="{StaticResource AccentColor_Brush}"
				 ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="1" Grid.RowSpan="2"
				 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
				 ItemsSource="{Binding Source={StaticResource security_roleViewSource}}" SelectionChanged="security_roleDataGrid_SelectionChanged">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordSecondaryName="{Binding is_master}"
						recordCode="{Binding app_department.name, Mode=OneWay}"
								   recordName="{Binding name, Mode=OneWay}"
								   State="{Binding State}"
								   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Margin="8" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}">
                <Label Style="{StaticResource input_label}" Content="{lex:Loc UserRole}" />
                <TextBox Style="{StaticResource input_textbox}"
					 Text="{Binding name, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
                <Label Style="{StaticResource input_label}" Content="{lex:Loc Department}" />
                <ComboBox x:Name="id_departmentComboBox" ItemsSource="{Binding Source={StaticResource app_departmentViewSource}}" Style="{StaticResource input_combobox}"
					  SelectedValuePath="id_department" DisplayMemberPath="name" SelectedValue="{Binding id_department,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>
                <Label Style="{StaticResource input_label}" Content="{lex:Loc Version}" />
                <StackPanel Orientation="Horizontal">
                    <ComboBox x:Name="cbxVersion" Style="{StaticResource input_combobox}" Width="180" />
                    <Button Content="Change" Click="btnChange" HorizontalAlignment="Center" Padding="16,0" VerticalAlignment="Top" />
                </StackPanel>
            </StackPanel>
            <StackPanel Margin="8" Grid.Column="1" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}">
                <StackPanel Orientation="Horizontal">
                    <Label Style="{StaticResource input_label}" Content="{lex:Loc SeatsAvailable}" />
                    <Label Name="lblVersionlocal" Content="0" />
                    <!-- Total Number of Users in all Roles with this Version -->
                    <Label Content="/" />
                    <Label x:Name="lblVersionInternet" Content="0" />
                    <!-- Total Number of Seats Avaiable from Internet -->
                </StackPanel>
                <CheckBox IsChecked="{Binding is_master, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
					  Content="{lex:Loc Master}" Style="{StaticResource input_checkbox}" />
                <CheckBox IsChecked="{Binding see_cost, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
					  Content="{lex:Loc Cost}" Style="{StaticResource input_checkbox}" />
            </StackPanel>
        </Grid>
        <TabControl Grid.Row="2" Grid.Column="1">
            <TabItem Header="{lex:Loc Basic}">
                <Grid>
                    <DataGrid x:Name="security_curdDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True"
							  IsReadOnly="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource TrueToFalse},
												   UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
							  ItemsSource="{Binding Source={StaticResource security_rolesecurity_curdViewSource}}" Grid.Row="1" CanUserDeleteRows="False" CanUserAddRows="False"
							  RowDetailsVisibilityMode="VisibleWhenSelected" FontSize="16" SelectionUnit="Cell">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Binding="{Binding all, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
													ElementStyle="{DynamicResource MetroDataGridCheckBox}"
													EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
													Width="SizeToHeader" />
                            <DataGridTextColumn Binding="{Binding id_application, Converter={StaticResource Localized}}"
												Header="{lex:Loc Cognitivo:local:Application}" FontWeight="Bold"
												IsReadOnly="True" Width="*" SortDirection="Descending" />
                            <DataGridCheckBoxColumn Binding="{Binding can_read, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
													ElementStyle="{DynamicResource MetroDataGridCheckBox}"
													EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
													Header="{lex:Loc Cognitivo:local:View}" Width="SizeToHeader" />
                            <DataGridCheckBoxColumn Binding="{Binding can_create, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
													ElementStyle="{DynamicResource MetroDataGridCheckBox}"
													EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
													Header="{lex:Loc Cognitivo:local:Create}" Width="SizeToHeader" />
                            <DataGridCheckBoxColumn Binding="{Binding can_update, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
													ElementStyle="{DynamicResource MetroDataGridCheckBox}"
													EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
													Header="{lex:Loc Cognitivo:local:Edit}" Width="SizeToHeader" />
                            <DataGridCheckBoxColumn Binding="{Binding can_delete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
																	  ElementStyle="{DynamicResource MetroDataGridCheckBox}"
													EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
													Header="{lex:Loc Cognitivo:local:Delete}" Width="SizeToHeader" />
                            <DataGridCheckBoxColumn Binding="{Binding can_approve, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
																	  ElementStyle="{DynamicResource MetroDataGridCheckBox}"
													EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
													Header="{lex:Loc Cognitivo:local:Approve}" Width="SizeToHeader" />
                            <DataGridCheckBoxColumn Binding="{Binding can_annul, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
																	  ElementStyle="{DynamicResource MetroDataGridCheckBox}"
													EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
													Header="{lex:Loc Cognitivo:local:Annul}" Width="SizeToHeader" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="{lex:Loc Special}">
                <Grid>
                    <DataGrid x:Name="security_role_privilageDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True"
							  ItemsSource="{Binding Source={StaticResource security_rolesecurity_role_privilageViewSource}}"
							  IsReadOnly="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource TrueToFalse},
											UpdateSourceTrigger=PropertyChanged, FallbackValue=false}" CanUserAddRows="False"
							  RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="{lex:Loc Cognitivo:local:Allow}" Binding="{Binding has_privilage,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
													ElementStyle="{StaticResource input_checkbox}" Width="SizeToHeader" />
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Privilege}" Width="*" IsReadOnly="True"
												Binding="{Binding security_privilage.name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Value}" Width="128" CellStyle="{StaticResource Number_CellStyle}"
												Binding="{Binding value_max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>

        <Grid Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Top" Width="256" Margin="0,8,4,0" Height="26">
            <TextBox x:Name="txtsearch" Width="256" Height="26" VerticalAlignment="Center" HorizontalAlignment="Right" Padding="14,0,0,0" TextChanged="TextBox_TextChanged" Margin="-71,0,0,0" />
            <Label Content="L" Style="{StaticResource ico_Label}" HorizontalAlignment="Left" Foreground="Silver" />
        </Grid>

        <cntrl:toolBar x:Name="toolBar" VerticalAlignment="Top" appName="UserRole"
					   btnSearch_Click="toolBar_btnSearch_Click"
					   btnNew_Click="New_Click"
					   btnSave_Click="Save_Click"
					   btnDelete_Click="toolBar_btnDelete_Click"
					   btnCancel_Click="toolBar_btnCancel_Click"
					   btnEdit_Click="toolBar_btnEdit_Click"
					   State="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					   Grid.ColumnSpan="2" />
    </Grid>
</Page>
<Page Title="{lex:Loc Document}" x:Class="Cognitivo.Configs.Document"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:entity="clr-namespace:entity;assembly=entity"
       xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
      mc:Ignorable="d"

    xmlns:lex="http://wpflocalizeextension.codeplex.com"
        lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo"
        lex:ResxLocalizationProvider.DefaultDictionary="local"
        lex:LocalizeDictionary.DesignCulture="en-US"

    xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
     d:DesignHeight="600" d:DesignWidth="800"
	 Loaded="Page_Loaded">
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="Bool2Visibility" />
        <CollectionViewSource x:Key="app_documentViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_document}, CreateList=True}" />
        <CollectionViewSource x:Key="SortedFontsCollection" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
            <CollectionViewSource.SortDescriptions>
                <ComponentModel:SortDescription PropertyName="Source" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Page.Resources>

    <Grid DataContext="{StaticResource app_documentViewSource}" Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="60*" />
        </Grid.RowDefinitions>

        <!--<DataGrid x:Name="app_documentDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" IsReadOnly="True"
                      ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="nameColumn" Binding="{Binding name}" Header="name" Width="*" />
                </DataGrid.Columns>
            </DataGrid>-->

        <ListBox Background="{DynamicResource AccentColor_Brush}" x:Name="app_documentDataGrid"
                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="1"
                 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
                 ItemsSource="{Binding Source={StaticResource app_documentViewSource}, IsAsync=True}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordName="{Binding name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <StackPanel x:Name="stackMain" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}" HorizontalAlignment="Left"
                    Grid.Column="1" Grid.Row="1" Margin="8" Background="White">
            <Button Content="Print" Click="Button_Click" Visibility="Collapsed" />
            <Label Content="{lex:Loc Name}" Style="{DynamicResource input_label}" />
            <TextBox Text="{Binding name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource input_textbox}" />
            <Label Content="{lex:Loc Module}" Style="{DynamicResource input_label}" />
            <ComboBox x:Name="cbxApplication" Style="{StaticResource input_combobox}"
                      SelectedValue="{Binding id_application, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                      SelectionChanged="cbxApplication_SelectionChanged" />
            <TextBlock Style="{StaticResource text_Instructions}" Text="Limit the amount of rows a Document can have. 0 = UnLimited" />
            <Label Content="{lex:Loc DocumentRowLimit}" Style="{DynamicResource input_label}" />
            <TextBox Text="{Binding line_limit, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource input_textbox}" />
            <Label Content="{lex:Loc Document}" Style="{DynamicResource input_label}" />
            <RadioButton Content="{lex:Loc StylePrinter}" x:Name="rbtnStylePrinter"
                      IsChecked="{Binding style_printer, Mode=TwoWay, FallbackValue=false, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource input_radiobutton}" />
            <RadioButton Content="{lex:Loc Reciept}" x:Name="rbtnStyleReciept"
                      IsChecked="{Binding style_reciept, Mode=TwoWay, FallbackValue=true, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource input_radiobutton}" />

            <Label Content="{lex:Loc Filter}" Style="{DynamicResource input_label}" />
            <CheckBox Content="{lex:Loc Branch}" IsChecked="{Binding filterby_branch, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource input_checkbox}" />
            <CheckBox Content="{lex:Loc Terminal}" IsChecked="{Binding filterby_tearminal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource input_checkbox}" />
        </StackPanel>
        <StackPanel Grid.Row="1" Grid.Column="1" ScrollViewer.VerticalScrollBarVisibility="Auto"
                    Visibility="{Binding ElementName=rbtnStyleReciept, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"
                    HorizontalAlignment="Right">
            <Label Content="{lex:Loc Reciept Style}" Style="{StaticResource H2}" Foreground="White" />
            <StackPanel Orientation="Horizontal">
                <StackPanel Margin="5,5,2,5">
                    <Label Content="{lex:Loc Font}" Style="{StaticResource input_label}" Foreground="White" />
                    <ComboBox x:Name="cbxFonts" ItemsSource="{Binding Source={StaticResource SortedFontsCollection}}"
                              Width="128" Style="{StaticResource input_combobox}" />
                </StackPanel>
                <StackPanel Margin="2,5,5,5">
                    <Label Content="{lex:Loc FontSize}" Style="{StaticResource input_label}" Foreground="White" />
                    <ComboBox Width="128" IsEditable="True" Style="{StaticResource input_combobox}" x:Name="cbxfontsize">
                        <ComboBoxItem>6</ComboBoxItem>
                        <ComboBoxItem>8</ComboBoxItem>
                        <ComboBoxItem>10</ComboBoxItem>
                        <ComboBoxItem>12</ComboBoxItem>
                        <ComboBoxItem>14</ComboBoxItem>
                        <ComboBoxItem>16</ComboBoxItem>
                        <ComboBoxItem>18</ComboBoxItem>
                    </ComboBox>
                </StackPanel>
            </StackPanel>
            <Label Content="{lex:Loc columns}" Style="{StaticResource input_label}" Foreground="White" />
            <ListBox x:Name="lstfield" MouseDoubleClick="lstfield_MouseDoubleClick">
            </ListBox>
            <Label Content="{lex:Loc Header}" Style="{StaticResource input_label}" Foreground="White" />
            <TextBox x:Name="rtfheader" AcceptsReturn="True" TextWrapping="Wrap" Height="100" Text="{Binding reciept_header,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            </TextBox>
            <!--<toolkit:RichTextBox x:Name="rtfheader"  Width="256" Margin="8,0" MinHeight="128" FontFamily="{Binding ElementName=cbxFonts, Path=SelectedItem, Mode=TwoWay}"
                          FontSize="{Binding ElementName=cbxfontsize, Path=Text, Mode=TwoWay}" Text="{Binding reciept_header,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                <RichTextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.85" />
                </RichTextBox.Background>
            </toolkit:RichTextBox>-->
            <Label Content="{lex:Loc Row}" Style="{StaticResource input_label}" Foreground="White" />
            <TextBox x:Name="rtfrow" AcceptsReturn="True" TextWrapping="Wrap" Height="100" Text="{Binding reciept_body,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            </TextBox>
            <!--<toolkit:RichTextBox x:Name="rtfrow" Width="256" Margin="8,0" MinHeight="32" FontFamily="{Binding ElementName=cbxFonts, Path=SelectedItem, Mode=TwoWay}"
                          FontSize="{Binding ElementName=cbxfontsize, Path=Text, Mode=TwoWay}" Text="{Binding reciept_body,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                <RichTextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.85" />
                </RichTextBox.Background>
            </toolkit:RichTextBox>-->
            <Label Content="{lex:Loc Footer}" Style="{StaticResource input_label}" Foreground="White" />
            <TextBox x:Name="rtffooter" AcceptsReturn="True" TextWrapping="Wrap" Height="100" Text="{Binding reciept_footer,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
            </TextBox>
            <!--<toolkit:RichTextBox x:Name="rtffooter"  Width="256" Margin="8,0" MinHeight="128" FontFamily="{Binding ElementName=cbxFonts, Path=SelectedItem, Mode=TwoWay}"
                          FontSize="{Binding ElementName=cbxfontsize, Path=Text, Mode=TwoWay}" Text="{Binding reciept_footer,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                <RichTextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.85" />
                </RichTextBox.Background>
            </toolkit:RichTextBox>-->
            <TextBlock Margin="8" Foreground="White" Text="Hi there" />
            <TextBlock Margin="8,0" Foreground="White">
                <Run />
            </TextBlock>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="1"
                    Visibility="{Binding ElementName=rbtnStylePrinter, Path=IsChecked, Converter={StaticResource Bool2Visibility}}"
                    HorizontalAlignment="Right">
            <Label Content="{lex:Loc StylePrinter}" Style="{StaticResource H2}" Foreground="White" />
            <StackPanel Orientation="Horizontal">
                <StackPanel Margin="2,5,5,5">
                    <Label Content="{lex:Loc FontSize}" Style="{StaticResource input_label}" Foreground="White" />
                    <ComboBox Width="128" />
                </StackPanel>
            </StackPanel>

            <Label Content="{lex:Loc Template}" Style="{StaticResource input_label}" Foreground="White" />
            <RichTextBox  Width="256" Margin="8,0" MinHeight="128" FontFamily="Courier New">
                <RichTextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.85" />
                </RichTextBox.Background>
            </RichTextBox>
            <TextBlock Margin="8" Foreground="White" Text="Hi there" />
            <TextBlock Margin="8,0" Foreground="White">
                <Run />
            </TextBlock>
        </StackPanel>

        <cntrl:toolBar x:Name="toolBar" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                       btnEdit_Click="toolBar_btnEdit_Click" btnSearch_Click="toolBar_btnSearch_Click"
                       btnSave_Click="toolBar_btnSave_Click"
                       btnDelete_Click="toolBar_btnDelete_Click"
                       btnCancel_Click="toolBar_btnCancel_Click"
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                       btnNew_Click="toolBar_btnNew_Click" Grid.ColumnSpan="2" />
    </Grid>
</Page>
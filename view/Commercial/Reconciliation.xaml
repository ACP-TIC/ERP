<Page x:Class="Cognitivo.Commercial.Reconciliation" x:Name="this"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:entity="clr-namespace:entity;assembly=entity"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
	  xmlns:customcmd="clr-namespace:Cognitivo.Class"
	  xmlns:lex="http://wpflocalizeextension.codeplex.com"
	  xmlns:converter="clr-namespace:Cognitivo.Converters"
		  lex:LocalizeDictionary.DesignCulture="en-US"
		  lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo"
		  lex:ResxLocalizationProvider.DefaultDictionary="local"
	  mc:Ignorable="d"
	  d:DesignHeight="600" d:DesignWidth="800"
	  Title="Reconciliation" Loaded="Page_Loaded">
    <!--<Page.CommandBindings>
		<CommandBinding x:Name="ApproveCommand" Command="customcmd:CustomCommands.Approve"
						CanExecute="ApproveCommand_CanExecute"
						Executed="ApproveCommand_Executed" />
		<CommandBinding x:Name="AnullCommand" Command="customcmd:CustomCommands.Anull"
						CanExecute="AnullCommand_CanExecute"
						Executed="AnullCommand_Executed" />
		<CommandBinding x:Name="PendingCommand" Command="customcmd:CustomCommands.Pending"
						CanExecute="PendingCommand_CanExecute"
						Executed="PendingCommand_Executed" />
	</Page.CommandBindings>-->
    <Page.Resources>
        <converter:Status2ColorConverter x:Key="Status2ColorConverter" />
        <CollectionViewSource x:Key="app_accountViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_account}, CreateList=True}" />
        <CollectionViewSource x:Key="app_accountapp_account_detailViewSource" Source="{Binding app_account_detail, Source={StaticResource app_accountViewSource}}" />
        <CollectionViewSource x:Key="app_accountapp_account_detailApproveViewSource" Source="{Binding app_account_detail, Source={StaticResource app_accountViewSource}}" />
        <CollectionViewSource x:Key="app_accountapp_account_detailAnulledViewSource" Source="{Binding app_account_detail, Source={StaticResource app_accountViewSource}}" />
        
    </Page.Resources>
    <Grid Background="{StaticResource winBackground}" DataContext="{StaticResource app_accountViewSource}">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <ListBox x:Name="sales_invoiceDataGrid" Style="{StaticResource nav_List}"
				 ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionChanged="dgvAccounts_SelectionChanged"
							 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
							 ItemContainerStyle="{StaticResource nav_ListSelection}"
							 ItemsSource="{Binding}" Grid.Row="1">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling"
								   recordSecondaryName="{Binding code, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   recordName="{Binding name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid Grid.Row="1" Grid.Column="1" Background="Azure">
            <Grid Grid.Column="2">
                <Label Content="System" Style="{StaticResource H2}" />
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <Label Content="Balance" Style="{StaticResource H2}" HorizontalAlignment="Right" />
                    <Label Content="{Binding Balance,StringFormat=N2, ElementName=this, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource H2}"  HorizontalAlignment="Right" />
                </StackPanel>
                
                <TabControl  Background="WhiteSmoke"  Margin="0,50,0,0">
                    <TabItem Header="Pending">
                        <DataGrid x:Name="dgvAccountDetail" Style="{StaticResource detail_Datagrid}"
						  ItemsSource="{Binding Source={StaticResource app_accountapp_account_detailViewSource}}">
                          
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Header="" Width="32"
											ElementStyle="{DynamicResource MetroDataGridCheckBox}"
											EditingElementStyle="{DynamicResource MetroDataGridCheckBox}" />
                                <DataGridTemplateColumn Header="{lex:Loc Cognitivo:local:Date}" Width="Auto">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate="{Binding trans_date, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Cognitivo:local:PaymentType}" Binding="{Binding payment_type.name, Mode=OneWay}" />
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Cognitivo:local:PaymentTypeNumber}" Binding="{Binding payment_detail.payment_type_number, Mode=OneWay}" />

                                <!-- Balance -->
                                <DataGridTemplateColumn  Header="{lex:Loc Cognitivo:local:Debit}" Width="Auto" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding debit, StringFormat=N2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Header="{lex:Loc Cognitivo:local:Credit}" Width="Auto" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding credit, StringFormat=N2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Match -->
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Currency}" Binding="{Binding app_currencyfx.app_currency.code, Mode=OneWay}" />
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Comment}" Binding="{Binding comment, Mode=OneWay}" />
                                <DataGridTextColumn IsReadOnly="True" Binding="{Binding external_value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Approved">
                        <DataGrid x:Name="dgvAccountDetailApproved" Style="{StaticResource detail_Datagrid}"
						  ItemsSource="{Binding Source={StaticResource app_accountapp_account_detailApproveViewSource}}">
                          
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Header="" Width="32"
											ElementStyle="{DynamicResource MetroDataGridCheckBox}"
											EditingElementStyle="{DynamicResource MetroDataGridCheckBox}" />
                                <DataGridTemplateColumn Header="{lex:Loc Cognitivo:local:Date}" Width="Auto">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate="{Binding trans_date, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Cognitivo:local:PaymentType}" Binding="{Binding payment_type.name, Mode=OneWay}" />
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Cognitivo:local:PaymentTypeNumber}" Binding="{Binding payment_detail.payment_type_number, Mode=OneWay}" />

                                <!-- Balance -->
                                <DataGridTemplateColumn  Header="{lex:Loc Cognitivo:local:Debit}" Width="Auto" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding debit, StringFormat=N2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Header="{lex:Loc Cognitivo:local:Credit}" Width="Auto" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding credit, StringFormat=N2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <!-- Match -->
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Currency}" Binding="{Binding app_currencyfx.app_currency.code, Mode=OneWay}" />
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Comment}" Binding="{Binding comment, Mode=OneWay}" />
                                <DataGridTextColumn IsReadOnly="True" Binding="{Binding external_value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Anulled">
                        <DataGrid x:Name="dgvAccountDetailAnulled" Style="{StaticResource detail_Datagrid}"
						  ItemsSource="{Binding Source={StaticResource app_accountapp_account_detailAnulledViewSource}}">
                           
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Header="" Width="32"
											ElementStyle="{DynamicResource MetroDataGridCheckBox}"
											EditingElementStyle="{DynamicResource MetroDataGridCheckBox}" />
                                <DataGridTemplateColumn Header="{lex:Loc Cognitivo:local:Date}" Width="Auto">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate="{Binding trans_date, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Cognitivo:local:PaymentType}" Binding="{Binding payment_type.name, Mode=OneWay}" />
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Cognitivo:local:PaymentTypeNumber}" Binding="{Binding payment_detail.payment_type_number, Mode=OneWay}" />

                                <!-- Balance -->
                                <DataGridTemplateColumn  Header="{lex:Loc Cognitivo:local:Debit}" Width="Auto" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding debit, StringFormat=N2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Header="{lex:Loc Cognitivo:local:Credit}" Width="Auto" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding credit, StringFormat=N2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <!-- Match -->
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Currency}" Binding="{Binding app_currencyfx.app_currency.code, Mode=OneWay}" />
                                <DataGridTextColumn IsReadOnly="True" Header="{lex:Loc Comment}" Binding="{Binding comment, Mode=OneWay}" />
                                <DataGridTextColumn IsReadOnly="True" Binding="{Binding external_value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                </TabControl>
            </Grid>
        </Grid>
        <!--<cntrl:toolBar x:Name="toolBar" appName="Reconciliation"
					   btnApprove_Click="toolBar_btnApprove_Click"
					   btnAnull_Click="toolBar_btnAnull_Click" State="{Binding State,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
					   Status="{Binding status,Source={StaticResource app_accountapp_account_detailViewSource},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
					   VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.RowSpan="2" />-->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Center"  DataContext="{Binding SelectedItem_, ElementName=treeProject}">

            <cntrl:toolIcon x:Name="btnapprove" Click="toolBar_btnApprove_Click" imgSource="j" icoName="{lex:Loc Approve}" VerticalAlignment="Center" />
            <cntrl:toolIcon x:Name="btnanull" Click="toolBar_btnAnull_Click" imgSource="k" icoName="Rechazar" VerticalAlignment="Center" />
        </StackPanel>
    </Grid>
</Page>
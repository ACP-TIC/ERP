<Page x:Class="Cognitivo.Commercial.Contact" Title="{lex:Loc Contacts}" 
      x:Name="pageContact"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:lex="http://wpflocalizeextension.codeplex.com" 
        lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
        lex:ResxLocalizationProvider.DefaultDictionary="local"
        lex:LocalizeDictionary.DesignCulture="en-US" 
          xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
          xmlns:cntrls="clr-namespace:cntrl.Controls;assembly=cntrl"
          xmlns:customcmd="clr-namespace:Cognitivo.Class"
          xmlns:Controls="clr-namespace:MahApps.Metro;assembly=MahApps.Metro"
          xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
          xmlns:converter="clr-namespace:Cognitivo.Converters"
          xmlns:entity="clr-namespace:entity;assembly=entity"
          mc:Ignorable="d" MinHeight="500" MinWidth="800"
	      Loaded="Page_Loaded">
    <Page.Resources>
        <converter:InitialsConverter x:Key="InitialsConverter"/>
        <converter:LowerCaseConverter x:Key="LowerCaseConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <CollectionViewSource x:Key="contactViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:contact}, CreateList=True}"/>
        <CollectionViewSource x:Key="contactParentViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:contact}, CreateList=True}"/>
        <CollectionViewSource x:Key="contactRoleViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:contact_role}, CreateList=True}"/>
        <CollectionViewSource x:Key="appContractViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_contract}, CreateList=True}"/>
        <CollectionViewSource x:Key="appCostCenterViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_cost_center}, CreateList=True}"/>
        <CollectionViewSource x:Key="itemPriceListViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_price_list}, CreateList=True}"/>
        <CollectionViewSource x:Key="salesRepViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:sales_rep}, CreateList=True}"/>
        <CollectionViewSource x:Key="salesRepViewSourceCollector" d:DesignSource="{d:DesignInstance {x:Type entity:sales_rep}, CreateList=True}"/>
        <CollectionViewSource x:Key="app_currencyViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_currency}, CreateList=True}"/>
        <CollectionViewSource x:Key="itemViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item}, CreateList=True}"/>
        <CollectionViewSource x:Key="contactcontact_tag_detailViewSource" Source="{Binding contact_tag_detail, Source={StaticResource contactViewSource}}"/>
        <CollectionViewSource x:Key="contactcontact_subscriptionViewSource" Source="{Binding contact_subscription, Source={StaticResource contactViewSource}}"/>
        <CollectionViewSource x:Key="contactcontact_field_valueViewSource" Source="{Binding contact_field_value, Source={StaticResource contactViewSource}}"/>
        <CollectionViewSource x:Key="app_fieldViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_field}, CreateList=True}"/>
        <CollectionViewSource x:Key="contact_tagViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:contact_tag}, CreateList=True}"/>
        <CollectionViewSource x:Key="contactChildListViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:contact}, CreateList=True}"/>
        <CollectionViewSource x:Key="bankViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_bank}, CreateList=True}"/>
    </Page.Resources>
    <Page.CommandBindings>
        <CommandBinding x:Name="DeleteCommand" Command="customcmd:CustomCommands.Delete" CanExecute="DeleteCommand_CanExecute" Executed="DeleteCommand_Executed"/>
    </Page.CommandBindings>
    <Grid DataContext="{StaticResource contactViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ListBox Background="{DynamicResource AccentColor_Brush}" x:Name="listContacts"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionChanged="listContacts_SelectionChanged"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="1"
                 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
                 ItemsSource="{Binding Source={StaticResource contactViewSource}, IsAsync=True}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordCode="{Binding gov_code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                   recordName="{Binding name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                   recordSecondaryName="{Binding alias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
       
        <StackPanel Grid.Column="1" Grid.Row="1" Background="White" Orientation="Horizontal" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
           
            <Border CornerRadius="64" Background="WhiteSmoke"
                    Width="100" Height="100" Margin="24"
                    HorizontalAlignment="Center" VerticalAlignment="Top">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="0" Opacity="1"/>
                </Border.Effect>
                <TextBlock Text="{Binding name, Converter={StaticResource InitialsConverter}, ElementName=tbxContact}" 
					       FontSize="75" FontWeight="Light" HorizontalAlignment="Center"/>
            </Border>
            <StackPanel VerticalAlignment="Top" Margin="0,32">
                <Label Content="{Binding name}" Style="{StaticResource H1}"/>
                <Label Content="{Binding alias}" Style="{StaticResource H2}"/>
            </StackPanel>
        </StackPanel>

        <TabControl Custom:TabControlHelper.IsUnderlined="True" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch"
                    SelectedIndex="0" Margin="0,128,0,0" >
            <TabItem Header="{lex:Loc Information}">
                <WrapPanel Orientation="Horizontal" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="16,0" HorizontalAlignment="Center" Width="264"
                               IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="{lex:Loc General}" Style="{StaticResource H2}"/>
                        <Label Content="{lex:Loc Name}" 
                    		   Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtName" Style="{StaticResource input_textbox}" 
                    		     Text="{Binding name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" />
                        <Label Content="{lex:Loc Alias}" 
                    		   Style="{StaticResource input_label}"/>
                        <TextBox Style="{StaticResource input_textbox}" 
                    		     Text="{Binding alias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" />
                        <Label Content="{lex:Loc GovernmentID}" 
                    		   Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtGovId" Style="{StaticResource input_textbox}" 
                    		     Text="{Binding gov_code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" />
                        <Label Content="{lex:Loc Code}" Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtCode" Style="{StaticResource input_textbox}"
                    		     Text="{Binding code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" />
                        <CheckBox x:Name="chbxIsPerson" Content="Is Person?" Style="{StaticResource input_checkbox}"
                    		      IsChecked="{Binding is_person, FallbackValue=False}"/>
                        <StackPanel Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibility}, ElementName=chbxIsPerson}">
                            <Label Content="{lex:Loc Gender}" 
                    			Style="{StaticResource input_label}"/>
                            <ComboBox Style="{StaticResource input_combobox}" 
                    			x:Name="cbxGender"
                    			SelectedValue="{Binding gender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Content="{lex:Loc DateofBirth}" 
                    			Style="{StaticResource input_label}"/>
                            <DatePicker  Style="{StaticResource input_datepicker}" 
                    			SelectedDate="{Binding date_birth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}" />
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Margin="16,0" HorizontalAlignment="Center" Width="264" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="{lex:Loc Contact}" Style="{StaticResource H2}"/>
                        <Label Content="{lex:Loc Telephone}" Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtTelephone" Style="{StaticResource input_textbox}"
                                 Text="{Binding telephone, Mode=TwoWay, ValidatesOnDataErrors=true, UpdateSourceTrigger=PropertyChanged}" />
                        <Label Content="{lex:Loc Email}" Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtEmail" Style="{StaticResource input_textbox}"
                                 Text="{Binding email, Mode=TwoWay, ValidatesOnDataErrors=true, UpdateSourceTrigger=PropertyChanged}" />
                        <Label Content="{lex:Loc Address}" Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtAddress"
                                 Style="{StaticResource input_textbox}"
                                 Text="{Binding address, Mode=TwoWay, ValidatesOnDataErrors=true, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="{lex:Loc Geography}" Style="{StaticResource input_label}"/>
                        <cntrls:SmartBox_Geography x:Name="smtgeo" Text="{Binding app_geography.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Select="SmartBox_Geography_Select" />
                    </StackPanel>
                    
                    <StackPanel Margin="16,0" HorizontalAlignment="Center" Width="264" 
                                IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="{lex:Loc Tags}"  Style="{StaticResource input_label}"/>
                        <cntrl:SearchableTextbox x:Name="cbxTag" Margin="2" HorizontalAlignment="Center" 
                                                 CollectionViewSource="{StaticResource contact_tagViewSource}"
                                                 focusGrid="True" Height="27" Width="256"
                                                 KeyDown="cbxTag_KeyDown" MouseDoubleClick="cbxTag_MouseDoubleClick">
                            <cntrl:SearchableTextbox.Columns>
                                <cntrl:SmartBoxColumn Header="{lex:Loc Cognitivo:local:Tags}" Width="Auto" ForProperty="name" 
                                                          Binding="{Binding name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EnableSearch="True"/>
                            </cntrl:SearchableTextbox.Columns>
                        </cntrl:SearchableTextbox>
                        <DataGrid x:Name="contact_tag_detailDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" Margin="4"
                                      HeadersVisibility="None"
                                      ItemsSource="{Binding Source={StaticResource contactcontact_tag_detailViewSource}}" RowDetailsVisibilityMode="Collapsed">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding contact_tag.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    IsReadOnly="True" Width="*"/>
                                <DataGridTemplateColumn Width="26" Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="customcmd:CustomCommands.Delete"
                                                    Style="{StaticResource btnDeleteChildStyle}"
                                                    CommandParameter="{Binding}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                   
                </WrapPanel>
            </TabItem>
            <TabItem Header="{lex:Loc Relationship}" HorizontalAlignment="Right">
                <StackPanel  IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                    <Label Content="{lex:Loc ContactRole}" Style="{StaticResource H2}"/>
                    <Label Content="{lex:Loc ContactRole}" Style="{StaticResource input_label}"/>
                    <ComboBox x:Name="cbxContactRole" Style="{StaticResource input_combobox}"
                              DisplayMemberPath="name" SelectedValuePath="id_contact_role"
                              ItemsSource="{Binding Source={StaticResource contactRoleViewSource}}" 
                              SelectedValue="{Binding id_contact_role, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                              SelectionChanged="cbxContactRole_SelectionChanged"/>
                    <Label Content="{lex:Loc RelatedTo}" Style="{StaticResource input_label}"/>
                    <cntrls:SmartBox_Contact x:Name="cbxRelation" Margin="4" Width="256" HorizontalAlignment="Left" Select="cbxRelation_Select"
                                             Get_Customers="True" Get_Suppliers="True"
                                             Text="{Binding parent.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <!--<ComboBox x:Name="cbxRelation" Style="{StaticResource input_combobox}"
                              ItemsSource="{Binding Source={StaticResource contactParentViewSource}}" 
                              DisplayMemberPath="name" SelectedValuePath="id_contact" SelectionChanged="cbxRelation_SelectionChanged"
                              SelectedItem="{Binding /parent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              IsSynchronizedWithCurrentItem="True"/>-->
                    <Label Content="{lex:Loc Relationship}" Style="{StaticResource H2}"/>
                    <DataGrid Background="Transparent" ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="4,6,8,6" IsReadOnly="True" 
                              ItemsSource="{Binding Source={StaticResource contactChildListViewSource}}" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Code}" Width="Auto" Binding="{Binding code, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Name}" Width="*" Binding="{Binding name, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:GovernmentID}" Width="Auto" Binding="{Binding gov_code, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:ContactRole}" Width="Auto" Binding="{Binding contact_role.name, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabFinance" Header="{lex:Loc Finance}">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <StackPanel>
                            <Label Content="{lex:Loc Behavior}" Style="{StaticResource H2}"/>
                            <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2" Margin="3" 
                                            DataContext="{StaticResource contactViewSource}">
                                <CheckBox x:Name="chbxCustomer" Content="{lex:Loc Customer}" Margin="3" 
                                  IsChecked="{Binding is_customer, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                <CheckBox x:Name="chbxSupplier" Content="{lex:Loc Supplier}" Margin="3" 
                                  IsChecked="{Binding is_supplier, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                <CheckBox x:Name="is_sales_repCheckBox" 
                                          Content="{lex:Loc SalesRepresentative}" 
                                          HorizontalAlignment="Left" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibility}, ElementName=chbxCustomer}"
                                  IsChecked="{Binding is_sales_rep, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="3"/>
                            </StackPanel>
                        </StackPanel>
                        <Label Content="{lex:Loc Invoice}" Style="{StaticResource H2}"/>
                        <Label Content="{lex:Loc PriceList}" Style="{StaticResource input_label}"
                                   Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibility}, ElementName=chbxCustomer}"/>
                        <ComboBox x:Name="cbPriceList" Style="{StaticResource input_combobox}" 
                                      Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibility}, ElementName=chbxCustomer}"
                                      ItemsSource="{Binding Source={StaticResource itemPriceListViewSource}}" 
                                      DisplayMemberPath="name" SelectedValuePath="id_price_list" 
                                      SelectedValue="{Binding id_price_list, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <Label Content="Cost Center" 
                                   Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibility}, ElementName=chbxSupplier}"
                                   Style="{StaticResource input_label}"/>
                        <ComboBox x:Name="cbCostCenter" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibility}, ElementName=chbxSupplier}"
                                      Style="{StaticResource input_combobox}" 
                                      ItemsSource="{Binding Source={StaticResource appCostCenterViewSource}}" 
                                      DisplayMemberPath="name" SelectedValuePath="id_cost_center" 
                                      SelectedValue="{Binding id_cost_center, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <Label Content="{lex:Loc Contract}" Style="{StaticResource input_label}"/>
                        <ComboBox DisplayMemberPath="name" SelectedValuePath="id_contract"
                                      SelectedValue="{Binding id_contract, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      ItemsSource="{Binding Source={StaticResource appContractViewSource}}" Style="{StaticResource input_combobox}"/>
                        <Label Content="{lex:Loc CreditLimit}" Style="{StaticResource input_label}"/>
                        <TextBox x:Name="txtCreditLimit" Style="{StaticResource input_textbox}"
                                     Text="{Binding credit_limit, Mode=TwoWay,StringFormat={}{0:N0}, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        <Label Content="{lex:Loc Currency}" Style="{StaticResource input_label}"/>
                        <ComboBox ItemsSource="{Binding Source={StaticResource app_currencyViewSource}}" DisplayMemberPath="name" SelectedValuePath="id_currency"
                                      SelectedValue="{Binding id_currency, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      Style="{StaticResource input_combobox}"/>
                        <Label Content="{lex:Loc Salesman}" Style="{StaticResource input_label}"/>
                        <ComboBox ItemsSource="{Binding Source={StaticResource salesRepViewSource}}" DisplayMemberPath="name" SelectedValuePath="id_sales_rep"
                                      SelectedValue="{Binding id_sales_rep, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      Style="{StaticResource input_combobox}"/>
                        <Label Content="{lex:Loc Bank}" Style="{StaticResource input_label}"/>
                        <ComboBox ItemsSource="{Binding Source={StaticResource bankViewSource}}" DisplayMemberPath="name" SelectedValuePath="id_bank"
                                      SelectedValue="{Binding id_bank, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      Style="{StaticResource input_combobox}"/>
                        <Label Content="{lex:Loc Payment}" Style="{StaticResource H2}"/>
                        <Label Content="{lex:Loc CollectionAgent}" Style="{StaticResource input_label}"/>
                        <ComboBox ItemsSource="{Binding Source={StaticResource salesRepViewSourceCollector}}" DisplayMemberPath="name" SelectedValuePath="id_sales_rep"
                                      SelectedValue="{Binding id_collection_rep, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      Style="{StaticResource input_combobox}"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem x:Name="tabSubscription" Header="{lex:Loc Subscription}">
                <StackPanel>
                    <cntrls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="item_Select"
                                                 IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}"/>
                    <Label Content="{lex:Loc Subscription}" Style="{StaticResource H2}"/>
                    <DataGrid x:Name="contactcontact_subscriptionDataGrid" AutoGenerateColumns="False" Margin="8"
                                IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}"
                                  EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource contactcontact_subscriptionViewSource}}" 
                                  RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="itemcolumn" 
                                                    Binding="{Binding item.name,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Header="item" 
                                                    Width="SizeToHeader"/>
                            <DataGridComboBoxColumn x:Name="contractCombo" Header="Contract" Width="SizeToHeader"
                                                    ItemsSource="{Binding Source={StaticResource appContractViewSource}}"
                                                    DisplayMemberPath="name" SelectedValuePath="id_contract" SelectedValueBinding="{Binding id_contract,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                            <DataGridTextColumn x:Name="bill_cycleColumn" 
                                                    Binding="{Binding bill_cycle,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Header="BillCycle" 
                                                    Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="bill_onColumn" Binding="{Binding bill_on,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Header="BillOn" Width="SizeToHeader"/>
                            <DataGridTemplateColumn x:Name="start_dateColumn" Header="StartDate" Width="100">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding start_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="end_dateColumn" Header="EndDate" Width="100">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding end_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridCheckBoxColumn x:Name="is_activeColumn" Binding="{Binding is_active,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Header="Active" Width="SizeToHeader"/>
                            <DataGridTemplateColumn Width="25">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" Style="{StaticResource btnDeleteChildStyle}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </TabItem>
        </TabControl>

        <cntrl:toolBar x:Name="toolBar" VerticalAlignment="Top" Grid.ColumnSpan="2" appName="Contact"
			           btnNew_Click="toolBar_btnNew_Click" 
                       btnDelete_Click="toolBar_btnDelete_Click"
			           btnEdit_Click="toolBar_btnEdit_Click" 
                       btnSave_Click="toolBar_btnSave_Click" 
                       btnCancel_Click="toolBar_btnCancel_Click" 
                       btnSearch_Click="toolBar_btnSearch_Click"
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        <cntrl:toolIcon imgSource="p" Click="toolIcon_Click" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="1"/>
    </Grid>
</Page>
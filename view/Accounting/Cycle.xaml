<Page x:Class="Cognitivo.Accounting.Cycle" Title="Period" x:Name="cycle"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl" 
      xmlns:entity="clr-namespace:entity;assembly=entity"
      xmlns:converter="clr-namespace:Cognitivo.Converters"
       xmlns:lex="http://wpflocalizeextension.codeplex.com" 
        lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
        lex:ResxLocalizationProvider.DefaultDictionary="local"
        lex:LocalizeDictionary.DesignCulture="en-US"    
      Loaded="Page_Loaded"
      
      mc:Ignorable="d" d:DesignHeight="600" d:DesignWidth="800">
    <Page.Resources>
        <converter:TrueToFalseConverter x:Key="TrueFalse"/>
        <CollectionViewSource x:Key="accounting_cycleViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:accounting_cycle}, CreateList=True}"/>
        <CollectionViewSource x:Key="accounting_chartViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:accounting_chart}, CreateList=True}"/>
        <CollectionViewSource x:Key="accounting_cycleaccounting_budgetViewSource" Source="{Binding accounting_budget, Source={StaticResource accounting_cycleViewSource}}"/>
    </Page.Resources>
    <Grid DataContext="{StaticResource accounting_cycleViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <Grid Background="White" Grid.Row="1" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="30,9,0,0" IsEnabled="{Binding ElementName=cycle, Path=SetIsEnable, UpdateSourceTrigger=PropertyChanged}">

                <Label Content="{lex:Loc  Name}" Style="{StaticResource input_label}"/>
                <TextBox x:Name="txt_name" Style="{StaticResource input_textbox}" TabIndex="0"
                         Text="{Binding name, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>

                <Label Content="{lex:Loc  StartDate}" Style="{StaticResource input_label}"/>
                <DatePicker  Style="{StaticResource input_datepicker}" 
                            SelectedDate="{Binding start_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>

                <Label Content="{lex:Loc  EndDate}" Style="{StaticResource input_label}"/>
                <DatePicker Style="{StaticResource input_datepicker}"
                            SelectedDate="{Binding end_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            </StackPanel>

            <StackPanel Background="WhiteSmoke" Grid.Column="1" Grid.RowSpan="2">
                <CheckBox Name="chbxActive" Content="{lex:Loc Active}" IsEnabled="False" Margin="20"
                          IsChecked="{Binding is_active, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                <TextBlock Text="You can create multiple periods, but only one of them can be active at a time." TextWrapping="Wrap" Style="{StaticResource text_Instructions}"/>
                <Button Content="{lex:Loc Start}" Margin="8" Click="btnStart_Click"/>
                <Button Content="{lex:Loc End}" Margin="8" Click="btnEnd_Click"/>
                <Rectangle Height="1" Margin="5" Fill="Silver"/>
            </StackPanel>


            <TabControl Grid.ColumnSpan="2" Margin="0,186,0,0" Grid.RowSpan="2">

                <TabItem Header="{lex:Loc Budget}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <!--<DataGrid Margin="10"/>-->

                        <StackPanel Grid.Column="1" Grid.Row="1">
                            <TextBlock Text="Budgets are not necesary, but useful for a proper financial analysis." Style="{StaticResource text_Instructions}"/>
                            <Button Content="{lex:Loc Update}" Style="{StaticResource btn_green}" Margin="8" Click="btnBudget_Click"/>
                        </StackPanel>
                        <DataGrid x:Name="accounting_budgetDataGrid" Style="{StaticResource detail_Datagrid}"
                                  IsReadOnly="{Binding ElementName=cycle, Path=SetIsEnable, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TrueFalse}}"
                                  AutoGenerateColumns="False" EnableRowVirtualization="True" 
                                  ItemsSource="{Binding Source={StaticResource accounting_cycleaccounting_budgetViewSource}}" 
                                  RowDetailsVisibilityMode="VisibleWhenSelected">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn Header="Account" Width="*" ItemsSource="{Binding Source={StaticResource accounting_chartViewSource}}"
                                                        DisplayMemberPath="name" SelectedValuePath="id_chart" 
                                                        SelectedValueBinding="{Binding id_chart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                <DataGridTextColumn x:Name="budgetColumn" Binding="{Binding budget,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Header="budget" Width="100"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="{lex:Loc Balance}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <DataGrid x:Name="CurrentBalanceDataGrid" Margin="10" IsReadOnly="True"/>
                        <StackPanel Grid.Column="1" Grid.Row="1">
                            <TextBlock Text="Click here to generate the Current Balance Statement for this Period." Style="{StaticResource text_Instructions}"/>
                            <Button Content="{lex:Loc Calculate}" Style="{StaticResource btn_green}" Margin="8" Click="btnCalculate_Click"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>

        <cntrl:toolBar x:Name="toolBar" Grid.ColumnSpan="2" VerticalAlignment="Top"
			btnNew_Click="toolBar_btnNew_Click"
			btnEdit_Click="toolBar_btnEdit_Click"
			btnDelete_Click="toolBar_btnDelete_Click"
			btnSave_Click="toolBar_btnSave_Click"
			btnCancel_Click="toolBar_btnCancel_Click" 
            State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" appName="FiscalPeriod"/>
        <ListBox x:Name="accounting_cycleDataGrid"  Background="{StaticResource AccentColor_Brush}"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" 
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
                 ItemsSource="{Binding}" Grid.RowSpan="2" Grid.Row="1">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordName="{Binding name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    </cntrl:navList>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Page>

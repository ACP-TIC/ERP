<Page x:Name="chartOfAccounts"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
      xmlns:Panels="clr-namespace:cntrl.Panels;assembly=cntrl" 
      xmlns:data="clr-namespace:entity;assembly=entity"
      xmlns:converter="clr-namespace:Cognitivo.Converters"
      xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns:lex="http://wpflocalizeextension.codeplex.com" 
      xmlns:entity="clr-namespace:entity;assembly=entity" 
      x:Class="Cognitivo.Accounting.ChartOfAccounts" Title="Account" 
      lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
      lex:ResxLocalizationProvider.DefaultDictionary="local"
      lex:LocalizeDictionary.DesignCulture="en-US"       
      mc:Ignorable="d" d:DesignHeight="800" d:DesignWidth="800" Loaded="Page_Loaded">
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="Bool2Visibility"/>
        <converter:AccountChartGroupAsset x:Key="AccountChartGroupAsset"/>
        <converter:AccountChartGroupEquity x:Key="AccountChartGroupEquity"/>
        <converter:AccountChartGroupLiabillity x:Key="AccountChartGroupLiabillity"/>
        <converter:AccountingChartGroupExpense x:Key="AccountingChartGroupExpense"/>
        <converter:AccountingChartGroupIncome x:Key="AccountingChartGroupIncome"/>
        <converter:ChartOfAccountSelectionConverter x:Key="SelectedAccountConverter"/>
        <converter:AccountingChart2BooleanConverter x:Key="AccountingChart2BooleanConverter"/>
        <converter:TrueToFalseConverter x:Key="TrueFalse"/>
        <CollectionViewSource x:Key="accounting_chartViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:accounting_chart}, CreateList=True}"/>
        <CollectionViewSource x:Key="accounting_chartParentViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:accounting_chart}, CreateList=True}"/>
        <CollectionViewSource x:Key="app_accountBankViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_account}, CreateList=True}"/>
        <CollectionViewSource x:Key="contactCustViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:contact}, CreateList=True}"/>
        <CollectionViewSource x:Key="item_asset_groupViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_asset_group}, CreateList=True}"/>
        <CollectionViewSource x:Key="contactSupViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:contact}, CreateList=True}"/>
        <CollectionViewSource x:Key="app_vatViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_vat}, CreateList=True}"/>
        <CollectionViewSource x:Key="app_cost_centerViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_cost_center}, CreateList=True}"/>
        <CollectionViewSource x:Key="itemViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item}, CreateList=True}"/>
        <CollectionViewSource x:Key="item_tagViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_tag}, CreateList=True}"/>
    </Page.Resources>

    <Grid Background="White" DataContext="{StaticResource accounting_chartViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid x:Name="crud_modal" Background="#7FC0C0C0" Visibility="Hidden" Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5"/>

        <!-- Navigation -->
        <!--<ListBox Background="{StaticResource AccentColor_Brush}" x:Name="chartdatagrid"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="1"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionChanged="chartdatagrid_SelectionChanged"
                 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
                 ItemsSource="{Binding Source={StaticResource accounting_chartViewSource},IsAsync=True}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordCode="{Binding code,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                   recordName="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>-->
        <Grid Grid.Row="1">
            <Grid.Resources>
                <HierarchicalDataTemplate DataType="{x:Type data:accounting_chart}" 
                                          ItemsSource="{Binding child, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <Panels:pnl_TreeChart IsChecked="{Binding is_selected, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                          Code="{Binding code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"
                                          ChartName="{Binding name, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"/>
                </HierarchicalDataTemplate>
            </Grid.Resources>
            <cntrl:ExtendedTreeView x:Name="treeProject" ItemsSource="{Binding Source={StaticResource accounting_chartViewSource}}"  
                                        VirtualizingPanel.VirtualizationMode="Standard" VirtualizingPanel.IsVirtualizing="True" 
                                        ScrollViewer.CanContentScroll="True">
                <TreeView.ItemsPanel>
                    <ItemsPanelTemplate >
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </TreeView.ItemsPanel>
            </cntrl:ExtendedTreeView>
        </Grid>
  

        <TabControl Grid.Column="1" Grid.Row="1">
            <TabItem Header="{lex:Loc ChartofAccount}">
                <StackPanel Background="White" Grid.Column="1" Grid.Row="1" Margin="16" DataContext="{Binding SelectedItem_, ElementName=treeProject,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{Binding state, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay, Converter={StaticResource AccountingChart2BooleanConverter}}" >

                    <Label Content="{lex:Loc Name}" Style="{StaticResource input_label}"/>
                    <TextBox x:Name="txtName" TabIndex="0" Style="{StaticResource input_textbox}"
					     Text="{Binding name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <Label Content="{lex:Loc Code}" Style="{StaticResource input_label}"/>
                    <TextBox Style="{StaticResource input_textbox}" TabIndex="1"
					     Text="{Binding code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                    <!-- Reference to same ChartOfAccounts -->
                    <Label Content="{lex:Loc Type}" Style="{StaticResource input_label}"/>
                    <ComboBox Name="cbxChartType"  Grid.Column="1" Style="{StaticResource input_combobox}"
                          SelectedValue="{Binding chart_type, Mode=TwoWay,
                                                  ValidatesOnExceptions=True, NotifyOnValidationError=True, 
                                                  UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <TextBlock Style="{StaticResource text_Instructions}"
					       Text="Not all Accounts are used for Automatic Accounting, but those that are should be check to integrate those accounts to the movements that occur in the other areas of your company."/>
                    <CheckBox x:Name="chbxAutomatic" Style="{StaticResource input_checkbox}"
					  Content="{lex:Loc AutomaticAccounting}" IsChecked="{Binding can_transact, FallbackValue=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                    <StackPanel Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=chbxAutomatic}">
                        <Label Content="{lex:Loc Integration}" Style="{StaticResource H2}"/>
                        <TextBlock Text="Select the data type that this account plan represents." Style="{StaticResource text_Instructions}" Margin="5,5,0,5"/>

                        <Label Content="Sub Type" Style="{StaticResource input_label}"/>
                        <ComboBox Name="cbxChartSubType" Grid.Column="1" Style="{StaticResource input_combobox}" IsEnabled="False"
                              SelectionChanged="cbxChartSubType_SelectionChanged"
                              SelectedValue="{Binding chartsub_type, Mode=TwoWay,
                                                  ValidatesOnExceptions=True, NotifyOnValidationError=True, 
                                                  UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                        <!-- Asset -->

                        <StackPanel Visibility="{Binding SelectedValue, Converter={StaticResource AccountChartGroupAsset}, ElementName=cbxChartType}">
                            <Label Content="{lex:Loc Assets}" Style="{StaticResource H3}"/>
                            <!-- All Accounts (Bank or Terminal) -->
                            <RadioButton x:Name="rbtnCash" Content="{lex:Loc Accounts}" Style="{StaticResource input_radiobutton}" Margin="5" 
                                         Tag="2" 
                                         Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>
                            <StackPanel Orientation="Horizontal" Margin="23,0" Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnCash}" >
                                <ComboBox Style="{StaticResource input_combobox}" VerticalAlignment="Center" 
                                      IsEnabled="{Binding Path=IsChecked, ElementName=chkGenericAccount, Converter={StaticResource TrueFalse}}"
                                      ItemsSource="{Binding Source={StaticResource app_accountBankViewSource}}"
                                      SelectedValuePath="id_account" DisplayMemberPath="name"
                                      SelectedValue="{Binding id_account, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                                <Label Content="or" Style="{StaticResource input_label}" VerticalAlignment="Center"/>
                                <CheckBox x:Name="chkGenericAccount" Content="Generic" Style="{StaticResource input_checkbox}"
                                      IsChecked="{Binding is_generic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                            <!-- This is for Customers -->
                            <RadioButton x:Name="rbtnAccReceivable" Content="{lex:Loc AccountsReceivable}" Style="{StaticResource input_radiobutton}" Margin="5" 
                                         Tag="4" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>
                            <StackPanel Orientation="Horizontal" Margin="23,0" Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnAccReceivable}" >
                                <ComboBox Style="{StaticResource input_combobox}" VerticalAlignment="Center"
                                          IsEnabled="{Binding Path=IsChecked, ElementName=chkGenricReceivable, Converter={StaticResource TrueFalse}}"
                                          ItemsSource="{Binding Source={StaticResource contactCustViewSource}}"
                                          SelectedValuePath="id_contact" DisplayMemberPath="name"
                                          SelectedValue="{Binding id_contact, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                                <Label Content="or" Style="{StaticResource input_label}" VerticalAlignment="Center"/>
                                <CheckBox x:Name="chkGenricReceivable" Content="Generic" Style="{StaticResource input_checkbox}"
                                          IsChecked="{Binding is_generic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                            <!-- Takes Sum of Inventory -->
                            <RadioButton x:Name="rbtnInventory" Content="{lex:Loc Inventory}" Style="{StaticResource input_radiobutton}" Margin="5" 
                                     Tag="3" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>
                            <StackPanel Orientation="Horizontal" Margin="23,0" 
						                Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnInventory}">
                                <ComboBox Style="{StaticResource input_combobox}" VerticalAlignment="Center"
							              ItemsSource="{Binding Source={StaticResource item_tagViewSource}}"
                                          SelectedValuePath="id_tag" DisplayMemberPath="name"
                                          SelectedValue="{Binding id_tag, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox x:Name="chkGenericInventory" Content="Generic" Style="{StaticResource input_checkbox}"
                                      IsChecked="{Binding is_generic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                            <!-- Takes Fixed Assets (Capital Resource) -->
                            <RadioButton x:Name="rbtnFixedAssets" Content="{lex:Loc FixedAssets}" Style="{StaticResource input_radiobutton}" Margin="5" 
                                     Tag="1" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>
                            <StackPanel Orientation="Horizontal" Margin="23,0" 
						                Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnFixedAssets}">
                                <ComboBox Style="{StaticResource input_combobox}" VerticalAlignment="Center"
							              ItemsSource="{Binding Source={StaticResource item_asset_groupViewSource}}"
                                          SelectedValuePath="id_item_asset_group" DisplayMemberPath="name"
                                          SelectedValue="{Binding id_item_asset_group, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox x:Name="chkGenericFixedAsset" Content="Generic" Style="{StaticResource input_checkbox}"
                                      IsChecked="{Binding is_generic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                            <RadioButton x:Name="rbtnVATasset" Content="{lex:Loc VAT}" Style="{StaticResource input_radiobutton}" Margin="5"  
                                        Tag="6" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>
                            <StackPanel Orientation="Horizontal" Margin="23,0" 
						                Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnVATasset}">
                                <ComboBox Style="{StaticResource input_combobox}" VerticalAlignment="Center"
                                          IsEnabled="{Binding Path=IsChecked, ElementName=chkGenricVATasset, Converter={StaticResource TrueFalse}}"
                                          ItemsSource="{Binding Source={StaticResource app_vatViewSource}}"
                                          SelectedValuePath="id_vat" DisplayMemberPath="name"
                                          SelectedValue="{Binding id_vat, Mode=TwoWay, 
                                    ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                                <Label Content="or" Style="{StaticResource input_label}" VerticalAlignment="Center"/>
                                <CheckBox x:Name="chkGenricVATasset" Content="{lex:Loc Generic}" Style="{StaticResource input_checkbox}"
                                          IsChecked="{Binding is_generic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>

                        <!-- Liability -->

                        <StackPanel Visibility="{Binding SelectedValue, Converter={StaticResource AccountChartGroupLiabillity}, ElementName=cbxChartType}">
                            <Label Content="{lex:Loc Liabilities}" Style="{StaticResource H3}"/>
                            <!-- This is for Suppliers -->
                            <RadioButton x:Name="rbtnAccPayable" Content="{lex:Loc AccountsPayable}" Style="{StaticResource input_radiobutton}" Margin="5" 
                                          Tag="5" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>
                            <StackPanel Orientation="Horizontal" Margin="23,0" 
                                        Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnAccPayable}" >
                                <ComboBox Style="{StaticResource input_combobox}" VerticalAlignment="Center"
                                          IsEnabled="{Binding Path=IsChecked, ElementName=chkGenricAcPayble, Converter={StaticResource TrueFalse}}"
                                          ItemsSource="{Binding Source={StaticResource contactSupViewSource}}"
                                          SelectedValuePath="id_contact" DisplayMemberPath="name"
                                          SelectedValue="{Binding id_contact, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                                <Label Content="or" Style="{StaticResource input_label}" VerticalAlignment="Center"/>
                                <CheckBox x:Name="chkGenricAcPayble" Content="Generic" Style="{StaticResource input_checkbox}"
                                          IsChecked="{Binding is_generic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <!--<Button Content="{lex:Loc addCustomer}"/>-->
                            </StackPanel>

                            <RadioButton x:Name="rbtnVAT" Content="{lex:Loc VAT}" Style="{StaticResource input_radiobutton}" Margin="5"  
                                        Tag="6" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>
                            <StackPanel Orientation="Horizontal" Margin="23,0" 
						                Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnVAT}">
                                <ComboBox Style="{StaticResource input_combobox}" VerticalAlignment="Center"
                                          IsEnabled="{Binding Path=IsChecked, ElementName=chkGenricVAT, Converter={StaticResource TrueFalse}}"
                                          ItemsSource="{Binding Source={StaticResource app_vatViewSource}}"
                                          SelectedValuePath="id_vat" DisplayMemberPath="name"
                                          SelectedValue="{Binding id_vat,
                                                          Mode=TwoWay, ValidatesOnDataErrors=True, 
                                                          UpdateSourceTrigger=PropertyChanged}"/>

                                <Label Content="or" Style="{StaticResource input_label}" VerticalAlignment="Center"/>
                                <CheckBox x:Name="chkGenricVAT" Content="{lex:Loc Generic}" Style="{StaticResource input_checkbox}"
                                          IsChecked="{Binding is_generic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                            <RadioButton x:Name="rbtnVATRetain" Content="{lex:Loc VATWitholding}" Style="{StaticResource input_radiobutton}" Margin="5" 
                                        Tag="14" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>
                            <StackPanel Orientation="Horizontal" Margin="23,0"
						                Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnVATRetain}">
                                <ComboBox Style="{StaticResource input_combobox}" VerticalAlignment="Center"/>
                                <Label Content="or" Style="{StaticResource input_label}" VerticalAlignment="Center"/>
                                <CheckBox Content="Generic" Style="{StaticResource input_checkbox}"/>
                            </StackPanel>
                        </StackPanel>

                        <!-- Equity -->

                        <!-- Expense -->

                        <StackPanel Visibility="{Binding SelectedValue, Converter={StaticResource AccountingChartGroupExpense}, ElementName=cbxChartType}">
                            <Label Content="{lex:Loc Expenses}" Style="{StaticResource H3}"/>
                            <!-- This is for Suppliers -->
                            <RadioButton x:Name="rbtnHR" Content="{lex:Loc HumanResources}" Style="{StaticResource input_radiobutton}" Margin="5" 
                                           Tag="15" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>

                            <StackPanel Orientation="Horizontal" Margin="23,0" 
                                        Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnHR}" >
                                <CheckBox x:Name="chkGenricHR" Content="Generic" Style="{StaticResource input_checkbox}"
                                          IsChecked="{Binding is_generic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                            <RadioButton x:Name="rbtnAdminExpenses" Content="{lex:Loc Administrative}" Style="{StaticResource input_radiobutton}" Margin="5" 
                                             Tag="16" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>
                            <StackPanel Orientation="Horizontal" Margin="23,0" 
						                    Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnAdminExpenses}">
                                <ComboBox Style="{StaticResource input_combobox}" VerticalAlignment="Center"
                                              IsEnabled="{Binding Path=IsChecked, ElementName=chbxGenericAdminExpenses, Converter={StaticResource TrueFalse}}"
                                              ItemsSource="{Binding Source={StaticResource app_cost_centerViewSource}}"
                                              SelectedValuePath="id_cost_center" DisplayMemberPath="name"
                                              SelectedValue="{Binding id_cost_center, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                                <Label Content="or" Style="{StaticResource input_label}" VerticalAlignment="Center"/>
                                <CheckBox x:Name="chbxGenericAdminExpenses" Content="{lex:Loc Generic}" Style="{StaticResource input_checkbox}"
                                          IsChecked="{Binding is_generic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                            <RadioButton x:Name="rbtnServiceIncome" Content="{lex:Loc Service}" Style="{StaticResource input_radiobutton}" Margin="5" 
                                 Tag="16" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>
                            <StackPanel Orientation="Horizontal" Margin="23,0" 
						        Visibility="{Binding IsChecked, Converter={StaticResource Bool2Visibility}, ElementName=rbtnServiceIncome}">

                                <CheckBox x:Name="chkGenricDepreciation" Content="Generic" Style="{StaticResource input_checkbox}"
                                      IsChecked="{Binding is_generic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>

                        <!-- Income -->

                        <StackPanel Visibility="{Binding SelectedValue, Converter={StaticResource AccountingChartGroupIncome}, ElementName=cbxChartType}">
                            <Label Content="{lex:Loc Income}" Style="{StaticResource H3}"/>
                            <RadioButton x:Name="rbtnRevenue" Content="{lex:Loc Revenue}" Style="{StaticResource input_radiobutton}" Margin="5" 
                                             Tag="13" Checked="rbtnCash_Checked" Loaded="rbtnRevenue_Loaded"/>

                            <ComboBox Style="{StaticResource input_combobox}" VerticalAlignment="Center"
							              ItemsSource="{Binding Source={StaticResource item_tagViewSource}}"
                                          SelectedValuePath="id_tag" DisplayMemberPath="name"
                                          SelectedValue="{Binding id_tag, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>

            </TabItem>
            <TabItem Header="{lex:Loc Imports}">
                <StackPanel>
                    <TextBlock Style="{StaticResource text_Instructions}" 
                               Text="Checking this option will irreversably delete data from your system. Cognitivo is not responsible for any Data Loss."/>
                    <CheckBox x:Name="chbxDelete" Style="{StaticResource input_checkbox}" Content="{lex:Loc Delete}"/>
                    <WrapPanel>
                        <ToggleButton Click="btnParaguayChart_Click">
                            <StackPanel>
                                <Image Source="/Cognitivo;component/Images/Flags/PY.png" Height="42"/>
                                <Label Content="Paraguay" Style="{StaticResource H3}"/>
                            </StackPanel>
                        </ToggleButton>
                    </WrapPanel>
                </StackPanel>
            </TabItem>
        </TabControl>

        <cntrl:toolBar x:Name="toolBar" Grid.ColumnSpan="2" VerticalAlignment="Top" DataContext="{Binding SelectedItem_, ElementName=treeProject,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
			btnNew_Click="toolBar_btnNew_Click"
			btnEdit_Click="toolBar_btnEdit_Click"
			btnDelete_Click="toolBar_btnDelete_Click"
			btnSave_Click="toolBar_btnSave_Click"
			           btnCancel_Click="toolBar_btnCancel_Click" 
                      
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                        Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                       appName="ChartofAccount"/>
    </Grid>
</Page>

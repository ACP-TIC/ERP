<Page x:Name="pagePurReturn"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:entity="clr-namespace:entity;assembly=entity" xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl" x:Class="Cognitivo.Purchase.Return" 
    xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"
    xmlns:mainpref="clr-namespace:Cognitivo.Properties"
    xmlns:pref="clr-namespace:Cognitivo.Purchase"
    xmlns:customcmd="clr-namespace:Cognitivo.Class"
    xmlns:converter ="clr-namespace:Cognitivo.Converters"
    mc:Ignorable="d" 
    xmlns:lex="http://wpflocalizeextension.codeplex.com" 
        lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo" 
        lex:ResxLocalizationProvider.DefaultDictionary="local"
        lex:LocalizeDictionary.DesignCulture="en-US" 
      d:DesignHeight="500" d:DesignWidth="750" Loaded="Page_Loaded"
	Title="{lex:Loc PurchaseReturn}">
    <Page.CommandBindings>
        <CommandBinding x:Name="DeleteCommand" Command="customcmd:CustomCommands.Delete" CanExecute="DeleteCommand_CanExecute" Executed="DeleteCommand_Executed"/>
    </Page.CommandBindings>
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <converter:TrueToFalseConverter x:Key="TrueToFalse"/>
        <converter:CostCenterCanStockItemConverter x:Key="CostCenterCanStockItemCheck"/>
        <converter:CostCenterCanStockCodeConverter x:Key="CostCenterCanStockCodeCheck"/>
        <!--<CollectionViewSource x:Key="currencyfxViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_currencyfx}, CreateList=True}"/>-->
        <CollectionViewSource x:Key="purchase_returnViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:purchase_return}, CreateList=True}"/>
        <CollectionViewSource x:Key="purchase_returnpurchase_return_detailViewSource" Source="{Binding purchase_return_detail, Source={StaticResource purchase_returnViewSource}}"/>
        <CollectionViewSource x:Key="purchase_invoiceViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:purchase_invoice}, CreateList=True}"/>
        <CollectionViewSource x:Key="currencyfxViewSource" Source="{Binding app_currencyfx, Source={StaticResource purchase_returnViewSource}}"/>
       
      
        <CollectionViewSource x:Key="app_cost_centerViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_cost_center}, CreateList=True}"/>
        <CollectionViewSource x:Key="app_vat_groupViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_vat_group}, CreateList=True}"/>
    </Page.Resources>
    <Grid DataContext="{StaticResource purchase_returnViewSource}" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>


        <Grid Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden" Margin="0,-36,0,0"
              Grid.ColumnSpan="2" Grid.RowSpan="2" Panel.ZIndex="10"/>

        <ListBox Background="{DynamicResource AccentColor_Brush}" x:Name="purchase_returnDataGrid"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionChanged="purchase_returnDataGrid_SelectionChanged"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
                 ItemsSource="{Binding}" Grid.Row="1">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordCode="{Binding trans_date, StringFormat=D}" recordSecondaryName="{Binding contact.name}"
                                   recordName="{Binding number}"
                                   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>


        <Grid IsEnabled="{Binding is_accounted, Converter={StaticResource TrueToFalse}}" 
                    Grid.Row="1" Grid.Column="1" Background="White">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="290"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Column="0" Grid.Row="0" Margin="46,0" MinHeight="256" HorizontalAlignment="Center" 
                            IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                    <Label Content="{lex:Loc Date}" Style="{StaticResource input_label }" />
                    <DatePicker x:Name="trans_dateDatePicker" Style="{StaticResource input_datepicker}"
                                SelectedDate="{Binding trans_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <Label Content="{lex:Loc Supplier}" Style="{StaticResource input_label}" />
                    <Controls:SmartBox_Contact x:Name="sbxContact" Get_Suppliers="True" Select="set_ContactPref" HorizontalAlignment="Left"
                                                   Text="{Binding contact.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="{lex:Loc ReturnNumber}" Style="{StaticResource input_label}" />
                    <TextBox x:Name="numberTextBox" Style="{StaticResource input_textbox}"
                             Text="{Binding number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <Label Content="{lex:Loc Currency}" Style="{StaticResource input_label }" />
                    <Controls:CurrencyBox x:Name="cbxCurrency" appName="PurchaseReturn"
                                          SelectedValue="{Binding id_currencyfx, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                          LostFocus="cbxCurrency_LostFocus" Width="256" HorizontalAlignment="Left" MouseEnter="cbxCurrency_MouseEnter" />
                    <!--<Label Content="{lex:Loc PurchaseInvoice}" Style="{StaticResource input_label}"/>-->
                    <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <ComboBox x:Name="cbxPurchaseInvoice" Style="{StaticResource input_combobox}" 
                                  ItemsSource="{Binding Source={StaticResource purchase_invoiceViewSource}}"
                                  DisplayMemberPath="number" SelectedValuePath="id_purchase_invoice"
                                  SelectedValue="{Binding id_purchase_invoice, Mode=TwoWay, 
                                  ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                        <Button Content="O" FontSize="10" FontFamily="/Cognitivo;component/Resources/#cognitivo" Click="ButtonImport_Click"/>
                    </StackPanel>-->
                </StackPanel>
                <StackPanel Grid.Column="1"
                           IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}" Grid.ColumnSpan="2">
                    <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
                                    >
                        <CheckBox IsChecked="{Binding is_impex, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_checkbox}" Width="61" Content="Impex"/>
                    </StackPanel>
                    <StackPanel  Orientation="Horizontal" VerticalAlignment="Center" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="" Style="{StaticResource ico_Label}" 
                                FontFamily="/Cognitivo;component/Resources/#cognitivo"/>
                        <TextBlock Style="{StaticResource text_Data}">
                            <Hyperlink PreviewMouseUp="btnPurchaseInvoice_Click">
                                <Run Text="{lex:Loc PurchaseInvoice}"/>
                            </Hyperlink>
                        </TextBlock>
                    </StackPanel>
                    <Label Content="{lex:Loc Type}" Style="{StaticResource input_label}"/>
                    <ComboBox Grid.Column="1" Style="{StaticResource input_combobox}" Width="140"
                              Name="cbxReturnType" 
                              SelectedValue="{Binding return_type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                                      ValidatesOnExceptions=True, NotifyOnValidationError=True, 
                                                      ValidatesOnDataErrors=True}"/>                    
                    <StackPanel VerticalAlignment="Center" Margin="2">
                        <Label Content="{lex:Loc Comment}" Style="{StaticResource input_label}"/>
                        <TextBox x:Name="commentTextBox" Text="{Binding comment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MinHeight="64" 
                                 Style="{StaticResource input_textbox}" HorizontalAlignment="Stretch" Width="Auto" TextWrapping="Wrap"/>
                    </StackPanel>
                    <WrapPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="3" Grid.ColumnSpan="2">
                        <TextBlock x:Name="lblTotal" Text="{Binding return_Total, Source={StaticResource purchase_returnViewSource}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N}}" Style="{StaticResource TextAreaH2}"/>
                        <Label Content="{Binding app_currencyfx.app_currency.name}" Style="{StaticResource H3}" ContentStringFormat="{}{0:N}" VerticalAlignment="Center" Foreground="{StaticResource Label_ImportantColor}" />
                        <Label x:Name="lblVAT" Foreground="RoyalBlue" Content="{lex:Loc VAT}" VerticalAlignment="Center"/>
                        <Popup x:Name="popupVAT" IsOpen="{Binding ElementName=lblVAT, Path=IsMouseOver, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                               PlacementTarget="{Binding ElementName=gridvat}" Placement="Top">
                            <DataGrid x:Name="dgvvat" AutoGenerateColumns="False" EnableRowVirtualization="True" 
                              RowDetailsVisibilityMode="VisibleWhenSelected" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding id_vat}" Header="Id" Width="SizeToHeader" 
                                                Visibility="{Binding Source={x:Static mainpref:Settings.Default}, Path=Developer_Option, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                    <DataGridTextColumn Binding="{Binding name}" Header="Name" Width="150"/>
                                    <DataGridTextColumn Binding="{Binding value, StringFormat={}{0:N}}" Header="Value" Width="SizeToHeader"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Popup>
                    </WrapPanel>
                </StackPanel>
                <StackPanel IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}" Grid.Row="1" Grid.ColumnSpan="3" Margin="5"/>
                <Controls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="item_Select"
                                                 IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}" Grid.Row="1" VerticalAlignment="Top"/>
                <DataGrid x:Name="purchase_return_detailDataGrid" Margin="0,55,0,0"
                          IsReadOnly="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource TrueToFalse},
                                               UpdateSourceTrigger=PropertyChanged, FallbackValue=false}" 
                                  VerticalScrollBarVisibility="Auto" Grid.Row="1" Grid.ColumnSpan="2"
                                  AutoGenerateColumns="False" EnableRowVirtualization="True" 
                                  ItemsSource="{Binding Source={StaticResource purchase_returnpurchase_return_detailViewSource}}" InitializingNewItem="purchase_return_detailDataGrid_InitializingNewItem"
                                  RowDetailsVisibilityMode="VisibleWhenSelected" RowEditEnding="purchase_return_detailDataGrid_RowEditEnding" CellEditEnding="purchase_return_detailDataGrid_CellEditEnding">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding id_purchase_return_detail, UpdateSourceTrigger=PropertyChanged}" Header="Id" IsReadOnly="True" Width="SizeToHeader" Visibility="{Binding Source={x:Static mainpref:Settings.Default}, Path=developer_Option, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridCheckBoxColumn Header="{lex:Loc Cognitivo:local:Stock}" Width="30"/>
                        <DataGridComboBoxColumn Header="{lex:Loc Cognitivo:local:CostCenter}" Width="SizeToHeader"
						                        ItemsSource="{Binding Source={StaticResource app_cost_centerViewSource}}"
						                        DisplayMemberPath="name" SelectedValuePath="id_cost_center"
						                        SelectedValueBinding="{Binding id_cost_center, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Code}" Width="SizeToHeader" Binding="{Binding items.code, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Items}" Width="*" Binding="{Binding item_description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridComboBoxColumn Header="{lex:Loc Cognitivo:local:VAT}" Width="64" IsReadOnly="True"
					                        ItemsSource="{Binding Source={StaticResource app_vat_groupViewSource}}"  
                                            DisplayMemberPath="name" SelectedValuePath="id_vat_group" 
					                        SelectedValueBinding="{Binding id_vat_group, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

                            <DataGridTextColumn Binding="{Binding quantity, StringFormat={}{0:N2}, UpdateSourceTrigger=PropertyChanged}" Header="{lex:Loc Cognitivo:local:Quantity}" Width="SizeToHeader"/>
                        <!-- UnitPrice -->
                        <DataGridTextColumn Binding="{Binding unit_cost, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N2}}" 
                                        Header="{lex:Loc Cognitivo:local:Price}" ElementStyle="{StaticResource RightAlignStyle}" Width="Auto"
                                        Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Excluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        <DataGridTextColumn Binding="{Binding discount, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                        Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" Foreground="Crimson"
                                        Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Excluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

                        <!-- UnitPrice_Vat -->
                        <DataGridTextColumn Binding="{Binding UnitCost_Vat, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N2}}" 
                                        Header="{lex:Loc Cognitivo:local:PricewithVAT}" ElementStyle="{StaticResource RightAlignStyle}" Width="Auto"
                                        Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Included, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        <DataGridTextColumn Binding="{Binding DiscountVat, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                        Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" Foreground="Crimson"
                                        Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Included, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

                        <!-- SubTotal -->
                        <DataGridTextColumn IsReadOnly="True" Binding="{Binding SubTotal,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N2}}" 
                                        Header="{lex:Loc Cognitivo:local:SubTotal}" ElementStyle="{StaticResource RightAlignStyle}" Width="Auto"
                                        Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Excluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <DataGridTextColumn Binding="{Binding Discount_SubTotal, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                        Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto"  ElementStyle="{StaticResource RightAlignStyle}"
                                        Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Excluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

                        <!-- SubTotal_VAT -->
                        <DataGridTextColumn IsReadOnly="True" Binding="{Binding SubTotal_Vat, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, Mode=TwoWay, StringFormat={}{0:N2}}"
                                        Header="{lex:Loc Cognitivo:local:SubTotalwithVAT}" ElementStyle="{StaticResource RightAlignStyle}" Width="Auto"
                                        Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Included, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                        <DataGridTextColumn Binding="{Binding Discount_SubTotal_Vat, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                        Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto"  ElementStyle="{StaticResource RightAlignStyle}" Foreground="Crimson"
                                        Visibility="{Binding Source={x:Static pref:InvoiceSetting.Default}, Path=VAT_Included, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <DataGridTemplateColumn Width="Auto" Header="">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" Style="{StaticResource btnDeleteChildStyle}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
               
            </Grid>
        </Grid>

        <cntrl:toolBar x:Name="toolBar" appName="PurchaseReturn"
                       btnSearch_Click="toolBar_btnSearch_Click" 
                       btnDelete_Click="toolBar_btnDelete_Click" 
                       btnEdit_Click="toolBar_btnEdit_Click" 
                       btnCancel_Click="toolBar_btnCancel_Click" 
                       btnNew_Click="toolBar_btnNew_Click" 
                       btnSave_Click="toolBar_btnSave_Click" 
                       btnApprove_Click="toolBar_btnApprove_Click"
                       btnAnull_Click="toolBar_btnAnull_Click"
                       Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                       Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
    </Grid>
</Page>
